[
	{
		"id_rp": "1000",
		"id_proj": "15",
		"name_rp": "АЛГОРИТМЫ БЕСПИЛОТНОГО ТРАНСПОРТА",
		"name_proj": "Разработка системы движения роя дронов в пространстве",
        "text_rp": "Данный курс знакомит слушателей с основами управления беспилотными автомобилями. Рассматриваются основные компоненты таких сиcтем: модели и методы восприятия информации при помощи сенсоров или человеко-машинного интерфейса; методы определения собственного положения на известной и неизвестной карте; методы планирования пути (в том числе на графах и не на графах); фреймворк, подходящий для разработки собственных решений для беспилотных транспортных средств. Данный курс знакомит с уровнями автономности беспилотных средств, с основами машинного обучения, в том числе при помощи нейросетей, операционной системой Robot Operating System, являющейся де-факто стандартным решением для многих роботов, в том числе бепилотных автомобилей. Курс позволяет освоить основные приёмы программирования в ROS, алгоритмов локализации и построения карты (SLAM), алгоритмов машинного зрения . Сформировать у обучающихся знания, умения и навыки обоснованного и результативного применения существующих методов, моделей, а также алгоритмов для управления беспилотными автомобилями и другими автономными интеллектуальными системами. Обучить применению существующих, а также освоению новых методов и моделей беспилотного транспорта. Дать знания о существующих методах и алгоритмах беспилотного транспорта, а также методологии построения систем беспилотного транспорта. Дать умения разрабатывать алгоритмы для беспилотного транспорта и применять методы компьютерного зрения и машинного обучения для решения задач беспилотного транспорта. Привить навыки разработки и анализа алгоритмов автономного движения, наблюдения окружающего мира, фильтрации данных. ИДЗ  заключается в аналитическом поиске необходимой информации для решения поставленной задачи, решении и развернутом описании решения. Источниками информации являются лекции, основная и дополнительная литература, интернет-источники. Задание на ИДЗ выдается в начале семестра. Отчеты по ИДЗ оформляются в соответствии с требованиями к отчету по лабораторной работе, приведенными на сайте СПбГЭТУ \"ЛЭТИ\" в разделе \"Шаблоны оформления студенческих работ\". Объем отчета не менее 5 страниц формата А4, отчет представляется в электронном виде. Примерные темы ИДЗ: Разработайте приложение, основанное на применении ROS, обрабатывающее данные лазерного дальномера Разработайте или модифицируйте алгоритм SLAM для решения задачи одновременной локализации и построения карты Разработайте или модифицируйте алгоритм семантической сегментации изображений при помощи нейросетей Разработайте алгоритм движения беспилотного автомобиля в симуляторе. . ЭКЗАМЕНАЦИОННЫЙ БИЛЕТ № 1 Дисциплина Алгоритмы беспилотного транспорта 1. Локализация на известной карте. Структуры данных для хранения карты в памяти. 2. Скан матчер на основе стохастического поиска. Достоинства, недостатки и область применения УТВЕРЖДАЮ Заведующий кафедрой . Введение. Общие сведения об автономных и интеллектуальных системах. Беспилотные автомобили. Задачи, решаемые беспилотными автомобилями. Уровни автоматизации беспилотных автомобилей. Датчики и сенсоры. Стек алгоритмов, выполняемых беспилотными автомобилями. Введение в Robot Operating System. Назначение ROS. Место ROS в беспилотных автомобилях. Программная единица в ROS. Методы взаимодействия между программными единицами. Разработка собственного приложения, использующего ROS. Программирование с использованием ROS. Подготовка CMake файлов, xml-файлов с параметрами. Запуск готовых приложений. Компиляция и сборка приложений ROS. Структура рабочего каталога. Разработка, запуск и логгирование собственных приложений. Использование пакетов, поставляемых с ROS. Визуализация графа взаимодействий программных модулей ROS. Назначение и применение пакетов ROS для упрощения разработки. Назначение и применение пакета TF. Использование сгенерированного исходного кода. Инструменты для визуализации и отладки приложений, использующих ROS. Пакет RVIZ, семейство пакетов rqt, пакет Rqt_graph, пакет Gazebo. Настройка файлов логов. Отладка средствами ROS. Многопоточность в ROS. Введение в машинное обучение. Обучение с учителем. Задача классификации и регрессии. Обучение без учителя. Кластеризация. Нейронные сети. Понятие нейрона, перцептрона и простейшая нейронная сеть. Слои в нейронных сетях. Применение нейронных сетей. Нейронные сети прямого распределения. Перцепторны. Полносвязные сети. Нейронная сеть Хопфилда. Свёрточные нейронные сети. Развёртывающие нейронные сети. Классификация и кластеризация изображений при помощи нейронных сетей. Нейросеть Кохонена. Функционирование сети. Современные модификации свёрточных нейросетей для задачи кластеризации. Недостатки. Ускорение работы. Синтетические данные для обучения. Задача фильтрации данных. Постановка задачи фильтрации. Рекурсивный фильтр. Модель. Комплексирование. Априорная и апостериорная оценка. Расширенный фильтр Калмана. Матричная линеаризация. Фильтр Калмана со старением. Задача одновременной локализации и построения карты SLAM. Постановка задачи SLAM. Решение на базе фильтра Калмана. Фильтр частиц. FastSLAM. Gmappnig. Scan matching. Графовые подходы. Методы оценки качества SLAM алгоритмов. Применение SLAM к задаче беспилотных автомобилей. Методы представления и хранения карты. Карта в EKF SLAM. Сетка занятости. Детали реализации графовых алгоритмов SLAM. Определение и замыкание циклов в графе. Методы визуализации карты в ROS. Методы оценки качества построенной карты. Задача построения пути. Задача поиска пути на графе. Алгоритм Дейкстры. А*. Методы построения пути на неизвестной карте. Локальный планировщик пути. PID-регулятор. Синергия глобального и локального планировщика. Duckietown как модель города с беспилотными автомобилями. Назначение Duckietown. Описание составных частей. Робот Duckiebot. Компоненты робота. Автомат состояний Ducketown. Применение Duckietown в качестве модели беспилотного транспорта. Автоматизация движения по проложенному маршруту в симуляторе Duckietown. Датчики Duckiebot. Применение алгоритмов SLAM к Duckietown. Построение маршрута в Duckietown. Симулятор Duckitown. Запуск всех компонентов беспилотного автомобиля в симуляторе. Заключение. Обсуждение состояния прикладной технологии автопилотируемых транспортных средств на ближайшие годы.",
		"text_proj": "Разработка системы движения роя дронов в пространстве. Объект исследования: движения роя Предмет исследования: безопасность движения каждого участника роя в штатных и экстренных случаях Цель : обеспечить безопасность каждому участнику роя дронов во время выполнения манёвров и иных задач, для выполнения которых предполагается привлечение несколько дронов. Проблема: обеспечивать каждого дрона самостоятельной системой избегания препятствий дорого и неэффективно Формулировка задачи: необходимо сформулировать аппаратную и программную конфигурацию роя дронов так, чтобы в процессе выполнения полётной задачи с привлечением роя, обеспечивалась безопасность каждого участника роя индивидуально или в групповом взаимодйствии. Формулирование аппаратной части подразумевает ответ на вопрос, сколько дронов в рою и какими датчиками должны быть оснащены для достижения тех или иных показателей эффективности. Формирование программной конфигурации подразумевает реализацию алгоритма действий в штатной и нештатных ситуаций для обеспечения безопасности уастников роя. Обязательно должен: знать: язык программирования (С++ или Java или Python); уметь: работать в команде. Желательно должен: знать: математические сновы теории графов (алгоритм Дейкстры, А*.); владеть: английским языком достаточным для чтения статей. В результате получит: знания: математические основы движения дронов обособленно и в рое, алгоритмы машинного обучения; умения: проведение научного исследования, прикладное создание программного фреймворка; опыт: работы на предприятии в условиях проекта, близкого к реальному. Сформировать список методов безопасного роевого движения. 1.Сформировать список методов безопасного роевого движения. Создать framework, позволяющий решать задачу идентификации несколькими методами. 1.Создать framework, позволяющий решать задачу идентификации несколькими методами. Сформировать критерии сравнения алгоритмов. 1.Сформировать критерии сравнения алгоритмов. Сравнить запрограммированные алгоритмы по выбранным критериям. 1.Сравнить запрограммированные алгоритмы по выбранным критериям.",
		"need_match": true
	},
	{
		"id_rp": "1005",
		"id_proj": "40",
		"name_rp": "АНАЛИЗ ДАННЫХ В ИСКУССТВЕННОМ ИНТЕЛЛЕКТЕ",
		"name_proj": "Роботизированная система машинного творчества ARTCYBE",
		"text_rp": "Освещаемые в курсе теоретические и прикладные вопросы полезны для студентов, специализирующихся в области управления и информационных технологий в технических системах, компьютерного и математического моделирования. В курсе даются основы Data Science, включающие вопросы сбора, хранения и подготовки данных (выявление аномалий в сырых данных, очистка данных от шума, дополнение данных, заполнение (удаление) пропущенных значений), классификации и кластеризации, поиска ассоциативных правил, интерполяции, экстраполяции и аппроксимации, корреляционного и регрессионного анализа, искусственного интеллекта и машинного обучения, нейронных сетей, сверточных нейронных сетей. Кроме того, в курсе рассматривается современная вычислительная база в контексте решения задач Data Science (CUDA, GPU, FPGA, SoC). Уделяется внимание решению практических задач с использованием современных программно\u00ADаппаратных средств (MATLAB, Python, R, GPU).. Цель дисциплины - изучение математических моделей, методов и алгоритмов анализа данных и искусственного интеллекта и приобретения навыков их применения в профессиональной деятельности и навыков выбирать и применять методы сбора и извлечения знаний. Формирование знаний и умений, необходимых для решения задач в области анализа данных и искусственного интеллекта с использованием современной вычислительной базы. Приобретение теоретических знаний в области анализа данных и искусственного интеллекта. Умение использования современной вычислительной базы для решения задач в области анализа данных и искусственного интеллекта. Выбирать и разрабатывать программные компоненты систем искусственного интеллекта и ставить задачи по разработке или совершенствованию методов и алгоритмов для решения комплекса задач предметной области. Получение практических навыков использования современной вычислительной базы для решения задач в области искусственного интеллекта.. Контрольная работа проводится в виде тестирования. Сигнал, определенный в фиксированные (заданные) моменты времени и являющийся непрерывным по состоянию, называется: 1.     Дискретным сигналом 2.     Аналоговым сигналом 3.     Цифровым сигналом Реакция системы на цифровой единичный импульс при нулевых начальных условиях называется: 1.     Переходной характеристикой 2.     Импульсной характеристикой 3.     Амплитудно-частотной характеристикой Растекание спектра – это: 1.     Появление дополнительных составляющих в спектральном составе последовательности при вычислении ДПФ 2.     Повышение частоты следования спектральных линий (уменьшение периода дискретизации по частоте) за счет дополнения последовательности нулями 3.     Расширение спектра за счет умножения сигнала на специальную расширяющую последовательность Фильтр, пропускающий спектральные составляющие сигнала в заданной полосе частот и подавляющий спектральные составляющие сигнала за пределами данной полосы, называется: 1.     Фильтр нижних частот 2.     Полосно-пропускающий (полосовой) фильтр 3.     Полосно-задерживающий (режекторный) фильтр Укажите, какая из нижеприведенных задач решается с использованием обратной идентификации и адаптивных фильтров: 1.     Оценивание импульсной характеристики неизвестной системы 2.     Очистка сигнала от шума 3.     Компенсация искажений, вносимых неизвестной системой Сигнал, определенный в фиксированные (заданные) моменты времени и являющийся квантованным по состоянию, называется:        1.       Дискретным сигналом        2.       Аналоговым сигналом        3.       Цифровым сигналом Реакция системы на цифровой единичный скачок при нулевых начальных условиях называется:        1.       Переходной характеристикой        2.       Импульсной характеристикой        3.       Амплитудно-частотной характеристикой Фильтр, подавляющий спектральные составляющие сигнала в заданной полосе частот и пропускающий спектральные составляющие сигнала за пределами данной полосы, называется:        1.       Фильтр верхних частот        2.       Полосно-пропускающий (полосовой) фильтр        3.       Полосно-задерживающий (режекторный) фильтр Изменение частоты дискретизации сигнала в нецелое число раз называется:        1.       Интерполяцией        2.       Децимацией        3.       Передискретизацией Сигнал, непрерывный по времени и по состоянию называется:        1.       Дискретным сигналом        2.       Аналоговым сигналом        3.       Цифровым сигналом     ASIC – это 1.     Класс ПЛИС 2.     Фирма-изготовитель ПЛИС 3.     Заказная микросхема на основе программируемой логики       Открытым стандартом для написания программ для GPU в настоящее время является 1.     OpenCL 2.     C++ 3.     JAVA Именно эти две фирмы являются мировыми лидерами в производстве ПЛИС 1.     Intel FPGA (Altera), Atmel 2.     Intel FPGA (Altera), Xilinx 3.     Xilinx, Atmel          Именно это семейство ПЛИС фирмы Intel FPGA (Altera) относится к SOC 1.     CycloneV 2.     ArriaII 3.     MaxV          К семействам ПЛИС фирмы Intel FPGA (Altera) не относится следующее 1.     Cyclone 2.     Virtex 3.     Arria       Такую разрядность имеют DSP блоки в FPGA фирмы Intel FPGA (Altera) 1.     9x9 2.     18x18 3.     20x20       Помимо фирмы Nvidia технология распределённых вычислений на графических процессорах есть у фирмы 1.     Intel 2.     AMD 3.     Apple        Барьер для группы процессов или потоков означает, что 1.     Каждый поток (процесс) должен остановиться в этой точке и подождать достижения барьера всеми потоками (процессами) группы 2.     Выполнение программы дальше невозможно 3.     Все потоки после барьера объединяются       IDE среда фирмы Intel FPGA (Altera) для проектирования на ПЛИС называется 1.     QuartusII 2.     Vivaldo 3.     AVR-studio         Утилита в среде QuartusII для отладки в реальном времени называется 1.     SignalTap 2.     SignalProbe 3.     ChipPlanner. Билет содержит 2 теоретических вопроса из списка (из каждой группы \u00AD 1 вопрос). . Введение. Искусственный интеллект. Машинное обучение. Общая постановка задачи обучения по прецедентам. Типология обучения задач по прецедентам. Бустинг. Бэггинг. Области применения ИИ. Искусственный интеллект и машинное обучение. Как подготовить данные к моделированию: 5 операций Data Preparation. Почему нужно готовить данные к моделированию. Как Data Scientist готовит данные: методы и средства Data Preparation. Отберем то, что нужно Data Mining: как сформировать датасет для машинного обучения. Что такое датасет для Data Mining и из чего он состоит. Где искать датасеты. Каким бывает dataset: типы выборок. Как сформировать выборку для Data Mining. Зачем нужна очистка данных для Data Mining: 10 главных проблем подготовки датасета и способы их решения. Что такое очистка данных для Data Mining. От чего надо чистить большие данные. Как Data Scientist чистит данные: детали фазы Data Preparation Это не баг, а фича: генерация признаков для Data Mining. Признаки для Data Mining: определение и виды. Как проходит генерация признаков: 3 задачи этого этапа Data Mining и способы их решения.Data Preparation: полет нормальный – что такое нормализация данных и зачем она нужна. Сбор, хранение и подготовка данных. Дополнение данных, заполнение (удаление) пропущенных значений. Сырые данные. Выбросы. Причины выбросов. Определение выбросов. Критериии выбросов I. Гистограмма. Ящик с усами. Критерий Шовене. Критерий Граббса. Критерий Пирса. Критерий Диксона. Правило 3 сигм. Критерии выбросов II. Статистические тесты. Модельные тесты. Итерационные методы. Метрические методы. Методы подмены задачи. Методы машинного обучения. Ансамбли алгоритмов. ROC\u00ADанализ. Алгоритмы очистки сигналов от шума. Преобразование Фурье. Вейвлет\u00ADпреобразование. Фильтр Винера. Алгоритмы Empirical Mode Decomposition и Intrinsic Time\u00ADScale Decomposition. Алгоритмы очистки изображений от шума. Типовые шумы. Виды шумов: аналоговый, цифровой. Методы шумоподавления: пространственные, временные, пространственно\u00ADвременные. Качество шумоподавления. Метрики качества: PSNR и SSIM. Усредняющий фильтр. Медианный фильтр. Гауссовский фильтр. Билатеральный фильтр. Алгоритм NLM. Подготовка данных. Выявление аномалий в сырых данных, очистка данных от шума. Задача классификации. Типы входных данных. Типы классов. Области применения. Формальная постановка задачи. Алгоритмы классификации. Метод ближайших соседей. Байесовский классификатор. Деревья решений. Классификация. Задача кластеризации. Типы входных данных. Цели кластеризации. Функции расстояния. Формальная постановка задачи. Алгоритмы кластеризации. Метод kсредних. Метод c\u00ADсредних. Генетический алгоритм. Кластеризация. Задача поиска ассоциативных правил. Формальная постановка задачи. Концепции. Процесс построения ассоциативных правил. Алгоритмы поиска ассоциативных правил. Поиск ассоциативных правил. Аппроксимация. Постановка задачи. Метод наименьших квадратов. Линейная аппроксимация. Логарифмическая аппроксимация. Экспоненциальная аппроксимация. Степенная аппроксимация. Интерполяция. Постановка задачи. Локальная и глобальная интерполяция. Интерполяционный многочлен Лагранжа. Интерполяционный многочлен Ньютона. Экстраполяция. Временные ряды. Компоненты временных рядов. Объединение компонентов временного ряда. Оценка тренда. Виды функциональных зависимостей. Выделение тренда. Метод скользящего среднего. Метод экспоненциального сглаживания. Прогнозирование. Двойное экспоненциальное сглаживание. Метод Хольт\u00ADВинтерса. Качество прогнозирования. Аппроксимация, интерполяция и экстраполяция. Временные ряды: тренд, сезонность, шум. Прогнозирование. Аппроксимация. Постановка задачи. Метод наименьших квадратов. Линейная аппроксимация. Логарифмическая аппроксимация. Экспоненциальная аппроксимация. Степенная аппроксимация. Интерполяция. Постановка задачи. Локальная и глобальная интерполяция. Интерполяционный многочлен Лагранжа. Интерполяционный многочлен Ньютона. Экстраполяция. Временные ряды. Компоненты временных рядов. Объединение компонентов временного ряда. Оценка тренда. Виды функциональных зависимостей. Выделение тренда. Метод скользящего среднего. Метод экспоненциального сглаживания. Прогнозирование. Двойное экспоненциальное сглаживание. Метод Хольт\u00ADВинтерса. Качество прогнозирования. Корреляционный анализ. Регрессия и регрессионный анализ. Линейная регрессия. Нелинейная регрессия. Регрессионнный анализ. Что такое нейронная сеть (НС)? Хронология. Классификация НС. Этапы решения задачи. Области применения НС. Структура нейрона. Синапс. Принципы работы НС. Функция активации. Обучение, валидация, тестирование. Итерация. Эпоха. Ошибка. Нейрон смещения. Обучение НС. Градиентный спуск. Метод обратного распространения (МОР). Гиперпараметры. Cходимость. Переобучение. Нейронные сети. Сверточные нейронные сети (СНС). Архитектура СНС. Слой свертки. Слой активации. Пулинг или субдискретизирующий слой. Полносвязная НС. Обучение СНС. Преимущества СНС. Недостатки СНС. Сверточные нейронные сети. Цифровые процессоры обработки сигналов (ЦПОС). Графические процессоры (GPU). Программируемые логические интегральные схемы (ПЛИС). Технология CUDA.Системы на кристалле (SoC). Языки математических и научных расчетов: MATLAB, Python, R.",
		"text_proj": "Роботизированная система машинного творчества ARTCYBE. Комплексный проект в области робототехники и искусственного интеллекта.  Исследования в области компьютерного творчества (Computer Creativity). Генерация художественных изображений с помощью GAN-сетей по введенным растровым, свободная генерация изображений в заданном художественном стиле, переход от растровых изображений к векторным картам. Исследования в области машинного зрения. Разработка системы обратной связи для робота-живописца. Разработка конструкции художественных роботов различной архитектуры. Проведение художественного теста Тьюринга в формате выставки картин. Базовые знания программирования на MATLAB, коммуникабельность, высокая социализация. Знать основы аналоговой и цифровой схемотехники, методы обработки изображений, навыки слесарной работы, монтажа. Навыки работы с генеративными нейронными сетями, знания в области современной робототехники и аддитивных технологий, знания в области алгоритмов цифровой обработки изображений, опыт проектирования аддитивных установок.",
		"need_match": true
	},
	{
		"id_rp": "1009",
		"id_proj": "4",
		"name_rp": "РАЗРАБОТКА ПРИЛОЖЕНИЙ В РАСПРЕДЕЛЕННОЙ СРЕДЕ",
		"name_proj": "Разработка модулей обработки данных для библиотеки алгоритмов федеративного обучения FL4J ",
        "text_rp": "Дисциплина посвящена изучению основных принципов распределённых систем. В теоретической части курса рассматриваются вопросы о взаимодействии и синхронизации процессов, достижении непротиворечивости реплицируемых данных, обеспечении отказоустойчивости в распределенных системах. В процессе освоения дисциплины формируются практические навыки разработки распределенных приложений на объектно-ориентированном языке программирования Java с использованием различных моделей взаимодействия процессов. . Целью дисциплины является изучение принципов распределённых систем и формирование практических навыков разработки распределенных приложений с использованием различных моделей взаимодействия процессов. Получение теоретических знаний в области взаимодействия и синхронизации процессов, достижения непротиворечивости реплицируемых данных, обеспечения отказоустойчивости в распределенных системах. Формирование практических навыков разработки распределенных приложений на объектно-ориентированном языке программирования Java. Освоение подходов к построению архитектуры распределенного приложения. Знания принципов построения распределенных систем; методов и инструментальных средств систем искусственного интеллекта, критериев их выбора и методов комплексирования; основных критериев эффективности и качества функционирования системы искусственного интеллекта; методов, языков и программных средств разработки программных компонентов систем искусственного интеллекта. Умения разрабатывать распределенные приложения; выбирать, применять и интегрировать методы и инструментальные средства систем искусственного интеллекта, критерии их выбора и методы комплексирования; выбирать, адаптировать, разрабатывать и интегрировать программные компоненты систем искусственного интеллекта с учетом основных критериев эффективности и качества функционирования. Навыки использования интегрированной среды разработки в процессе создания распределенных приложений.. Введение. Предмет дисциплины и ее задачи. Историческая справка о развитии распределенных систем. Значение развития этого направления для искусственного интеллекта. Структура содержания дисциплины. Характеристика литературных источников. Модели взаимодействия процессов в распределенных системах. Потоки и процессы. Модели взаимодействия процессов - удаленное обращение к методам, системы очередей сообщений. Примеры использования удаленного обращения к методам на практике. Типы процессов в распределенных системах. Внутренняя организация процессов. Многопоточные технологии. Модель клиент-сервер и ее организация. Варианты миграции программ и процессов с машины на машину. Способы использования имен в распределенных системах. Имя и сущность. Организация доступа к сущности. Пространства имен. Разрешение имени. Реализация системы именования. Серверы имен. Примеры существующих реализаций пространств имен. Мобильные сущности. Подходы к их локализации. Организация имен. Взаимодействие сущностей именования и локализации. Механизмы автоматического удаления сущностей. Синхронизация процессов в распределенных системах. Синхронизация на основе реального времени. Синхронизация с одним относительным параметром упорядочивания. Определение распределенного глобального состояния и его запись в процессе синхронизации. Алгоритмы голосования. Распределенные взаимные исключения. Распределенные транзакции, их классификация и реализация. Реплицируемые данные в распределенных системах. Понятие репликации данных. Реплицируемые объекты. Непротиворечивость реплицируемых данных. Способы достижения непротиворечивости данных в распределенных системах. Модели непротиворечивости данных в распределенных системах с разделяемой памятью. Реализации моделей непротиворечивости - распространение обновлений и поддержание непротиворечивости реплик. Заключение. Основные направления дальнейшего развития и практического использования распределенных систем и технологий в искусственном интеллекте. ",
		"text_proj": "Разработка модулей обработки данных для библиотеки алгоритмов федеративного обучения FL4J.   Разработка фреймворка для алгоритмов федеративного обучения предназначенных для выполнения анализа данных (машинного обучения) на распределенных источниках данных без их передачи в центр обработки.  Технология предложена  в 2017 году Google Inc и предназначена для обучения на Больших данных в условиях когда данные не могут передаваться в облако по причине плохой связи или приватности данных. В настоящее время технология активно развивается и появляется множество библиотек на языке Python (FATE, PaddleFL, TensorFlow Federate и др.).     Разработанная в СПбГЭТУ \"ЛЭТИ\" библиотека FL4J (Federated Learning for Java) написана на языке Java. Она позволяет как реализовать алгоритмы машинного обучения для выполнения в федеративном режиме, так и подключать другие библиотеки, например, библиотеку DL4J для алгоритмов глубокого обучения.  В данном проекте требуется разработка: разработка модулей для чтения данных разных форматов; доработка модулей обработки данных (нормализации, пропущенных значений и т.п.); модулей преобразования наборов данных.  . Обязательно должен: знать: принципы ООП, язык программирования Java уметь: программировать на Java. Желательно должен: знать: работу с файлами и БД уметь: работать с файлами разных форматов Excel, Json и др. опыт: использования Unit тестов (JUnit). В результате получит: знания: работу с файлами и БД, методы преобразования и обработки данных умения: обрабатывать данные для машинного обучения опыт: программирование на языке Java, использования Unit тестов (JUnit). Резюме о навыках. Требуется написать кратко что Вы умеете и чем хотели бы заниматься (работа с изображениями, БД, иные форматы данных, улучшение производительности доступа к данным и др).",
		"need_match": true
	},
	{
		"id_rp": "1011",
		"id_proj": "14",
		"name_rp": "Тестирование и сопровождение программного обеспечения",
		"name_proj": "Тестирование и документирование стенда виртуальных рабочих мест (VDI) под российским ПО виртуализации",
		"text_rp": "Цели дисциплины охватывают ряд направлений, связанных с планированием тестирования, выявления рисков продукта и проекта, составления критериев входа в тестирование и выхода, управления инцидентами, разработку тестов, выбор методов тестирования, осуществление тестирования, составление итоговой отчетности по тестированию. . Цель учебной дисциплины заключается в усовершенствовании техники логического тестирования и отладки программ, а также применении полученных навыков в тестировании и отладке программ, формирование у студентов профессиональных компетенций, связанных с использованием теоретических знаний и практических навыков в области обеспечения качества программного обеспечения. Задачи дисциплины: 1). Изучение основных процессов и видов тестирования, моделей разработки ПО, процессов сопровождения ПО, получение знаний о методах управления процессом сопровождения, методах организации работы при решении задач сопровождения ПО. 2). Формирование умений планировать тестирование, выявлять риски продукта и проекта, составлять критерии входа в тестирование и выхода, управлять инцидентами, разрабатывать тесты, выбирать методы тестирования, осуществлять тестирование, составлять итоговую отчетность по тестированию, формулировать требования к уровням сопровождения ПО, использовать международные и отечественные стандарты в области сопровождения ПО, использовать нормативные правовые документы при сопровождении ПО. 3). Освоение навыков разработки тестов (эквивалентное разбиение, анализ граничных значений, тестирование таблицы решений, тестирование таблицы переходов, тестирование по сценариям использования), интегрированной средой разработки и различными инструментами тестирования и планирования тестирования. Знания: - об основных методах и средствах эффективного анализа функционирования программного обеспечения; - об основных видах работ на этапе сопровождения программного обеспечения; - об основных принципах контроля конфигурации и поддержки целостности конфигурации программного обеспечения; - о средствах защиты программного обеспечения в компьютерных системах. Умение: - подбирать и настраивать конфигурацию программного обеспечения компьютерных систем; - использовать методы защиты программного обеспечения компьютерных систем; - проводить инсталляцию программного обеспечения компьютерных систем; - производить настройку отдельных компонентов программного обеспечения компьютерных систем; - анализировать риски и характеристики качества программного обеспечения. Навыки: - настройки отдельных компонентов программного обеспечения компьютерных систем; - выполнения отдельных видов работ на этапе поддержки программного обеспечения компьютерной системы.. Введение. Место тестирования в жизненном цикле разработки программного обеспечения. Основные понятия дисциплины. Роль тестирования в разработке программного обеспечения, сопровождении и функционировании программного обеспечения. Планирование и управление тестированием. Анализ и проектирование тестов. Природа сопровождения. Потребность в сопровождении. Приоритет стоимости сопровождения. Категории сопровождения. Тестирование в модели ЖЦ. Уровни и Типы тестирования. Альфа тестирование, бета тестирование, компонентное тестирование. Итерационное тестирование. Системное тестирование. Приемочное тестирование. Тестирование методом черного ящика, покрытие кода, функциональное тестирование, тестирование взаимодействия, нагрузочное тестирование, тестирование восстановления, тестирование производительности. Тестирование переносимости, тестирование надежности, тестирование безопасности, стресс-тестирование, структурное тестирование, тестирование удобства использования, тестирование методом белого ящика. Анализ влияния, тестирование в период сопровождении. Формальное и неформальное рецензирование. Критерий входа, инспекция, метрика, модератор, равноправный анализ, эксперт, секретарь, технический анализ, сквозной контроль. Действия (шаги) формального рецензирования. Роли и обязанности. Типы рецензирований. Факторы успешного проведения. Компилятор, коэффициент сложности, поток управления, поток данных, статистический анализ. IEEE 1028] IEEE Std 1028 (2008) IEEE Standard for Software Reviews and Audits. Методы проектирования тестов. Жизненный цикл дефекта. Типы дефектов на разных фазах тестирования. Управление дефектами. Баг-трэкинговые системы. Тест-кейсы. Спецификация тестовых сценариев, проектирование теста, расписание выполнения тестов, спецификация процедуры тестирования, автоматизированный сценарий тестирования, трассируемость. Разработка тестов методом черного ящика, разработка тестов методом белого ящика, метод создания тестов на основе опыта, метод разработки тестов на основе спецификации, структурный метод разработки тестов. Анализ граничных значений, тестирование таблицы решений. Эквивалентное разбиение, тестирование таблицы переходов, тестирование по сценариям использования. Покрытие кода, покрытие альтернатив, покрытие операторов, тестирование на основе структуры. Исследовательское тестирование, атака (на недочеты). Выбор методов тестирования. Управление тестированием. Тестировщик, руководитель тестирования, менеджер тестирования. Организация и независимость тестирования. Подход к тестированию, стратегия тестирования. Планирование тестирования. Управление конфигурацией. Управление версиями. Риски продукта, риски проекта, ориентированное на риски тестирование. Инструмент покрытия, инструмент отладки, инструмент динамического анализа, инструмент управления инцидентами, инструмент нагрузочного тестирования, инструмент моделирования, инструмент мониторинга, инструмент тестирования производительности, эффект зондирования, инструмент управления требованиями, инструмент рецензирования, средство защиты, инструмент статистического анализа, инструмент стрессового тестирования, тестовый компанатор, инструмент подготовки тестовых данных, инструмент проектирования тестов, тестовая обвязка, инструмент выполнения тестов, инструмент управления тестированием, инструмент интегрированной среды модульного тестирования. Ключевые вопросы сопровождения программного обеспечения. Технические вопросы. Управленческие вопросы. Оценка стоимости сопровождения. Измерения в сопровождении программного обеспечения. Процессы сопровождения. Работы по сопровождению. Техники сопровождения. Реинжиниринг. Обратный инжиниринг. Введение в ITIL. Что такое ITIL, другие существующие методологии. Управление ИТ-сервисами (IT Service Management). Жизненный цикл сервиса. Ролевая модель, понятие Роли. RACI-модель. Стратегия сервиса и проектирование сервиса. Ценность управления услугами. Понятия и определения. Формирование стратегии. Оценка рисков. Управление финансами. Управление спросом. Принцип 4Р. 5 составляющих сервисного дизайна. Управление уровнем услуг. Управление каталогом услуг. Управление мощностями. Управление доступностью. Управление непрерывностью. Управление информационной безопасностью. Управление поставщиками. Преобразование сервиса и Эксплуатация сервиса. Достижение баланса. Управление инцидентами. Управление событиями. Управление запросами. Управление проблемами. Управление доступом. Функции. Сервис Деск (Service Desk). Service Desk: Роль. Service Desk: Организационная структура. Service Desk: Критерии построения. Service Desk: Возможные проблемы внедрения. Service Desk: Метрики. Техническое управление. Управление операционной деятельностью ИТ. Управление приложениями. Постоянное улучшение сервисов. Заключение. Цели CSI. Роль постоянного улучшения сервисов. Модель PDCA. Метрики. 7-ми ступенчатый процесс улучшения сервиса. Развитие задач тестирования и сопровождения ПО.",
		"text_proj": "Тестирование и документирование стенда виртуальных рабочих мест (VDI) под российским ПО виртуализации. Тестирование стенда VDI под российским ПО виртуализации, разработка технической документации по результатам тестирования. Обязательно должен: знать:. уметь:. владеть:. Желательно должен: знать:. уметь:. владеть:. В результате получит: знания: Современных аппаратных и программных средств виртуализации, знание ГОСТ. умения: Использования современных программных средств виртуализации. опыт: Тестирования и разработки технической документации.",
		"need_match": true
	},
	{
		"id_rp": "1016",
		"id_proj": "46",
		"name_rp": "Интеллектуальные системы",
		"name_proj": "Разработка интеллектуальных модулей обработки данных на FPGA",
		"text_rp": "Рассматриваются основные понятия теории интеллектуальных систем; средства языка логического программирования для разработки интеллектуальных систем: рекурсивные программы, решение логических задач с использованием структур данных – списков и деревьев; интерактивная визуальная среда логического программирования Visual Prolog; основы построения и использования экспертных систем; методы планирования действий в интеллектуальных системах; теоретические и практические основы организации обучения в интеллектуальных системах; методы поиска в условиях противодействия. Лабораторные работы ориентированы на изучение языка логического программирования в среде Visual Prolog, программирование с использованием структур данных списки и деревья, разработку экспертной системы на языке логического программирования, исследование моделей планирования в интеллектуальных системах.. Изучение теоретических основ, методов и средств построения интеллектуальных систем на основе знания мировых тенденций развития вычислительной техники и информационных технологий и приобретение навыков построения интеллектуальных систем. Формирование представления о перспективах развития интеллектуальных систем как инновационной области информационных технологий, о парадигме логического программирования и ее применении при разработке интеллектуальных и экспертных систем. Понятие об интеллектуальных системах, как системах, основанных на знаниях, об особенностях знаний как формы представления информации, методов решения задач планирования и обучения в интеллектуальных системах. Студент должен показать умение анализировать профессиональную информацию, выделять в ней главное, структурировать, оформлять и программировать в рамках декларативной парадигмы, способен разрабатывать алгоритмы и программные средства для решения задач в области создания и применения искусственного интеллекта. Освоение способов формализации интеллектуальных задач с помощью языков искусственного интеллекта, практических навыков логического и продукционного программирования, выбор, разработка и проведение экспериментальной проверки работоспособности программных компонентов систем искусственного интеллекта по обеспечению требуемых критериев эффективности и качества функционирования.. Контрольная работа № 1 по темам 1-8 1.       В чем состоит основное отличие знаний от данных? 1)    В структурности данных и активности знаний. 2)    В структурности и активности знаний. 3)    В структурности или активности знаний. 4)    В активности данных и структурности знаний. 2.       На какие типы условно может быть разделено знание, которое одно человеческое поколение передает другому (в теории интеллектуальных систем)? 1)    На общедоступные (факты и теории) и  индивидуальные (эвристики). 2)    На актуальные, неактуальные и фоновые. 3)    На первичные и вторичные. 3.       Что такое внутренняя интерпретируемость знаний (или данных)? 1)    Наличие системы имен информационной единицы знаний (или данных). 2)    Возможность интерпретации знаний или данных изнутри БД или БЗ. 3)    Сопоставление знаний или данных с функциями, позволяющими их интерпретировать. 4.       Что такое структурированность знаний? 1)    Наличие у знаний внутренней структуры. 2)    Свойство знаний, выражаемое связями типа «род-вид», «часть-целое». 3)    Способность знаний к самоорганизации на уровне структуры. 5.       Что такое парадигма программирования? 1)    Подход к программированию, содержащий описание инструментальных средств. 2)    Правила эффективного программирования и отладки программ. 3)    Набор идей и рекомендаций, определяющих стиль написания программ. 6.       Назовите 2 способа интерпретации правила Пролога. 1)    Выполнение действия и формулирование условия. 2)    Логическое высказывание и вызов процедуры. 3)    Вычисление функции и определение отношений между термами. 7.       Какое выражение допустимо на языке Пролог для увеличения значения переменной на константу 5? 1)    Y=X+5 2)    X=X+5 3)    X+5 4)    +5Х 8.       Почему правило Modus Ponens можно рассматривать как частный случай правила резолюций (экземпляр резолюции)? 1)    Потому, что при замене формулы A ð B на A Ù ØB в правиле Modus Ponens оно становится экземпляром резолюции. 2)    Потому, что при замене формулы A ð B на ØA Ù B в правиле Modus Ponens оно становится экземпляром резолюции. 3)    Потому, что при замене формулы A ð B на A Ú ØB в правиле Modus Ponens оно становится экземпляром резолюции. 4)    Потому, что при замене формулы A ð B на ØA Ú B в правиле Modus Ponens оно становится экземпляром резолюции. 9.       Какое определение операции редукции является правильным? 1)    Операция,  связанная с заменой цели G заголовком того примера правила,  из программы P , тело которого совпадает с данной целью. 2)    Операция,  связанная с заменой цели G телом того примера правила,  из программы P , заголовок которого совпадает с данной целью. 3)    Операция,  связанная с заменой цели G телом того правила,  из программы P , заголовок которого совпадает с данной целью. 4)    Операция,  связанная с заменой цели G телом того примера правила,  из программы P , тело которого совпадает с данной целью. 10. Цель G следует из программы P тогда и только тогда, когда: 1)    в P найдется правило с основным примером A :- B1,  B2 ,.,  Bn , где n > 0, таким, что B1 , B2 ,., Bn являются логическими следствиями P и A является примером G. 2)    G может быть выведена из P с помощью конечного числа применений обобщенного правила modus ponens. 3)    G может быть выведена из P с помощью конечного числа применений правила де-Моргана. 11. Что называется стандартной стратегией выбора цели в процессе редукции? 1)    Правило выбора, согласно  которому  в качестве очередной цели берется всегда самая правая цель резольвенты. 2)    Правило выбора, согласно  которому  в качестве очередной цели берется произвольная цель резольвенты. 3)    Правило выбора, согласно  которому  в качестве очередной цели берется всегда самая левая цель резольвенты. 12. Что называется стандартной стратегией поиска в процессе редукции? 1)    Поиск в программе P правила Ci , функтор в заголовке которого совпадает с функтором цели Gi, в порядке, обратном написанию правил в программе. 2)    Поиск в программе P правила Ci , функтор в заголовке которого совпадает с функтором цели Gi, в порядке написания правил в программе. 3)    Поиск в программе P правила Ci , функтор в заголовке которого совпадает с функтором цели Gi, в произвольном порядке. 13. Что позволяет остановить рекурсивный процесс? 1)    Указание копии задачи, не допускающей дальнейшее выделение подзадач. 2)    Граничное условие. 3)    Указание копии задачи, допускающей дальнейшее выделение подзадач. 4)    Граничное условие копии подзадачи. 14.  Как работает управление механизмом возврата в Прологе с использованием специальной цели, обозначаемой символом “!”? 1)     Доказательство этой цели заканчивается неуспешно, после чего отключается механизм возврата и все цели, расположенные в тексте правила до цели-отсечения (включая и головную цель правила) не доказываются повторно. 2)     Доказательство этой цели заканчивается успешно, после чего отключается механизм возврата и все цели, расположенные в тексте правила до цели-отсечения (включая и головную цель правила) не доказываются повторно. 3)    Доказательство этой цели заканчивается успешно, после чего отключается механизм возврата и все цели, расположенные в тексте правила после цели-отсечения (включая и головную цель правила) не доказываются повторно. 4)    Доказательство этой цели заканчивается успешно, после чего отключается механизм возврата и все цели, расположенные в тексте правила до цели-отсечения не доказываются повторно. 15.  Выбрать правильные реализации отношения отрицания not произвольной цели на языке Пролог: 1)    not(X) :– fail, !, X.      not(X). 2)    not(X) :– !, Х, fail.      not(X). 3)    not(X) :– X, !, fail.      not(X). 4)    not(X) :– X, fail, !.      not(X). 16. Почему рекурсия, используемая при работе с бинарными деревьями на Прологе, не является хвостовой? 1)    Рекурсивный вызов находится в головной части правила вывода. 2)    Рекурсивный вызов не является только последней целью в хвостовой части правила вывода. 3)    Приходится обрабатывать левое и правое поддеревья, что дает две рекурсивные цели в одном предложении. 17.  В каких случаях применяется прямая стратегия логического вывода при реализации на языке Пролог экспертной системы?. Министерство науки и высшего образования Российской Федерации ФГАОУ ВО «Санкт-Петербургский государственный электротехнический университет «ЛЭТИ» имени В.И. Ульянова (Ленина)» ____________________________________________________________ ЭКЗАМЕНАЦИОННЫЙ БИЛЕТ № 1 Дисциплина Интеллектуальные системы ,  кафедра Вычислительной техники 1. Интеллектуальные системы – системы, основанные на знаниях.  2. Приложения Пролога – экспертные системы. Архитектура экспертных систем. 3. Задача. УТВЕРЖДАЮ Заведующий кафедрой                                                   М.С. Куприянов. Введение. Интеллектуальные системы – основные понятия. Предмет дисциплины, её объём, содержание. Обзор литературы по курсу. Интеллектуальные системы – системы, основанные на знаниях. Место интеллектуальных систем на множестве компьютерных систем. Особенности знаний как формы представления информации. Два типа знаний. Проблема представления знаний. Язык логического программирования как средство разработки интеллектуальных систем. Логические модели и логическое программирование. Разработка интеллектуальных и экспертных систем на языке логического программирования. Язык логического программирования Пролог. Интерактивная визуальная среда программирования Visual Prolog. Рекурсивные программы. Решение логических задач с использованием списков. Решение логических задач с использованием структур данных типа «дерево». Приложения языка Пролог. Экспертные системы. Решение задачи планирования действий в интеллектуальных системах. Задача планирования. Язык описания состояний и действий. Планирование на основе поиска в пространстве состояний. Планирование с помощью пропозициональной логики. Планирование действий в реальном мире. Решение задачи обучения в интеллектуальных системах. Формы обучения. Обучение на основе наблюдений. Индуктивное обучение. Построение деревьев решений. Обучение с использованием знаний. Логическая формулировка задачи обучения. Статистические методы обучения. Обучение с полными данными. Метод максимального правдоподобия. Пассивное и активное обучение с подкреплением. Поиск в условиях противодействия. Заключение. Альфа-бета-отсечение. Архитектура доски объявлений. Перспективы развития интеллектуальных систем как инновационной области информационных технологий.",
		"text_proj": "Разработка интеллектуальных модулей обработки данных на FPGA. Цель проекта – разработка интеллектуальных технологий обработки данных для встроенных систем.  Для достижения цели исследования необходимо решить следующие задачи: 1. Разработка новых моделей и методов и снижения размерности данных, коррекции систем без переобучения.  2. Разработка интеллектуальных методов и алгоритмов обработки данных в режиме реального времени. 3. Аппаратная реализация встроенных систем. Партнёры: Huawei, Siemens. . Обязательно должен: знать: основы программирования. уметь: работать с \"железом\". владеть: одним из языков высокого уровня. Желательно должен: знать: основы проектирования на FPGA. уметь: моделировать на Matlab или Python; владеть: языками VHDL или Verilog. . В результате получит: знания: в области архитектуры встроенных систем; умения: проектирования для FPGA; опыт: проектирования и реализации аппаратно-ориентированных интеллектуальных модулей обработки данных.",
		"need_match": true
	},
	{
		"id_rp": "105",
		"id_proj": "41",
		"name_rp": "Системы управления манипуляторными роботами",
		"name_proj": "Разработка подводного телеуправляемого робота на гусеничном шасси.",
        "text_rp": "Дисциплина включает изложение основ теории манипуляционных роботов и методов управления ими. Рассматриваются основные сведения о динамике манипуляционных механизмов, математические модели движения и методика их анализа. Подробно рассматриваются способы и алгоритмы кинематического управления манипуляторами. Дисциплина поддерживается большим числом практических и лабораторных занятий, а также самостоятельной работой студентов по основным разделам программы. . Изучение основ теории манипуляционных роботов и методов управления ими. Овладение: знаниями об основных кинематических соотношениях; умениями формулировать прямую и обратную задачи позиционные задачи и прямую и обратную задачи о скорости звеньев манипулятора; навыками построения алгоритма управления манипулятором. Формирование общего представления о динамике манипуляционных механизмов, математических моделях движения и методиках их анализа. Овладение: знаниями о показателях динамических свойств манипулятора; умениями составлять алгоритм вычисления сил и моментов реакции звеньев манипулятора; навыками составления дифференциальных уравнений движения манипулятора относительно обобщенных координат. Освоение навыков практических методов исследования и расчетов исполнительной системы манипуляционного робота. Овладение: знаниями о средствах автоматизированного синтеза мехатронных систем; умениями разрабатывать системы управления для мехатронных и роботизированных технологических комплексов; навыками моделирования мехатронных и роботизированных технологических комплексов.. Примерные вопросы к коллоквиуму: 1. Запишите уравнение статического равновесия трехзвенного манипулятора, содержащего только поступательные кинематические пары 2. Запишите уравнение статического равновесия трехзвенного манипулятора, содержащего только поступательные пары вращения 3. Запишите уравнение статического равновесия для шестизвенного манипулятора типа PUMA-560, у которого первые три пары вращательные , а три последующие – поступательные. 4. Напишите соотношение, определяющее силу реакции и момент реакции опоры манипулятора имеющего три вращательные пары. 5. Объясните, почему для вычисления сил и моментов, действующих на звенья манипулятора, целесообразно применять метод обратной рекурсии. 6. Составьте алгоритм вычисления сил и моментов реакции звеньев манипулятора, имеющего плоскую трехзвенную конструкцию с вращательными парами, если заданы значения обобщенных координат. 7. Составьте алгоритм вычисления эллипсов развиваемых сил для плоского двухзвенного манипулятора. 8. Поясните, для решения каких практических задач можно использовать эллипсоиды развиваемых манипулятором сил. 9. Что характеризуют главные оси эллипсоида сил: их величины или направления? 10. Сформулируйте первую и вторую задачи динамики применительно к манипуляционному механизму. . Введение. Предмет дисциплины и ее задачи. Структура и содержание дисциплины, ее связь с другими дисциплинами учебного плана. Тема 1. Основные кинематические соотношения. Манипулятор как механическая система. Преобразования координат, однородные координаты и преобразования. Определение положения и ориентации звеньев манипулятора, специальные системы координат. Тема 2. Положение манипулятора в рабочем пространстве. Прямая и обратная позиционные задачи. Геометрия рабочего пространства манипулятора. Тема 3. Скорости и ускорения звенев манипулятора. Вращение твердого тела. Скорости и ускорения звенев манипулятора. Прямая и обратная задача о скорости. Кинематические свойства манипуляторов. Тема 4. Кинематическое управление манипулятором. Планирование траекторий в пространстве обобщенных координат. Управление манипулятором в пространстве координат схвата. Тема 5. Уравнение кинетостатики манипулятора. Статика манипуляционных механизмов. Анализ рабочих сил и моментов. Показатели динамических свойств манипулятора. Тема 6. Система управления исполнительного уровня. Математическая модель исполнительной системы, исследование линеаризованной модели. Автоматизированный синтез исполнительной системы. Тема 7. Методы динамического управления манипуляторами. Методы, основанные на решении обратных задач динамики. Декомпозиция управления, силовая обратная связь и динамическое планирование. Тема 8. Логическое управление сложной робототехнической системой. Понятие сложной системы, построение моделей подсистем, сетевой автомат, сеть автоматов. Метод управления сложной робототехнической системой. Заключение. Перспективы развития мехатронных и робототехнических систем.",
		"text_proj": "Разработка подводного телеуправляемого робота на гусеничном шасси. Разработка программного и аппаратного обеспечения подводной роботизированной системы на основе гусеничной платформы с манипулятором. Создание телеуправляемого водонепроницаемого шасси. Разработка сенсорной системы робота. Разработка подсистемы управления шасси и манипулятором. Полевые испытания робота на водоеме. Основы Arduino IDE, коммуникабельность, владение английским языком на уровне Basic, общая техническая грамотность. Знание цифровой и аналоговой схемотехники, выносливость, целеустремленность. Знания в области дизайна подводных роботизированных систем. Практические навыки проектирования комплексных объектов робототехники. Опыт разработки программно-аппаратных комплексов общего назначения Незабываемый опыт полевой экспедиции на водоемы нашей необъятной Родины с погружениями за застрявшим роботом.",
		"need_match": true
	},
	{
		"id_rp": "1040",
		"id_proj": "26",
		"name_rp": "Управление и информатика в технических системах",
		"name_proj": "Программно-аппаратное конфигурирование сети лаборатории.",
		"text_rp": "В рамках данной дисциплины рассматриваются основные положения общей теории систем, технологий и методов проектирования программных систем, изучаются особенности современных методов и средств проектирования информационных систем, основанных на использовании CASE­технологий. История и тенденции развития технологий программирования. Проблемы разработки сложных программных систем. Основные понятия общей теории систем. Жизненный цикл и этапы разработки программного обеспечения. Оценка качества процессов создания программного обеспечения. Приемы обеспечения технологичности программных продуктов. Определение требований к программному обеспечению и исходных данных для его проектирования. Проектирование программного обеспечения. Тестирование, верификация и отладка программных систем. Составление программной документации.",
		"text_proj": "Программно-аппаратное конфигурирование сети лаборатории. Видео-презентация проекта https://youtu.be/uLePbMkxzZE Цель данного проекта состоит в построении и отладке программно-аппаратной системы наблюдения и отладки решений на полигоне автономного транспорта лаборатории мобильных интеллектуальных систем.  Задачи: Настройка системы управления конфигурациями Ansible на парке машин лаборатории интеллектуальных мобильных систем Разработка решения захвата видео камеры наблюдения полигона в трансляцию конференций Zoom Тестирование онлайн-курса по GDB и Valgrind Формат работы: смешанный: заочный + очный Очно в аудитории 3501 Прототипирование при отсутствии необходимости работы с оборудованием возможно выполнять дистанционно. Ориентировочно 2-3 курс Навык работы с ОС Linux (Ubuntu) Знание языка Си, основ отладки программ Умение самостоятельно находить информацию, учиться новому Умение следовать инструкции Аккуратность  Умение пользоваться отверткой Знание английского языка на уровне чтения технической документации Понимание базовых принципов организации ЛВС. Плюсом будет любой опыт работы с библиотеками автоматизации настройки и любой опыт наладки систем видеофиксации. . В результате получит: знания о устройстве систем машинного зрения и систем автоматизированной постановки эксперимента для задач автономного транспорта, умения настройки и отладки реальных роботехнических систем, опыт участия в передовом исследовательском проекте. . Тестовое задание проекта. Составить docker-compose файл, позволяющий запустить 2 докер-контейнера, объединенные в одну локальную сеть (изолированную от сети хост-машины)   Программа-клиент, запущенная в одном контейнере должна передавать строку “docker test #K” по TCP программе-серверу, запущенной во втором контейнере. Программа-сервер должна печатать полученные данные в лог, доступный командой docker log.   #K - порядковый номер сообщения (0, 1, 2, …) Строку передавать раз в секунду   Способ реализации программ клиента и сервера может быть любым (стандартные утилиты / самостоятельно написанные программы / …)   В качестве решения прислать ссылку на репозиторий с docker-compose файлом и инструкцией по запуску.",
		"need_match": true
	},
	{
		"id_rp": "1278",
		"id_proj": "9",
		"name_rp": "Тестирование программного обеспечения",
		"name_proj": "Тестирование конфигураций на платформах: Supermicro c AMD+Astra Linux+МДЗ (модуль доверенной загрузки) Соболь; Supermicro/Intel + видеокарта AMD (в разных режимах) +Astra Linux+МДЗ Cоболь",
		"text_rp": "Дисциплина посвящена изучению теоретических основ и методов тестирования программного обеспечения. Рассматриваются основные понятия процесса тестирования, уровни тестирования, виды и методы тестирования. Определяются критерии завершения процесса тестирования. Особое внимание уделяется вопросам документирования процесса тестирования. Рассматриваются инструментальные средства тестирования.. Изучение: основных понятий, связанных с функциональным и нефункциональным тестированием программного обеспечения, получение базовых знаний дисциплины;– возможностей использования в решении практических задач методов тестирования «чёрного ящика» и знание границы их применения. Формирование: умения применять базовые методы нефункционального тестирования. Изучение: основных понятий, связанных с функциональным и нефункциональным тестированием программного обеспечения, получение базовых знаний дисциплины;– возможностей использования в решении практических задач методов тестирования «чёрного ящика» и знание границы их применения. Формирование: умения применять базовые методы нефункционального тестирования. Освоение: навыков применения методик тестирования «чёрного ящика», написания тестов и тестовых сценариев, составления отчетов об ошибках, применения средств автоматизации тестирования.. Перечень примерных вопросов для коллоквиумов: 1. Каковы наиболее распространенные техники тестирования «черного ящика»? (Классы эквивалентности, граничные значения, диаграмма переходов и состояний; краткое описание каждой техники). 2. Назовите несколько видов тестирования под нагрузкой. (Тестирование производительности, стрессовое тестирование, тестирование выносливости, тестирование восстановления и т.д. с кратким описанием каждого вида) 3. В любом ли процессе применима автоматизация? (Нет, в ней нет смысла при коротком релизном цикле) 4. Какие артефакты тестирования вы можете назвать? (Тест-кейс, тест-план, отчет об ошибке, тест-скрипт, отчет о выполнении тестов). . Введение. Краткая характеристика дисциплины, ее цели, задачи, объем, содержание, порядок изучения материала, связь с другими дисциплинами учебного плана и место в подготовке специалистов по указанным направлениям и специальностям. Формы контроля самостоятельной работы. Характеристика учебной литературы. Тема 1. Основные понятия тестирования. Термины, описывающие нарушение функционирования программных систем. Ключевые вопросы тестирования программного обеспечения: критерии отбора/адекватности тестов, критерии завершения тестирования, цели тестирования, эффективность тестирования. Связь тестирования с другими видами деятельности по разработке программного обеспечения. Документирование тестирования. Тема 2. Функциональное тестирование. Функциональное тестирование (метод «черного ящика»). Метод эквивалентного разбиения. Анализ граничных значений. Метод диаграмм переходов и состояний.Теоретические и практические ограничения тестирования. Тема 3. Тестирование под нагрузкой. Тестирование производительности: нагрузочное тестирование, стресс-тестирование, тестирование стабильности. Практические проблемы нагрузочного тестирования. Тема 4. Тестирование безопасности. Теоретические основы тестирования безопасности. Риски. Распространенные уязвимости и методы их обнаружения. Тема 5. Тестирование удобства использования. Определение, экспертная оценка удобства использования программных систем. Методы тестирования используемости программных систем, применяемые группой тестирования проекта – общие и частные типовые методики, тестирование на основе пользовательских вариантов использования. Методы тестирования используемости программных систем с привлечением сторонних пользователей (метод теневого наблюдения, метод вопросов и ответов, метод активного вмешательства). Тема 6. Уровни тестирования. Место тестирования в процессе разработки. Модульное и интеграционное тестирование. Отличительные особенности модульных тестов. Метрики покрытия/глубины тестирования. Введение искусственных дефектов. Тема 7. Инструментальные средства тестирования. Сущность и преимущества автоматизации тестирования. Зависимость успеха автоматизации от степени зрелости процесса тестирования. Проблемы разработки и поддержки набора автоматизированных функциональных тестов и методики их разработки. Формирование результатов тестового прогона и анализ результатов. Автоматизированная генерация входных тестовых данных. Тема 8. Организация процесса тестирования. Процесс тестирования как деятельность по обеспечению качества программного продукта. Состав команды тестирования. Внутренние и независимые команды тестирования. Управление процессом тестирования. Критерии отбора тестов. Разработка тестового окружения. Выполнение тестов. Анализ результатов тестирования. Отслеживание дефектов. Заключение. Основные тенденции развития и совершенствования методов тестирования.",
		"text_proj": "Тестирование конфигураций на платформах: Supermicro c AMD+Astra Linux+МДЗ (модуль доверенной загрузки) Соболь; Supermicro/Intel + видеокарта AMD (в разных режимах) +Astra Linux+МДЗ Cоболь. Необходимо:  разработать стандарты сборки исследуемого компьютерного оборудования; тестирование различных конфигураций компьютерного оборудования; определение рекомендуемых назначений (например, в режиме вывода видео конфигурация оборудования работает с таким-то разрешением, в режиме сопроцессора поддерживает такие-то функции, важные для разработчиков ПО под Astra Linux и др.), документирование. Обязательно должен: знать:. уметь:. владеть:. Желательно должен: знать:. уметь:. владеть:. В результате получит: знания: Технические характеристики современных серверов и АРМ, знание ГОСТ и др. умения: Cборки и тестирования современного компьютерного оборудования. опыт: Сборки и тестирования различных конфигураций серверов и АРМ, разработки технической документации.",
		"need_match": true
	},
	{
		"id_rp": "991",
		"id_proj": "30",
		"name_rp": "Машинное обучение",
		"name_proj": "Разработка системы детектирования и идентификации объектов на кадрах.",
		"text_rp": "Данный курс знакомит слушателей с основными методами анализа данных. Рассматриваются основные этапы интеллектуального анализа, включая подготовку исходных данных, особенности выбора параметров алгоритмов, оценку и представление результатов анализа. Изучаются основные задачи интеллектуального анализа данных: классификация, кластеризация, поиск ассоциативных правил. На практике разбираются основные алгоритмы решения этих задач и особенности их применения для больших данных. Данный курс позволяет детально изучить понятия, задачи и методы интеллектуального анализа данных, предназначенные для создания математических моделей, адекватных окружающему миру и решения прикладных задач. . Целью освоения дисциплины «Машинное обучение» являются приобретение студентами теоретических знаний и формирование практических навыков по основам машинного обучения, овладение студентами инструментарием, моделями и методами машинного обучения для решение практических задач по анализу данных. Задачами изучения дисциплины являются: - изучение содержательной и математической постановки основных задач машинного обучения, получение знаний о методах машинного обучения и предобработки исходных данных, основных на- формирование знаний об основных понятиях, этапах анализа и интерпретации данных; умений по выбору наиболее подходящего способа решения задачи и обоснованию его эффективности, формирование навыков по представлению результатов работы алгоритмов машинного обучения; - освоение практических навыков по сбору данных, методов их анализа и обобщения, выбору средств и методов обработки данных для решения практических задач; представлению результатов анализа в форме, поддерживающей принятие решения в соответствии с поставленной задачей. Студенты получат знания по ключевым понятиям, целям и задачам использования машинного обучения для решения различных практических задач; изучат методологические основы применения алгоритмов машинного обучения. Дисциплина формирует умения по выбору метода машинного обучения, соответствующего научно-практической задаче, и его обоснованию, умения по объяснению и визуализации результатов работы алгоритмов машинного обучения, а также оценке качества моделей анализа. Дисциплина формирует практические навыки по применению программных инструментов и библиотек по предобработке исходных данных, построению моделей анализа, оценки качества моделей и визуализации полученных результатов. . . Министерство науки и высшего образования Российской Федерации ФГАОУ ВО «Санкт-Петербургский государственный электротехнический университет «ЛЭТИ» имени В.И. Ульянова (Ленина)» ____________________________________________________________ БИЛЕТ № 1 Дисциплина Машинное обучение   ФКТИ  1. Кластеризация. kMeans, DBSCAN. 2. Метрики качества классификации. Presicion-Recall и ROC кривые. AUC.  УТВЕРЖДАЮ Заведующий кафедрой                                                   В.В. Цехановский . . Введение в машинное обучение. Предмет и задачи машинного обучения и анализа данных. Основные принципы, задачи и подходы, использование в различных областях науки и индустрии. Основные этапы эволюции алгоритмов машинного обучения. Задача классификации. Линейные классификаторы. Линейные классификаторы. Общий вид метрического классификатора. Алгоритм K ближайших соседей. Метод опорных векторов. Линейные персептрон. Задача классификации. Деревья решений. Деревья решений. Правила и анализ качества (точность, полнота). Анализ с помощью ROC кривой. Алгоритм построения деревьев решений. Критерий информационного выигрыша и критерий Джини. Леса решающих деревьев. Задача классификации и регрессионный анализ. Линейная регрессия. Полиномиальная регрессия. Смещение и дисперсия. Ансамблевые методы. Голосование. Бутстраппинг. Бустинг, адаптивный бустинг, градиентный бустинг. Задача кластеризации. Формальная постановка задачи кластеризации. Алгоритмы кластеризации с фиксированным количеством кластеров. Алгоритмы кластеризации по плотности. Иерархическая кластеризация.",
		"text_proj": "Разработка системы детектирования и идентификации объектов на кадрах. Объект исследования: разрозненные геопривязанные кадры видео Предмет исследования: детекция, классификация и идентификация объектов интереса Цель: Определить, какому из заранее заданных классов принадлежит объект Проблема: Протяженность объектов может быть различной, в том числе, не помещающихся на одно изображение Формулировка задачи: необходимо разработать систему идентификации объектов, найденных системой вскрытия, определяющую тип и характеристики найденного объекта или помечающую выделенный объект, как неинтересный. Обязательно должен: знать: язык программирования (С++ или Java или Python); уметь: работать в команде. Желательно должен: знать: математические основы детекции объектов (понятие свёртки, машинного обучения.); владеть: английским языком достаточным для чтения статей. В результате получит: знания: математические основы компьютерного зрения, алгоритмы машинного обучения; умения: проведение научного исследования, прикладное создание программного фреймворка; опыт: работы на предприятии в условиях проекта, близкого к реальному. Сформировать список алгоритмов идентификации. Необходимо сформировать список алгоритмов идентификации. Создать framework, позволяющий решать задачу идентификации несколькими методами. Необходимо создать framework, позволяющий решать задачу идентификации несколькими методами. Сформировать критерии сравнения алгоритмов. Необходимо сформировать критерии сравнения алгоритмов. Сравнить запрограммированные алгоритмы по выбранным критериям. Необходимо сравнить запрограммированные алгоритмы по выбранным критериям.",
		"need_match": true
	},
	{
		"id_rp": "985",
		"id_proj": "8",
		"name_rp": "Основы компьютерного дизайна",
		"name_proj": "Разработка ИС \"Расписание\" / \"Деканат\".",
		"text_rp": "В курсе рассматриваются свойства зрительного восприятия человека, основы работы с цветом и цветовые модели, виды контраста, психология восприятия цветов и шрифтов, основы построения композиции, методика подбора шрифтов, рассматриваются основные требования и композиция наружной рекламы, основы web-дизайна. Также курс содержит руководства по построению эффективного взаимодействия с пользователем и основные принципы построения эргономичных пользовательских интерфейсов. Цель дисциплины - изучение теоретических основ компьютерного дизайна и формирование умений и навыков в области разработки эргономичных графических пользовательских интерфейсов различных систем. Формирование знаний, умений и навыков в области разработки эргономичных графических пользовательских интерфейсов различных систем. В результате изучения дисциплины студенты получают знания о законах зрительного восприятия человека, основных цветовых моделях, методах представления информации, основах построения композиции и подбора цветовой гаммы, принципах создания и подбора шрифтов, классификации и видах рекламы, основных правилах построения эргономичного пользовательского интерфейса, а также термины и определения, используемые в дизайне, виды и методы Usability-тестирования. Формирование умений работы с различными графическими пакетами для выполнения любой дизайнерской работы. Формирование навыков создания эргономичных графических пользовательских интерфейсов различных систем. . Министерство науки и высшего образования Российской Федерации ФГАОУ ВО «Санкт-Петербургский государственный электротехнический университет «ЛЭТИ» имени В.И. Ульянова (Ленина)» ____________________________________________________________ ЭКЗАМЕНАЦИОННЫЙ БИЛЕТ № 1 Дисциплина \"Основы компьютерного дизайна\"  ФКТИ 1. Факторы, которые следует учитывать при выборе шрифта.  2. Советы по созданию эргономичного дизайна.   УТВЕРЖДАЮ Заведующий кафедрой                                                   В.В. Цехановский. . Введение. Цели и задачи курса. Основная литература. Основные этапы работы дизайнера. «Поиск идеи». Основные этапы работы дизайнера. Основные методы поиска «новых» идей. Свойства зрительного восприятия человека. Свойства зрительного восприятия человека. Перспектива и тень. Перспектива. Тень. Цвет. Теория цвета. Основные ошибки при подборе цветовой гаммы. Отклонения в различении цветов. Контраст. Основные виды контраста. Композиция. Понятие композиции и ее виды. Характеристики композиции. Некоторые композиционные приемы. Шрифтовые композиции. Шрифт. Типографика. Советы при выборе шрифта. Типографический дизайн и наружная реклама. Классификация рекламы. Методы и правила создания эффективной рекламы. Наружная реклама. Рекомендации по созданию фирменного стиля. Основы Web-дизайна. Основные понятия, общая структура главной страницы. Основные правила при создании дизайна веб-страниц. 10 главных ошибок веб-дизайна. Usability. Принципы проектирования эргономичного пользовательского интерфейса. 58 признаков хорошего пользовательского интерфейса. Эвристики Я. Нильсена. Гештальт принципы в дизайне. Заключение. Перспективы развития применения компьютерного дизайна в работе эргономиста",
		"text_proj": "Разработка ИС \"Расписание\" / \"Деканат\". Информационная система (ИС) \"Расписание\" обеспечивает процессы формирования и предоставления расписания в вузе. В рамках неё выполняется согласование пожеланий преподавателей, кафедр и возможностей аудиторного фонда ЛЭТИ. Система реализована на JavaScript с использованием фреймворка Svelte. Необходимо перевести систему на TypeScript, фреймворк Vue 2.0 с материальным дизайном Bootstrap (шаблон приложения будет дан). ИС \"Деканат\" предназначена для автоматизации процессов в деканате. В настоящее время осуществляется информационное обследование процессов деканата, разработка начнётся в середине марта. Технологии: TypeScript, фреймворк Vue 2.0 с материальным дизайном Bootstrap. Обязательно должен: знать: HTML, CSS, JavaScript, TypeScript. уметь выполнять:  проектирование интерфейса пользователя и запросов на web-сервер; разработку статического web-приложения; реализацию динамического web-приложения; подключение web-приложения к web-серверу; разработку модульных и интеграционных тестов; описание своих решений в виде справки для пользователя; владеть: основными навыками анализа требований пользователя, разработки web-приложений, работе в команде; технологиями совместной работы: git, wiki, bugtracker. Желательно должен: знать: фреймворки Vue 2.0, NestJS, Bootstrap; уметь: проектировать UX web-приложения; разрабатывать дизайн web-приложения; разрабатывать новые web-компоненты; разрабатывать серверную часть web-приложений; проектировать БД; выполнять нагрузочное тестирование; проверять web-приложение на взлом и готовить рекомендации по защите от взлома; работать в качестве технической поддержки для пользователя; описывать разработанные решения в виде публикаций; обладать навыком совместной разработки. В результате получит большинство знаний из перечисленных в \"Желательно должен\". Отбор студентов для проекта. После этого задания возможны следующие варианты:   - мы берём Вас на работу в отдел ОРПК ЛЭТИ (это основная цель участия в данном проекте, если Вы в этом не заинтересованы, то прошу сразу меня об этом уведомить), - мы даём дополнительное задание в случае высокой конкуренции либо   - мы рекомендуем Вас в другие проекты (в ЛЭТИ или других организациях). Интеграция созданных решений. Объединение полученных тестовых заданий в одну систему. Выполнение первого этапа проекта. Проектирование интерфейса пользователя Проектирование набора запросов на сервер Разработка статического web-приложения Разработка динамического web-приложения Проектирование структуры БД Разработка web-сервера Подключение к web-серверу Тестирование Проверка на взлом Опытная эксплуатация. 2. Формирование расписания для военно-учебного центра. 2.1. Клиентская часть ИС \"Расписание\" ЛЭТИ реализована с помощью фреймворка Svelte. Необходимо заданные в п.1 компоненты переписать на TypeScript+Vue2+Bootstrap, подготовить тесты и техническую документацию. Обращаю внимание, что разные компоненты выданы разным студентам, поэтому работать прошу именно с теми компонентами, которые указаны в п.1. В дальнейшем компоненты будут объединены в одно web-приложение. 2.2. Результаты прошу в виде pull request (PR) отправить в GIT. На написанный код будут выданы рекомендации/замечания/предложения, которые необходимо будет учесть. 2.3. К сожалению, данное задание не проверяет знания, умения и навыки по всему циклу разработки программного обеспечения, но позволяет \"окунуться\" в реальную разработку и проверить готовность решать реальные задачи. 2.4. Рекомендуемый срок выполнения до отправки первого PR: 2-3 недели, максимальный: 5 недель. Предполагается, что с рекомендациями/замечаниями/предложениями по PR Вы справитесь за 2-3 недели. 3. Формирование расписания для кафедры ФвиС. 2.1. Клиентская часть ИС \"Расписание\" ЛЭТИ реализована с помощью фреймворка Svelte. Необходимо заданные в п.1 компоненты переписать на TypeScript+Vue2+Bootstrap, подготовить тесты и техническую документацию. Обращаю внимание, что разные компоненты выданы разным студентам, поэтому работать прошу именно с теми компонентами, которые указаны в п.1. В дальнейшем компоненты будут объединены в одно web-приложение. 2.2. Результаты прошу в виде pull request (PR) отправить в GIT. На написанный код будут выданы рекомендации/замечания/предложения, которые необходимо будет учесть. 2.3. К сожалению, данное задание не проверяет знания, умения и навыки по всему циклу разработки программного обеспечения, но позволяет \"окунуться\" в реальную разработку и проверить готовность решать реальные задачи. 2.4. Рекомендуемый срок выполнения до отправки первого PR: 2-3 недели, максимальный: 5 недель. Предполагается, что с рекомендациями/замечаниями/предложениями по PR Вы справитесь за 2-3 недели. 4. Подтверждение перечня дисциплин. 2.1. Клиентская часть ИС \"Расписание\" ЛЭТИ реализована с помощью фреймворка Svelte. Необходимо заданные в п.1 компоненты переписать на TypeScript+Vue2+Bootstrap, подготовить тесты и техническую документацию. Обращаю внимание, что разные компоненты выданы разным студентам, поэтому работать прошу именно с теми компонентами, которые указаны в п.1. В дальнейшем компоненты будут объединены в одно web-приложение. 2.2. Результаты прошу в виде pull request (PR) отправить в GIT. На написанный код будут выданы рекомендации/замечания/предложения, которые необходимо будет учесть. 2.3. К сожалению, данное задание не проверяет знания, умения и навыки по всему циклу разработки программного обеспечения, но позволяет \"окунуться\" в реальную разработку и проверить готовность решать реальные задачи. 2.4. Рекомендуемый срок выполнения до отправки первого PR: 2-3 недели, максимальный: 5 недель. Предполагается, что с рекомендациями/замечаниями/предложениями по PR Вы справитесь за 2-3 недели. 6. Составление пожеланий по экзаменационной сессии. ",
		"need_match": true
	},
	{
		"id_rp": "998",
		"id_proj": "45",
		"name_rp": "Разработка в ядре Linux",
		"name_proj": "Разработка САПР на основе платформы Beremiz для отечественных ПЛК с процессорным ядром MIPS.",
		"text_rp": "дисциплина посвящена изучению проектирования компонентов программ; выбора подходящих шаблонов для решения задач из имеющейся номенклатуры; реализации и сопровождения программы на различных языках программирования, соответствующих дисциплине. дисциплина предусматривает умение использовать основные инструменты разработки для программирования в ядре linux; основные компоненты программно­технической архитектуры ядра linux и интерфейсов взаимодействия с ними; основные методы и приемы отладки. результатом освоения данного курса является применение современных компиляторов и отладчиков; проектирование типовых решений с учетом специфики программирования в ядре linux; использование возможностей существующей программной архитектуры ядра linux",
		"text_proj": "Разработка САПР на основе платформы Beremiz для отечественных ПЛК с процессорным ядром MIPS. Цель: адаптация и доработка открытого программного обеспечения среды разработки Beremiz для обеспечения функционирования отечественных программируемых логических контроллеров с ядром MIPS. Задачи: •Исследование эффективности оптимизирующих ключей компилятора для архитектуры MIPS. •Исследование архитектурных особенностей среды разработки Beremiz. •Интеграция протоколов МЭК в среду разработки Beremiz. Разработка тестов и верификация предложенных решений. Проект выполняется в интересах ФГУ ФНЦ НИИСИ РАН. Обязательно должен: знать: основы программирования; уметь: читать техническую документацию; владеть: языком C или Python. Желательно должен: знать: основы промышленной автоматики; уметь: работать с ПЛК; владеть: языками стандарта МЭК/IEC. В результате получит: знания: в области промышленной автоматики;  умения: в области разработки ПО для ПЛК на языках стандарта МЭК/IEC;  опыт: работы с IDE средами для промышленной автоматики.",
		"need_match": true
	},
	{
    "id_rp": "4776",
    "id_proj": "11",
    "name_rp": "Web-технологии",
    "name_proj": "Анализ динамики COVID-19 в России",
    "text_rp": "Курс «Web-технологии» охватывает широкий спектр технологий и подходов, использующихся при разработке Интернет-сайтов и web-приложений. Рассматриваются основы построения web-приложений с использованием HTML, CSS. Студенты последовательно изучают основы протокола HTTP, настройку web-сервера, основы JavaScript, TypeScript и PHP, построение статических HTML-страниц и оформления с использованием CSS, LESS и SASS, разработку сервера приложений с использованием Node.JS. Построение серверной части на основе Express и Nest, разработка клиентских приложений с использованием Angular, React и Vue. Выполнение модульного тестирования web-приложений, сборка приложений с использованием GULP и Webpack, обеспечение безопасности web-приложений.. Целью дисциплины является приобретение теоретических знаний о современных web-технологиях и фреймворках и практических навыков по всем этапам разработки web-приложений от разработки web-серверов, создания и оформления web-клиентов, организации защиты от взома. Задачами изучения дисциплины является приобретение теоретических знаний по проектированию web-приложений, формирование практических умений и навыков по разработке серверной и клиентской части web-приложений, оформлению и тестированию приложений. Знание основных подходов по построению клиентской и серверной части web-приложений, по оформлению web-страниц, в том числе для просмотра с мобильных устройств, по решению типовых задач тестирования, сборки и обеспечения безопасности web-приложений с использованием языков JavaScript, TypeScript, PHP. Умение разрабатывать клиентскую и серверную часть web-приложений, осуществлять настройку, тестирование и автоматизированную сборку web-приложений, решать базовые вопросы кибербезопасности. Формирование навыков создания статических HTML-страниц, динамических web-приложений на языках JavaScript и TypeScript, навыков применения современных фреймворков разработки клиентских и серверных частей web-приложений.. Тесты размещены в курсе Moodle, примеры вопросов: Сопоставьте коды состояний HTTP их описаниям В чём преимущество HTTP/2 по сравнению с предыдущими версиями протокола? Какой HTTP метод используется для описания параметров соединения с ресурсом? Какими функциями можно управлять с помощью HTTP? Выберите соответствие команд для управления модулями с помощью npm и yarn. Министерство науки и высшего образования Российской Федерации ФГАОУ ВО «Санкт-Петербургский государственный электротехнический университет «ЛЭТИ» имени В.И. Ульянова (Ленина)» ____________________________________________________________ ЭКЗАМЕНАЦИОННЫЙ БИЛЕТ № 1 Дисциплина Web-технологии  ФКТИ 1. Что такое протокол HTTP? Какие он поддерживает методы, как передаёт параметры? Для чего предназначены заголовки?  2. Опишите структуру HTML, понятие DOM-модели. Как осуществляется обработка событий в HTML? УТВЕРЖДАЮ Заведующий кафедрой                                                   К. В. Кринкин. Тема 1. Введение. Введение. Описание трехуровневой архитектуры. Описание протокола HTTP: методы, параметры, запрос, ответ, заголовки, общие вопросы безопасности. Сервер nginx: установка, конфигурации, статическое содержимое, использование в качестве прокси. Apache-сервер. Тема 2. Основы языка JavaScript. Стандарт ECMAScript. Установка и основы использования Node.js. Язык JavaScript: базовые конструкции языка, строки, функции, объекты, классы, массивы, JSON, промисы, генераторы, Map, Set, прокси. Строгий режим JavaScript. Тема 3. Применение Node.js. Основы Deno. Работа с модулями. Использование npm и yarn, готовые модули. Событийная модель в Node.js. Создание простейшего сервера на Node.js. Эхо-сервер, параметры запроса, заголовки. Журналирование. Внешние сервера для журналирования: Rollbar – попытка отловить ошибки раньше пользователей, Sentry – прослеживание JavaScript. Работа с файлами и потоками. «Асинхронный try-catch». Использование nvm. Использование Deno: установка, настройка среды, разрешения и примеры. Тема 4. Основы HTML. Структура HTML, понятие DOM-модели. Базовые элементы и поддерживаемые ими атрибуты. Обработка событий в HTML. Элемент form, его атрибуты, соответствующие элементы: input, select, fieldset, textarea, button. Валидация введённых значений на JavaScript. Тема 5. Основы настройки стилей CSS, LESS, SASS. Оформление HTML с использованием CSS. Селекторы, свойства и их значения, псевдоклассы. Оформление границ, отступов, размеров, ссылок, списков, таблиц, текста, настройка шрифта, использование иконок. Позиционирование элементов. Адаптивная верстка, использование grid, flexbox. Использование шаблонов web-страниц, переменных в CSS. Работа с CSS с использованием JavaScript. Использование CSS-фильтров. Библиотека w3.css. Знакомство с фреймворками LESS и SASS. Тема 6. Применение Express, NestJS, RESTful, Ajax. Использование Express и Koa. Использование шаблонов на основе PUG и EJS. Cookies на сервере. Реализация сессии. Фреймворк NestJS: архитектура приложения, базовый пример на JavaScript, основные возможности, подключение шаблонов. Реализация RESTful на Node.js. Применение Ajax: XMLHttpRequest, fetch. Ограничения CORS. Тема 7. Основы использования библиотек jQuery и jQuery UI. Применение jQuery: селекторы, манипуляции с DOM, обработка событий использование свойств и классов CSS, эффекты, Ajax-запросы. Применение jQuery UI: взаимодействие, перетаскивание, изменение размера, выбираемые и сортируемые элементы, виджеты, аккордеон, автозаполнение, кнопки, переключатели, controlgroup, выбор даты, диалоговое окно, меню, отображение прогресса, selectmenu, бегунок, спиннер, вкладки, подсказки, темы. Знакомство с jQuery mobile. Тема 8. Основы языка TypeScript. Статический контроль с использованием Flow. Основы языка TypeScript: типы переменных, интерфейсы, классы, функции, шаблоны, перечисления, импорт-экспорт, пространства имён, конфигурации, JSX. Статический контроль в JavaScript с использованием Flow: настройка среды исполнения, использование из командной строки, проверка типов переменных, проверка параметров функций, generics, перечислимые типы. Тема 9. Основы работы с фреймворком Angular. Основы фреймворка Angular: структура приложения, компоненты, сервисы, иерархия сервисов. Создание директив, привязка, задание маршрутов, параметры маршрутизации. Использование шаблонных переменных, работа с дочерними компонентами, валидация данных, взаимодействие с сервером. Тема 10. Использование библиотеки React. Библиотека Immutable.JS. Применение JSX. Компоненты и их иерархия в библиотеке React, свойства, состояние переменных. Жизненный цикл компонентов, события. Работа с формами в React. Маршрутизация, хуки. Библиотека Redux для создания единого состояния приложения: действия, редьюсеры, хранилище. Тема 11. Основы работы с фреймворком Vue. Декларативная отрисовка в фреймоврке Vue. Работа с вводом пользователя. Условия и циклы. Композиция приложения из компонентов. Синтаксис шаблонов. Вычисляемые свойства и наблюдатели. Работа с классами и стилями. Маршрутизация. Применение Vuex для обеспечения единого состояния приложения. Тема 12. Тестирование web-приложений. Понятие TDD-разработки. Модульные тесты: Assert – встроенный в Node.js модуль для тестирования, применение принципов TDD; Should – библиотека утверждений; Chai – библиотека утверждений. Mocha – фреймворк для тестирования. Jest – фреймворк для тестирования. Тестирование с использованием Selenium, Selenium IDE, Protractor. Использование headless браузеров. Использованием Postman для тестирования web-сервера. Тема 13. Сборка приложений, новые возможности языка JavaScript. Автоматизация задач с помощью GULP, применение src, dest, обработка стилей, скриптов. Сборка модулей (bundle) с помощью Webpack: простая конфигурация (entry, output), использование загрузчиков и плагинов, контроль изменений кода при разработке, отладка web-приложений. Новые возможности JavaScript: web-сообщения, web-worker, web-сокеты (ws, socket.io). Возможности history, sessionStorage, localStorage, cookie. Авторизация с Passportjs. Работа с реляционными базами данных с использованием Sequelize ORM. Применение WebAssembly. Тема 14. Применение языка PHP. Настройка nginx для работы с php. Знакомство с языком PHP: область применения, основные элементы языка (переменные, условные операторы, циклы, строки, массивы, функции, элементы ООП), работа с файлами (в т.ч. xml), обработка запросов с клиента (get, post), обработка исключительных ситуаций и ошибок. Знакомство с CMS. Тема 15. Взлом и безопасность web-приложений. Возможные уязвимости web-приложений. Обеспечение безопасности web-приложения от взлома: SQL-уязвимость, Shell-код, Upload-уязвимость, Include-уязвимость, XSS-уязвимость. Инструменты проверки на наличие уязвимостей.",
    "text_proj": "Анализ динамики COVID-19 в России. ·       Web-приложение для отображения динамики различных характеристик распространения COVID-19 в России. ·       Приложение должно отображать различные характеристики, как исходные, так и производные, вычисленные приложением. Так же иногда полезно иметь возможность наложить несколько характеристик друг на друга. ·       Примеры исходных характеристик: динамика новых случаев, динамика выздоровлений. Примеры производных характеристик: разница между новыми случаями и выздоровлениями (больше людей заболевает или больше выздоравливает - растёт или уменьшается нагрузка на систему здравоохранения). Команда Frontend разработчик Backend разработчик iOS/Android разработчик. Как таковых обязательных требований нет. Смотрите желательные. . Технологический стек Frontend Javascript / typescript; фреймворки на выбор: React + Redux, Vue, Angular. Backend Java / Kotlin; Spring framework. C#; WebAPI, EntityFramework или Dapper. Mobile (опционально) iOS/Android приложение для отображения различных графиков. В результате получит: знания: разовьете свои знания по указанным технологиям опыт: работа в команде по методологии SCRUM, распределенной разработке, общее понимание коммерческой разработки Потенциальное трудоустройство . ",
    "need_match": true
  },
  {
    "id_rp": "3490",
    "id_proj": "20",
    "name_rp": "Спецификация, проектирование и архитектура программных систем",
    "name_proj": "Построение аналитического решения, включая корпоративное хранилище данных в рамках проектов по внедрению биллинговых систем и связанных с ними дополнительных систем",
    "text_rp": "Дисциплина «Спецификация, проектирование и архитектура программных систем» предусматривает изучение методов выявления требований, анализа функциональных и нефункциональных требований, документирования требований и управления требованиями к программным системам, обеспечивает формирование знаний об организации архитектуры программных систем и умений по проектированию программных систем с применением современных методов и средств. Рассматриваются как проблемы общего характера, возникающие в процессе проектирование программных систем, так и конкретные методы, обеспечивающие достижение оптимального качества архитектуры системы с учетом результатов анализа требований.. Целью дисциплины является получение теоретических знаний в области спецификации, проектирования и архитектуры программных систем, а также практических навыков по применению полученных знаний для решения задач профессиональной деятельности. Задачей дисциплины является приобретение знаний, умений и навыков в области; - анализа требований с использованием стандартов и систем автоматизации разработки требований; - архитектур программных систем; - проектирования программных систем. Студенты должны приобрести знания: - формальных методов, технологий и инструментов разработки программного продукта, методов выявления требований, общих стратегий и конкретных методов проектирования программных систем; - основ моделирования и анализа программных систем, разработки, спецификации и управления требованиями; - теоретических основ архитектурной и программной организации информационных систем; - концепций и стратегий архитектурного проектирования программного продукта, видов структур и архитектур программных систем, их особенностей; - состава, форм и содержания документов, разрабатываемых при проектировании программных систем. Студенты должны приобрести умения: - разрабатывать и специфицировать требования, применять методы выявления и анализа функциональных и нефункциональных требований, использовать инструментальные средства, поддерживающие разработку и анализ требований; - конструировать программное обеспечение, разрабатывать основные программные документы, проводить структурную декомпозицию программной системы на компоненты, разрабатывать статические и динамические представления архитектуры программной системы; - использовать типовые архитектурные решения при проектировании программной системы, применять шаблоны проектирования и шаблоны интеграции. Студенты должны освоить навыки: - разработки и отладки программ на алгоритмических языках программирования, навыками разработки, анализа и документирования требований; - разработки архитектуры программной системы, методами обеспечения качества архитектуры программной системы, технологиями и средствами проектирования программных систем; - использования методов и средств разработки и оформления технической документации.. Вопрос №1 Назовите подход к проектированию автоматизированных систем, основанный на использовании единой модели предметной области  1.Структурное (функционально-модульное) проектирование  2.Объектно-ориентированный подход  3.Предметно-ориентированное проектирование  Вопрос №2 Укажите модель, на основании которой должны приниматься решения при проектировании (дизайне) автоматизированной системы  1. Модель требований  2. Дизайн системы  3. Модель реализации  4. Процессная модель  Вопрос №3 Укажите метафору, соответствующую автоматизированной системе, которая предназначена для ввода, структурированного хранения и обработки данных, оптимизированной для выполнения максимального количества транзакций за короткие промежутки времени  1.Учетная система  2.Аналитическая система  3.Потоковая система  4.Моделирующая система . Экзаменационный тест формируется из вопросов тестов текущего контроля и состоит из 54 вопросов . Министерство науки и высшего образования Российской Федерации ФГАОУ ВО «Санкт-Петербургский государственный электротехнический университет «ЛЭТИ» имени В.И. Ульянова (Ленина)» ____________________________________________________________ ЭКЗАМЕНАЦИОННЫЙ БИЛЕТ № 1 Дисциплина Спецификация, проектирование и архитектура программных систем  ФКТИ 1. Требования в контексте системного проектирования.  2. UML и современные технологии.   УТВЕРЖДАЮ Заведующий кафедрой                                                   К.В. Кринкин. Введение. Место дисциплины в ООП. Рабочая программа дисциплины. Материал, выносимый на аттестацию. Формы проведения аттестации. Тема 1. Программная инженерия. Основные понятия и определения. Программная инженерия. Система. Окружение. Миссия. Заинтересованное лицо. Системный подход. Классификация информационных систем. Нормативно-методическое обеспечение. Стандарты Российской Федерации в области разработки программного обеспечения. SWEBoK. Предметно-ориентированное проектирование. Тема 2. Разработка программного обеспечения на основе моделей. Особенности программного проекта. Причины неудач в проектах. MDD-разработка. Способы описания функциональных требований. Стоимость сложности программного продукта. Валидация и верификация моделей. Тема 3. Каноническое проектирование информационной системы. Комплекс стандартов ГОСТ 34. Стадии канонического проектирования. Тема 4. Спецификация и управление требованиями. Требования в контексте системного проектирования. Требования и качество. Требования и процесс выполнения проекта. Общий процесс разработки требований. Описание и анализ требований. Разработка требований в области проблем. Разработка требований в области решений. Тема 5. Визуальное моделирование. Структурный подход. Что такое моделирование. Структурные методы анализа и проектирования программного обеспечения. Диаграммы IDEF. Диаграммы DFD. BPwin. Тема 6. Визуальное моделирование. Унифицированный язык моделирования UML. Методология анализа, проектирования и разработки программного обеспечения. Принципы объектно-ориентированной методологии разработки программного обеспечения. UML и современные технологии. Тема 7. Архитектура программных систем. Типовые архитектурные решения. Цель проектирования. Архитектура системы. Типовые решения (паттерны). Типовые решения распределенной обработки данных. Заключение. Общие выводы по курсу.",
    "text_proj": "Построение аналитического решения, включая корпоративное хранилище данных в рамках проектов по внедрению биллинговых систем и связанных с ними дополнительных систем. В настоящее время компания ведет ряд крупных проектов по внедрению биллинговых систем и связанных с ними дополнительных систем. В рамках каждого из этих проектов стоит задача построения аналитического решения, включая корпоративное хранилище данных. В качестве источников данных для корпоративного хранилища помимо биллинговой системы выступают CRM-система и ЛКК (Личный кабинет клиента).  В задачи Аналитика BI включается: Анализ систем-источников, их архитектуры данных и бизнес-процессов, которые они автоматизируют. Сбор и анализ требований Заказчика, документирование требований. Проектирование предметных областей в BI-решении (Договорная работа, Финансовый учет, CRM, ЛКК) Постановка задач на разработку. Проверка реализации функциональности и передача ее Заказчику. Обучение пользователей. Задачи проекта реализуются в рамках отдела информационно-аналитических систем департамента разработки бизнес-приложений. Важно владеть: Основами баз данных. Основами проектирования баз данных. Базовыми знания SQL для анализа данных. Подходами к обследованию, сбору требований. В результате участник получит опыт участия в производственном проекте в роли аналитика BI. ",
    "need_match": true
  },
  {
    "id_rp": "4776",
    "id_proj": "34",
    "name_rp": "Web-технологии",
    "name_proj": "Разработка модулей «Кафедра» и «Деканат-2» для новой платформы сервисов личного кабинета",
    "text_rp": "Курс «Web-технологии» охватывает широкий спектр технологий и подходов, использующихся при разработке Интернет-сайтов и web-приложений. Рассматриваются основы построения web-приложений с использованием HTML, CSS. Студенты последовательно изучают основы протокола HTTP, настройку web-сервера, основы JavaScript, TypeScript и PHP, построение статических HTML-страниц и оформления с использованием CSS, LESS и SASS, разработку сервера приложений с использованием Node.JS. Построение серверной части на основе Express и Nest, разработка клиентских приложений с использованием Angular, React и Vue. Выполнение модульного тестирования web-приложений, сборка приложений с использованием GULP и Webpack, обеспечение безопасности web-приложений.. Целью дисциплины является приобретение теоретических знаний о современных web-технологиях и фреймворках и практических навыков по всем этапам разработки web-приложений от разработки web-серверов, создания и оформления web-клиентов, организации защиты от взома. Задачами изучения дисциплины является приобретение теоретических знаний по проектированию web-приложений, формирование практических умений и навыков по разработке серверной и клиентской части web-приложений, оформлению и тестированию приложений. Знание основных подходов по построению клиентской и серверной части web-приложений, по оформлению web-страниц, в том числе для просмотра с мобильных устройств, по решению типовых задач тестирования, сборки и обеспечения безопасности web-приложений с использованием языков JavaScript, TypeScript, PHP. Умение разрабатывать клиентскую и серверную часть web-приложений, осуществлять настройку, тестирование и автоматизированную сборку web-приложений, решать базовые вопросы кибербезопасности. Формирование навыков создания статических HTML-страниц, динамических web-приложений на языках JavaScript и TypeScript, навыков применения современных фреймворков разработки клиентских и серверных частей web-приложений.. Тесты размещены в курсе Moodle, примеры вопросов: Сопоставьте коды состояний HTTP их описаниям В чём преимущество HTTP/2 по сравнению с предыдущими версиями протокола? Какой HTTP метод используется для описания параметров соединения с ресурсом? Какими функциями можно управлять с помощью HTTP? Выберите соответствие команд для управления модулями с помощью npm и yarn. Министерство науки и высшего образования Российской Федерации ФГАОУ ВО «Санкт-Петербургский государственный электротехнический университет «ЛЭТИ» имени В.И. Ульянова (Ленина)» ____________________________________________________________ ЭКЗАМЕНАЦИОННЫЙ БИЛЕТ № 1 Дисциплина Web-технологии  ФКТИ 1. Что такое протокол HTTP? Какие он поддерживает методы, как передаёт параметры? Для чего предназначены заголовки?  2. Опишите структуру HTML, понятие DOM-модели. Как осуществляется обработка событий в HTML? УТВЕРЖДАЮ Заведующий кафедрой                                                   К. В. Кринкин. Тема 1. Введение. Введение. Описание трехуровневой архитектуры. Описание протокола HTTP: методы, параметры, запрос, ответ, заголовки, общие вопросы безопасности. Сервер nginx: установка, конфигурации, статическое содержимое, использование в качестве прокси. Apache-сервер. Тема 2. Основы языка JavaScript. Стандарт ECMAScript. Установка и основы использования Node.js. Язык JavaScript: базовые конструкции языка, строки, функции, объекты, классы, массивы, JSON, промисы, генераторы, Map, Set, прокси. Строгий режим JavaScript. Тема 3. Применение Node.js. Основы Deno. Работа с модулями. Использование npm и yarn, готовые модули. Событийная модель в Node.js. Создание простейшего сервера на Node.js. Эхо-сервер, параметры запроса, заголовки. Журналирование. Внешние сервера для журналирования: Rollbar – попытка отловить ошибки раньше пользователей, Sentry – прослеживание JavaScript. Работа с файлами и потоками. «Асинхронный try-catch». Использование nvm. Использование Deno: установка, настройка среды, разрешения и примеры. Тема 4. Основы HTML. Структура HTML, понятие DOM-модели. Базовые элементы и поддерживаемые ими атрибуты. Обработка событий в HTML. Элемент form, его атрибуты, соответствующие элементы: input, select, fieldset, textarea, button. Валидация введённых значений на JavaScript. Тема 5. Основы настройки стилей CSS, LESS, SASS. Оформление HTML с использованием CSS. Селекторы, свойства и их значения, псевдоклассы. Оформление границ, отступов, размеров, ссылок, списков, таблиц, текста, настройка шрифта, использование иконок. Позиционирование элементов. Адаптивная верстка, использование grid, flexbox. Использование шаблонов web-страниц, переменных в CSS. Работа с CSS с использованием JavaScript. Использование CSS-фильтров. Библиотека w3.css. Знакомство с фреймворками LESS и SASS. Тема 6. Применение Express, NestJS, RESTful, Ajax. Использование Express и Koa. Использование шаблонов на основе PUG и EJS. Cookies на сервере. Реализация сессии. Фреймворк NestJS: архитектура приложения, базовый пример на JavaScript, основные возможности, подключение шаблонов. Реализация RESTful на Node.js. Применение Ajax: XMLHttpRequest, fetch. Ограничения CORS. Тема 7. Основы использования библиотек jQuery и jQuery UI. Применение jQuery: селекторы, манипуляции с DOM, обработка событий использование свойств и классов CSS, эффекты, Ajax-запросы. Применение jQuery UI: взаимодействие, перетаскивание, изменение размера, выбираемые и сортируемые элементы, виджеты, аккордеон, автозаполнение, кнопки, переключатели, controlgroup, выбор даты, диалоговое окно, меню, отображение прогресса, selectmenu, бегунок, спиннер, вкладки, подсказки, темы. Знакомство с jQuery mobile. Тема 8. Основы языка TypeScript. Статический контроль с использованием Flow. Основы языка TypeScript: типы переменных, интерфейсы, классы, функции, шаблоны, перечисления, импорт-экспорт, пространства имён, конфигурации, JSX. Статический контроль в JavaScript с использованием Flow: настройка среды исполнения, использование из командной строки, проверка типов переменных, проверка параметров функций, generics, перечислимые типы. Тема 9. Основы работы с фреймворком Angular. Основы фреймворка Angular: структура приложения, компоненты, сервисы, иерархия сервисов. Создание директив, привязка, задание маршрутов, параметры маршрутизации. Использование шаблонных переменных, работа с дочерними компонентами, валидация данных, взаимодействие с сервером. Тема 10. Использование библиотеки React. Библиотека Immutable.JS. Применение JSX. Компоненты и их иерархия в библиотеке React, свойства, состояние переменных. Жизненный цикл компонентов, события. Работа с формами в React. Маршрутизация, хуки. Библиотека Redux для создания единого состояния приложения: действия, редьюсеры, хранилище. Тема 11. Основы работы с фреймворком Vue. Декларативная отрисовка в фреймоврке Vue. Работа с вводом пользователя. Условия и циклы. Композиция приложения из компонентов. Синтаксис шаблонов. Вычисляемые свойства и наблюдатели. Работа с классами и стилями. Маршрутизация. Применение Vuex для обеспечения единого состояния приложения. Тема 12. Тестирование web-приложений. Понятие TDD-разработки. Модульные тесты: Assert – встроенный в Node.js модуль для тестирования, применение принципов TDD; Should – библиотека утверждений; Chai – библиотека утверждений. Mocha – фреймворк для тестирования. Jest – фреймворк для тестирования. Тестирование с использованием Selenium, Selenium IDE, Protractor. Использование headless браузеров. Использованием Postman для тестирования web-сервера. Тема 13. Сборка приложений, новые возможности языка JavaScript. Автоматизация задач с помощью GULP, применение src, dest, обработка стилей, скриптов. Сборка модулей (bundle) с помощью Webpack: простая конфигурация (entry, output), использование загрузчиков и плагинов, контроль изменений кода при разработке, отладка web-приложений. Новые возможности JavaScript: web-сообщения, web-worker, web-сокеты (ws, socket.io). Возможности history, sessionStorage, localStorage, cookie. Авторизация с Passportjs. Работа с реляционными базами данных с использованием Sequelize ORM. Применение WebAssembly. Тема 14. Применение языка PHP. Настройка nginx для работы с php. Знакомство с языком PHP: область применения, основные элементы языка (переменные, условные операторы, циклы, строки, массивы, функции, элементы ООП), работа с файлами (в т.ч. xml), обработка запросов с клиента (get, post), обработка исключительных ситуаций и ошибок. Знакомство с CMS. Тема 15. Взлом и безопасность web-приложений. Возможные уязвимости web-приложений. Обеспечение безопасности web-приложения от взлома: SQL-уязвимость, Shell-код, Upload-уязвимость, Include-уязвимость, XSS-уязвимость. Инструменты проверки на наличие уязвимостей.",
    "text_proj": "Разработка модулей «Кафедра» и «Деканат-2» для новой платформы сервисов личного кабинета. В рамках преобразования личного кабинета студентов, аспирантов и сотрудников необходимо выделить сервисы, которыми пользуются деканаты и кафедры в отдельные пользовательские интерфейсы. Новые интерфейсы должны агрегировать все возможности кафедр и деканатов в одном месте, а также реализовать новые возможности на основе имеющихся данных (например, получение списка задолженностей на выпускающей кафедре). Обязательно должен: знать: HTML, JS, CSS уметь: проектировать интерфейсы пользователя; проектировать RESTful API; писать интеграционные и юнит-тесты; документировать код; владеть: навыками анализа требований пользователя; навыками работы в команде; технологиями совместной работы: git, task-tracker. Желательно должен: знать: PHP, Node.js, Webpack, SCSS, Vue.js владеть:  навыками деловой переписки. ",
    "need_match": true
  },
  {
    "id_rp": "4776",
    "id_proj": "8",
    "name_rp": "Web-технологии",
    "name_proj": "Разработка ИС \"Расписание\" / \"Деканат\"",
    "text_rp": "Курс «Web-технологии» охватывает широкий спектр технологий и подходов, использующихся при разработке Интернет-сайтов и web-приложений. Рассматриваются основы построения web-приложений с использованием HTML, CSS. Студенты последовательно изучают основы протокола HTTP, настройку web-сервера, основы JavaScript, TypeScript и PHP, построение статических HTML-страниц и оформления с использованием CSS, LESS и SASS, разработку сервера приложений с использованием Node.JS. Построение серверной части на основе Express и Nest, разработка клиентских приложений с использованием Angular, React и Vue. Выполнение модульного тестирования web-приложений, сборка приложений с использованием GULP и Webpack, обеспечение безопасности web-приложений.. Целью дисциплины является приобретение теоретических знаний о современных web-технологиях и фреймворках и практических навыков по всем этапам разработки web-приложений от разработки web-серверов, создания и оформления web-клиентов, организации защиты от взома. Задачами изучения дисциплины является приобретение теоретических знаний по проектированию web-приложений, формирование практических умений и навыков по разработке серверной и клиентской части web-приложений, оформлению и тестированию приложений. Знание основных подходов по построению клиентской и серверной части web-приложений, по оформлению web-страниц, в том числе для просмотра с мобильных устройств, по решению типовых задач тестирования, сборки и обеспечения безопасности web-приложений с использованием языков JavaScript, TypeScript, PHP. Умение разрабатывать клиентскую и серверную часть web-приложений, осуществлять настройку, тестирование и автоматизированную сборку web-приложений, решать базовые вопросы кибербезопасности. Формирование навыков создания статических HTML-страниц, динамических web-приложений на языках JavaScript и TypeScript, навыков применения современных фреймворков разработки клиентских и серверных частей web-приложений.. Тесты размещены в курсе Moodle, примеры вопросов: Сопоставьте коды состояний HTTP их описаниям В чём преимущество HTTP/2 по сравнению с предыдущими версиями протокола? Какой HTTP метод используется для описания параметров соединения с ресурсом? Какими функциями можно управлять с помощью HTTP? Выберите соответствие команд для управления модулями с помощью npm и yarn. Министерство науки и высшего образования Российской Федерации ФГАОУ ВО «Санкт-Петербургский государственный электротехнический университет «ЛЭТИ» имени В.И. Ульянова (Ленина)» ____________________________________________________________ ЭКЗАМЕНАЦИОННЫЙ БИЛЕТ № 1 Дисциплина Web-технологии  ФКТИ 1. Что такое протокол HTTP? Какие он поддерживает методы, как передаёт параметры? Для чего предназначены заголовки?  2. Опишите структуру HTML, понятие DOM-модели. Как осуществляется обработка событий в HTML? УТВЕРЖДАЮ Заведующий кафедрой                                                   К. В. Кринкин. Тема 1. Введение. Введение. Описание трехуровневой архитектуры. Описание протокола HTTP: методы, параметры, запрос, ответ, заголовки, общие вопросы безопасности. Сервер nginx: установка, конфигурации, статическое содержимое, использование в качестве прокси. Apache-сервер. Тема 2. Основы языка JavaScript. Стандарт ECMAScript. Установка и основы использования Node.js. Язык JavaScript: базовые конструкции языка, строки, функции, объекты, классы, массивы, JSON, промисы, генераторы, Map, Set, прокси. Строгий режим JavaScript. Тема 3. Применение Node.js. Основы Deno. Работа с модулями. Использование npm и yarn, готовые модули. Событийная модель в Node.js. Создание простейшего сервера на Node.js. Эхо-сервер, параметры запроса, заголовки. Журналирование. Внешние сервера для журналирования: Rollbar – попытка отловить ошибки раньше пользователей, Sentry – прослеживание JavaScript. Работа с файлами и потоками. «Асинхронный try-catch». Использование nvm. Использование Deno: установка, настройка среды, разрешения и примеры. Тема 4. Основы HTML. Структура HTML, понятие DOM-модели. Базовые элементы и поддерживаемые ими атрибуты. Обработка событий в HTML. Элемент form, его атрибуты, соответствующие элементы: input, select, fieldset, textarea, button. Валидация введённых значений на JavaScript. Тема 5. Основы настройки стилей CSS, LESS, SASS. Оформление HTML с использованием CSS. Селекторы, свойства и их значения, псевдоклассы. Оформление границ, отступов, размеров, ссылок, списков, таблиц, текста, настройка шрифта, использование иконок. Позиционирование элементов. Адаптивная верстка, использование grid, flexbox. Использование шаблонов web-страниц, переменных в CSS. Работа с CSS с использованием JavaScript. Использование CSS-фильтров. Библиотека w3.css. Знакомство с фреймворками LESS и SASS. Тема 6. Применение Express, NestJS, RESTful, Ajax. Использование Express и Koa. Использование шаблонов на основе PUG и EJS. Cookies на сервере. Реализация сессии. Фреймворк NestJS: архитектура приложения, базовый пример на JavaScript, основные возможности, подключение шаблонов. Реализация RESTful на Node.js. Применение Ajax: XMLHttpRequest, fetch. Ограничения CORS. Тема 7. Основы использования библиотек jQuery и jQuery UI. Применение jQuery: селекторы, манипуляции с DOM, обработка событий использование свойств и классов CSS, эффекты, Ajax-запросы. Применение jQuery UI: взаимодействие, перетаскивание, изменение размера, выбираемые и сортируемые элементы, виджеты, аккордеон, автозаполнение, кнопки, переключатели, controlgroup, выбор даты, диалоговое окно, меню, отображение прогресса, selectmenu, бегунок, спиннер, вкладки, подсказки, темы. Знакомство с jQuery mobile. Тема 8. Основы языка TypeScript. Статический контроль с использованием Flow. Основы языка TypeScript: типы переменных, интерфейсы, классы, функции, шаблоны, перечисления, импорт-экспорт, пространства имён, конфигурации, JSX. Статический контроль в JavaScript с использованием Flow: настройка среды исполнения, использование из командной строки, проверка типов переменных, проверка параметров функций, generics, перечислимые типы. Тема 9. Основы работы с фреймворком Angular. Основы фреймворка Angular: структура приложения, компоненты, сервисы, иерархия сервисов. Создание директив, привязка, задание маршрутов, параметры маршрутизации. Использование шаблонных переменных, работа с дочерними компонентами, валидация данных, взаимодействие с сервером. Тема 10. Использование библиотеки React. Библиотека Immutable.JS. Применение JSX. Компоненты и их иерархия в библиотеке React, свойства, состояние переменных. Жизненный цикл компонентов, события. Работа с формами в React. Маршрутизация, хуки. Библиотека Redux для создания единого состояния приложения: действия, редьюсеры, хранилище. Тема 11. Основы работы с фреймворком Vue. Декларативная отрисовка в фреймоврке Vue. Работа с вводом пользователя. Условия и циклы. Композиция приложения из компонентов. Синтаксис шаблонов. Вычисляемые свойства и наблюдатели. Работа с классами и стилями. Маршрутизация. Применение Vuex для обеспечения единого состояния приложения. Тема 12. Тестирование web-приложений. Понятие TDD-разработки. Модульные тесты: Assert – встроенный в Node.js модуль для тестирования, применение принципов TDD; Should – библиотека утверждений; Chai – библиотека утверждений. Mocha – фреймворк для тестирования. Jest – фреймворк для тестирования. Тестирование с использованием Selenium, Selenium IDE, Protractor. Использование headless браузеров. Использованием Postman для тестирования web-сервера. Тема 13. Сборка приложений, новые возможности языка JavaScript. Автоматизация задач с помощью GULP, применение src, dest, обработка стилей, скриптов. Сборка модулей (bundle) с помощью Webpack: простая конфигурация (entry, output), использование загрузчиков и плагинов, контроль изменений кода при разработке, отладка web-приложений. Новые возможности JavaScript: web-сообщения, web-worker, web-сокеты (ws, socket.io). Возможности history, sessionStorage, localStorage, cookie. Авторизация с Passportjs. Работа с реляционными базами данных с использованием Sequelize ORM. Применение WebAssembly. Тема 14. Применение языка PHP. Настройка nginx для работы с php. Знакомство с языком PHP: область применения, основные элементы языка (переменные, условные операторы, циклы, строки, массивы, функции, элементы ООП), работа с файлами (в т.ч. xml), обработка запросов с клиента (get, post), обработка исключительных ситуаций и ошибок. Знакомство с CMS. Тема 15. Взлом и безопасность web-приложений. Возможные уязвимости web-приложений. Обеспечение безопасности web-приложения от взлома: SQL-уязвимость, Shell-код, Upload-уязвимость, Include-уязвимость, XSS-уязвимость. Инструменты проверки на наличие уязвимостей.",
    "text_proj": "Разработка ИС \"Расписание\" / \"Деканат\". Информационная система (ИС) \"Расписание\" обеспечивает процессы формирования и предоставления расписания в вузе. В рамках неё выполняется согласование пожеланий преподавателей, кафедр и возможностей аудиторного фонда ЛЭТИ. Система реализована на JavaScript с использованием фреймворка Svelte. Необходимо перевести систему на TypeScript, фреймворк Vue 2.0 с материальным дизайном Bootstrap (шаблон приложения будет дан). ИС \"Деканат\" предназначена для автоматизации процессов в деканате. В настоящее время осуществляется информационное обследование процессов деканата, разработка начнётся в середине марта. Технологии: TypeScript, фреймворк Vue 2.0 с материальным дизайном Bootstrap. Обязательно должен: знать: HTML, CSS, JavaScript, TypeScript. уметь выполнять:  проектирование интерфейса пользователя и запросов на web-сервер; разработку статического web-приложения; реализацию динамического web-приложения; подключение web-приложения к web-серверу; разработку модульных и интеграционных тестов; описание своих решений в виде справки для пользователя; владеть: основными навыками анализа требований пользователя, разработки web-приложений, работе в команде; технологиями совместной работы: git, wiki, bugtracker. Желательно должен: знать: фреймворки Vue 2.0, NestJS, Bootstrap; уметь: проектировать UX web-приложения; разрабатывать дизайн web-приложения; разрабатывать новые web-компоненты; разрабатывать серверную часть web-приложений; проектировать БД; выполнять нагрузочное тестирование; проверять web-приложение на взлом и готовить рекомендации по защите от взлома; работать в качестве технической поддержки для пользователя; описывать разработанные решения в виде публикаций; обладать навыком совместной разработки. В результате получит большинство знаний из перечисленных в \"Желательно должен\". Отбор студентов для проекта. После этого задания возможны следующие варианты:   - мы берём Вас на работу в отдел ОРПК ЛЭТИ (это основная цель участия в данном проекте, если Вы в этом не заинтересованы, то прошу сразу меня об этом уведомить), - мы даём дополнительное задание в случае высокой конкуренции либо   - мы рекомендуем Вас в другие проекты (в ЛЭТИ или других организациях). Интеграция созданных решений. Объединение полученных тестовых заданий в одну систему. Выполнение первого этапа проекта. Проектирование интерфейса пользователя Проектирование набора запросов на сервер Разработка статического web-приложения Разработка динамического web-приложения Проектирование структуры БД Разработка web-сервера Подключение к web-серверу Тестирование Проверка на взлом Опытная эксплуатация. 2. Формирование расписания для военно-учебного центра. 2.1. Клиентская часть ИС \"Расписание\" ЛЭТИ реализована с помощью фреймворка Svelte. Необходимо заданные в п.1 компоненты переписать на TypeScript+Vue2+Bootstrap, подготовить тесты и техническую документацию. Обращаю внимание, что разные компоненты выданы разным студентам, поэтому работать прошу именно с теми компонентами, которые указаны в п.1. В дальнейшем компоненты будут объединены в одно web-приложение. 2.2. Результаты прошу в виде pull request (PR) отправить в GIT. На написанный код будут выданы рекомендации/замечания/предложения, которые необходимо будет учесть. 2.3. К сожалению, данное задание не проверяет знания, умения и навыки по всему циклу разработки программного обеспечения, но позволяет \"окунуться\" в реальную разработку и проверить готовность решать реальные задачи. 2.4. Рекомендуемый срок выполнения до отправки первого PR: 2-3 недели, максимальный: 5 недель. Предполагается, что с рекомендациями/замечаниями/предложениями по PR Вы справитесь за 2-3 недели. 3. Формирование расписания для кафедры ФвиС. 2.1. Клиентская часть ИС \"Расписание\" ЛЭТИ реализована с помощью фреймворка Svelte. Необходимо заданные в п.1 компоненты переписать на TypeScript+Vue2+Bootstrap, подготовить тесты и техническую документацию. Обращаю внимание, что разные компоненты выданы разным студентам, поэтому работать прошу именно с теми компонентами, которые указаны в п.1. В дальнейшем компоненты будут объединены в одно web-приложение. 2.2. Результаты прошу в виде pull request (PR) отправить в GIT. На написанный код будут выданы рекомендации/замечания/предложения, которые необходимо будет учесть. 2.3. К сожалению, данное задание не проверяет знания, умения и навыки по всему циклу разработки программного обеспечения, но позволяет \"окунуться\" в реальную разработку и проверить готовность решать реальные задачи. 2.4. Рекомендуемый срок выполнения до отправки первого PR: 2-3 недели, максимальный: 5 недель. Предполагается, что с рекомендациями/замечаниями/предложениями по PR Вы справитесь за 2-3 недели. 4. Подтверждение перечня дисциплин. 2.1. Клиентская часть ИС \"Расписание\" ЛЭТИ реализована с помощью фреймворка Svelte. Необходимо заданные в п.1 компоненты переписать на TypeScript+Vue2+Bootstrap, подготовить тесты и техническую документацию. Обращаю внимание, что разные компоненты выданы разным студентам, поэтому работать прошу именно с теми компонентами, которые указаны в п.1. В дальнейшем компоненты будут объединены в одно web-приложение. 2.2. Результаты прошу в виде pull request (PR) отправить в GIT. На написанный код будут выданы рекомендации/замечания/предложения, которые необходимо будет учесть. 2.3. К сожалению, данное задание не проверяет знания, умения и навыки по всему циклу разработки программного обеспечения, но позволяет \"окунуться\" в реальную разработку и проверить готовность решать реальные задачи. 2.4. Рекомендуемый срок выполнения до отправки первого PR: 2-3 недели, максимальный: 5 недель. Предполагается, что с рекомендациями/замечаниями/предложениями по PR Вы справитесь за 2-3 недели. 6. Составление пожеланий по экзаменационной сессии. 2.1. Клиентская часть ИС \"Расписание\" ЛЭТИ реализована с помощью фреймворка Svelte. Необходимо заданные в п.1 компоненты переписать на TypeScript+Vue2+Bootstrap, подготовить тесты и техническую документацию. Обращаю внимание, что разные компоненты выданы разным студентам, поэтому работать прошу именно с теми компонентами, которые указаны в п.1. В дальнейшем компоненты будут объединены в одно web-приложение. 2.2. Результаты прошу в виде pull request (PR) отправить в GIT. На написанный код будут выданы рекомендации/замечания/предложения, которые необходимо будет учесть. 2.3. К сожалению, данное задание не проверяет знания, умения и навыки по всему циклу разработки программного обеспечения, но позволяет \"окунуться\" в реальную разработку и проверить готовность решать реальные задачи. 2.4. Рекомендуемый срок выполнения до отправки первого PR: 2-3 недели, максимальный: 5 недель. Предполагается, что с рекомендациями/замечаниями/предложениями по PR Вы справитесь за 2-3 недели. 7. Составление пожеланий по экзаменационной сессии. 2.1. Клиентская часть ИС \"Расписание\" ЛЭТИ реализована с помощью фреймворка Svelte. Необходимо заданные в п.1 компоненты переписать на TypeScript+Vue2+Bootstrap, подготовить тесты и техническую документацию. Обращаю внимание, что разные компоненты выданы разным студентам, поэтому работать прошу именно с теми компонентами, которые указаны в п.1. В дальнейшем компоненты будут объединены в одно web-приложение. 2.2. Результаты прошу в виде pull request (PR) отправить в GIT. На написанный код будут выданы рекомендации/замечания/предложения, которые необходимо будет учесть. 2.3. К сожалению, данное задание не проверяет знания, умения и навыки по всему циклу разработки программного обеспечения, но позволяет \"окунуться\" в реальную разработку и проверить готовность решать реальные задачи. 2.4. Рекомендуемый срок выполнения до отправки первого PR: 2-3 недели, максимальный: 5 недель. Предполагается, что с рекомендациями/замечаниями/предложениями по PR Вы справитесь за 2-3 недели. 5. Согласование экзаменационной сессии. 2.1. Клиентская часть ИС \"Расписание\" ЛЭТИ реализована с помощью фреймворка Svelte. Необходимо заданные в п.1 компоненты переписать на TypeScript+Vue2+Bootstrap, подготовить тесты и техническую документацию. Обращаю внимание, что разные компоненты выданы разным студентам, поэтому работать прошу именно с теми компонентами, которые указаны в п.1. В дальнейшем компоненты будут объединены в одно web-приложение. 2.2. Результаты прошу в виде pull request (PR) отправить в GIT. На написанный код будут выданы рекомендации/замечания/предложения, которые необходимо будет учесть. 2.3. К сожалению, данное задание не проверяет знания, умения и навыки по всему циклу разработки программного обеспечения, но позволяет \"окунуться\" в реальную разработку и проверить готовность решать реальные задачи. 2.4. Рекомендуемый срок выполнения до отправки первого PR: 2-3 недели, максимальный: 5 недель. Предполагается, что с рекомендациями/замечаниями/предложениями по PR Вы справитесь за 2-3 недели. 8. Составление пожеланий по расписанию (часть 2). 2.1. Клиентская часть ИС \"Расписание\" ЛЭТИ реализована с помощью фреймворка Svelte. Необходимо заданные в п.1 компоненты переписать на TypeScript+Vue2+Bootstrap, подготовить тесты и техническую документацию. Обращаю внимание, что разные компоненты выданы разным студентам, поэтому работать прошу именно с теми компонентами, которые указаны в п.1. В дальнейшем компоненты будут объединены в одно web-приложение. 2.2. Результаты прошу в виде pull request (PR) отправить в GIT. На написанный код будут выданы рекомендации/замечания/предложения, которые необходимо будет учесть. 2.3. К сожалению, данное задание не проверяет знания, умения и навыки по всему циклу разработки программного обеспечения, но позволяет \"окунуться\" в реальную разработку и проверить готовность решать реальные задачи. 2.4. Рекомендуемый срок выполнения до отправки первого PR: 2-3 недели, максимальный: 5 недель. Предполагается, что с рекомендациями/замечаниями/предложениями по PR Вы справитесь за 2-3 недели. 9. Назначение преподавателей на дисциплины. 2.1. Клиентская часть ИС \"Расписание\" ЛЭТИ реализована с помощью фреймворка Svelte. Необходимо заданные в п.1 компоненты переписать на TypeScript+Vue2+Bootstrap, подготовить тесты и техническую документацию. Обращаю внимание, что разные компоненты выданы разным студентам, поэтому работать прошу именно с теми компонентами, которые указаны в п.1. В дальнейшем компоненты будут объединены в одно web-приложение. 2.2. Результаты прошу в виде pull request (PR) отправить в GIT. На написанный код будут выданы рекомендации/замечания/предложения, которые необходимо будет учесть. 2.3. К сожалению, данное задание не проверяет знания, умения и навыки по всему циклу разработки программного обеспечения, но позволяет \"окунуться\" в реальную разработку и проверить готовность решать реальные задачи. 2.4. Рекомендуемый срок выполнения до отправки первого PR: 2-3 недели, максимальный: 5 недель. Предполагается, что с рекомендациями/замечаниями/предложениями по PR Вы справитесь за 2-3 недели. 11. Пожелания преподавателей по экзаменационной сессии. 2.1. Клиентская часть ИС \"Расписание\" ЛЭТИ реализована с помощью фреймворка Svelte. Необходимо заданные в п.1 компоненты переписать на TypeScript+Vue2+Bootstrap, подготовить тесты и техническую документацию. Обращаю внимание, что разные компоненты выданы разным студентам, поэтому работать прошу именно с теми компонентами, которые указаны в п.1. В дальнейшем компоненты будут объединены в одно web-приложение. 2.2. Результаты прошу в виде pull request (PR) отправить в GIT. На написанный код будут выданы рекомендации/замечания/предложения, которые необходимо будет учесть. 2.3. К сожалению, данное задание не проверяет знания, умения и навыки по всему циклу разработки программного обеспечения, но позволяет \"окунуться\" в реальную разработку и проверить готовность решать реальные задачи. 2.4. Рекомендуемый срок выполнения до отправки первого PR: 2-3 недели, максимальный: 5 недель. Предполагается, что с рекомендациями/замечаниями/предложениями по PR Вы справитесь за 2-3 недели. 13. Последняя версия расписания (черновик). 2.1. Клиентская часть ИС \"Расписание\" ЛЭТИ реализована с помощью фреймворка Svelte. Необходимо заданные в п.1 компоненты переписать на TypeScript+Vue2+Bootstrap, подготовить тесты и техническую документацию. Обращаю внимание, что разные компоненты выданы разным студентам, поэтому работать прошу именно с теми компонентами, которые указаны в п.1. В дальнейшем компоненты будут объединены в одно web-приложение. 2.2. Результаты прошу в виде pull request (PR) отправить в GIT. На написанный код будут выданы рекомендации/замечания/предложения, которые необходимо будет учесть. 2.3. К сожалению, данное задание не проверяет знания, умения и навыки по всему циклу разработки программного обеспечения, но позволяет \"окунуться\" в реальную разработку и проверить готовность решать реальные задачи. 2.4. Рекомендуемый срок выполнения до отправки первого PR: 2-3 недели, максимальный: 5 недель. Предполагается, что с рекомендациями/замечаниями/предложениями по PR Вы справитесь за 2-3 недели. 8. Составление пожеланий по расписанию (часть 1). 2.1. Клиентская часть ИС \"Расписание\" ЛЭТИ реализована с помощью фреймворка Svelte. Необходимо заданные в п.1 компоненты переписать на TypeScript+Vue2+Bootstrap, подготовить тесты и техническую документацию. Обращаю внимание, что разные компоненты выданы разным студентам, поэтому работать прошу именно с теми компонентами, которые указаны в п.1. В дальнейшем компоненты будут объединены в одно web-приложение. 2.2. Результаты прошу в виде pull request (PR) отправить в GIT. На написанный код будут выданы рекомендации/замечания/предложения, которые необходимо будет учесть. 2.3. К сожалению, данное задание не проверяет знания, умения и навыки по всему циклу разработки программного обеспечения, но позволяет \"окунуться\" в реальную разработку и проверить готовность решать реальные задачи. 2.4. Рекомендуемый срок выполнения до отправки первого PR: 2-3 недели, максимальный: 5 недель. Предполагается, что с рекомендациями/замечаниями/предложениями по PR Вы справитесь за 2-3 недели. 12. Бронирование аудиторий. 2.1. Клиентская часть ИС \"Расписание\" ЛЭТИ реализована с помощью фреймворка Svelte. Необходимо заданные в п.1 компоненты переписать на TypeScript+Vue2+Bootstrap, подготовить тесты и техническую документацию. Обращаю внимание, что разные компоненты выданы разным студентам, поэтому работать прошу именно с теми компонентами, которые указаны в п.1. В дальнейшем компоненты будут объединены в одно web-приложение. 2.2. Результаты прошу в виде pull request (PR) отправить в GIT. На написанный код будут выданы рекомендации/замечания/предложения, которые необходимо будет учесть. 2.3. К сожалению, данное задание не проверяет знания, умения и навыки по всему циклу разработки программного обеспечения, но позволяет \"окунуться\" в реальную разработку и проверить готовность решать реальные задачи. 2.4. Рекомендуемый срок выполнения до отправки первого PR: 2-3 недели, максимальный: 5 недель. Предполагается, что с рекомендациями/замечаниями/предложениями по PR Вы справитесь за 2-3 недели. 10. Пожелания преподавателей по расписанию. 2.1. Клиентская часть ИС \"Расписание\" ЛЭТИ реализована с помощью фреймворка Svelte. Необходимо заданные в п.1 компоненты переписать на TypeScript+Vue2+Bootstrap, подготовить тесты и техническую документацию. Обращаю внимание, что разные компоненты выданы разным студентам, поэтому работать прошу именно с теми компонентами, которые указаны в п.1. В дальнейшем компоненты будут объединены в одно web-приложение. 2.2. Результаты прошу в виде pull request (PR) отправить в GIT. На написанный код будут выданы рекомендации/замечания/предложения, которые необходимо будет учесть. 2.3. К сожалению, данное задание не проверяет знания, умения и навыки по всему циклу разработки программного обеспечения, но позволяет \"окунуться\" в реальную разработку и проверить готовность решать реальные задачи. 2.4. Рекомендуемый срок выполнения до отправки первого PR: 2-3 недели, максимальный: 5 недель. Предполагается, что с рекомендациями/замечаниями/предложениями по PR Вы справитесь за 2-3 недели. 14. Управление семестром. Настройка дат и Факультеты, наборы. 2.1. Клиентская часть ИС \"Расписание\" ЛЭТИ реализована с помощью фреймворка Svelte. Необходимо заданные в п.1 компоненты переписать на TypeScript+Vue2+Bootstrap, подготовить тесты и техническую документацию. Обращаю внимание, что разные компоненты выданы разным студентам, поэтому работать прошу именно с теми компонентами, которые указаны в п.1. В дальнейшем компоненты будут объединены в одно web-приложение. 2.2. Результаты прошу в виде pull request (PR) отправить в GIT. На написанный код будут выданы рекомендации/замечания/предложения, которые необходимо будет учесть. 2.3. К сожалению, данное задание не проверяет знания, умения и навыки по всему циклу разработки программного обеспечения, но позволяет \"окунуться\" в реальную разработку и проверить готовность решать реальные задачи. 2.4. Рекомендуемый срок выполнения до отправки первого PR: 2-3 недели, максимальный: 5 недель. Предполагается, что с рекомендациями/замечаниями/предложениями по PR Вы справитесь за 2-3 недели. 1. Формирование расписания для кафедры ИнЯз. 2.1. Клиентская часть ИС \"Расписание\" ЛЭТИ реализована с помощью фреймворка Svelte. Необходимо заданные в п.1 компоненты переписать на TypeScript+Vue2+Bootstrap, подготовить тесты и техническую документацию. Обращаю внимание, что разные компоненты выданы разным студентам, поэтому работать прошу именно с теми компонентами, которые указаны в п.1. В дальнейшем компоненты будут объединены в одно web-приложение. 2.2. Результаты прошу в виде pull request (PR) отправить в GIT. На написанный код будут выданы рекомендации/замечания/предложения, которые необходимо будет учесть. 2.3. К сожалению, данное задание не проверяет знания, умения и навыки по всему циклу разработки программного обеспечения, но позволяет \"окунуться\" в реальную разработку и проверить готовность решать реальные задачи. 2.4. Рекомендуемый срок выполнения до отправки первого PR: 2-3 недели, максимальный: 5 недель. Предполагается, что с рекомендациями/замечаниями/предложениями по PR Вы справитесь за 2-3 недели. ",
    "need_match": true
  },
  {
    "id_rp": "4770",
    "id_proj": "48",
    "name_rp": "Машинное обучение",
    "name_proj": "Разработка рекомендательной машины ",
    "text_rp": "Дисциплина посвящена знакомству с основными понятиями машинного обучения, алгоритмами, которые могут «обучаться» на данных с целью прогнозирования и принятия решений. Рассматриваются основные классы задач машинного обучения, такие как классификация, кластеризация, регрессия, снижение размерности, ранжирование. Особое внимание уделяется рассмотрению современных инструментов в этой области и приобретению практических навыков для использования аппарата машинного обучения в прикладных задачах.. Изучение дисциплины нацелено на приобретение знаний об основных понятиях, проблемах и современных математических методах машинного обучения, и формирование практических навыков их применения для решения задач профессиональной деятельности. Освоение математических методов и алгоритмов машинного обучения, позволяющих получать формализованные постановки задач машинного обучения. Приобретение знаний о способах проведения численных экспериментов и интерпретации полученных результатов. Формирование умения модифицировать известные или создавать новые методы машинного обучения. Получение навыков реализации и применения алгоритмов машинного обучения для решения прикладных задач.. Пример вопросов теста текущего контроля Тесты состоят из 20 вопросов с возможностью выбора одного или нескольких вариантов ответа.  1. Методы машинного обучения: a)   решают задачу в аналитическом виде b)  выделяют закономерности в данных c) производят поиск готового решения в БД 2. Если для модели машинного обучения необходимы данные с известным результатом, то данная модель обучается: a)   С учителем b)  Без учителя c)  С подкреплением 3. Какие перечисленные библиотеки Python используются для хранения И обработки данных: a)   MatPlotLib b)  NumPy c)   Pandas d)  Sklearn. Министерство науки и высшего образования Российской Федерации ФГАОУ ВО «Санкт-Петербургский государственный электротехнический университет «ЛЭТИ» имени В.И. Ульянова (Ленина)» ____________________________________________________________ ЭКЗАМЕНАЦИОННЫЙ БИЛЕТ № 1 Дисциплина Машинное обучение   ФКТИ 1. Формальная постановка задачи обучения с учителем 2. Логистическая и мультиномиальная регрессия 3. Кластеризация. Модель смеси распределений. УТВЕРЖДАЮ Заведующий кафедрой               К.В. Кринкин                             . Тема 1. Основы машинного обучения. Понятие машинного обучения. Отличие от традиционного подхода решения задач. Тема 2. Классификация подходов в машинном обучении. Обучение с учителем. Обучение без учителя. Обучения с подкреплением. Пакетное и динамическое обучение. Обучение на основе образцов. Обучение на основе моделей. Тема 3. Представление и предобработка данных. Представление данных, тензоры. Необходимость предобработки данных. Стандартизация данных. Приведения данных к одному диапазону. Недостающие значения в наборах данных. Тема 4. Метрики оценки моделей. Необходимость оценки моделей. Метрики для регрессионных моделей. Метрики для классифицирующих моделей. Метрики для моделей кластеризации. Тема 5. Регрессия. Регрессия. Линейная регрессия. Гребневая регрессия. Лассо регрессия. Регрессия в sklearn. Тема 6. Классификация. Классификация. Виды классификации. KNN. SVC. Решающие деревья/случайный лес. Наивный Байесовский классификатор. Линейный дискриминантный анализ. Логистическая регрессия. Классификация в sklearn. Тема 7. Кластеризация. Кластеризация. Иерархическая кластеризация. K-средних. OPTICS. DBSCAN. Спектральная кластеризация. Заключение. Перспективы применения методов машинного обучения к решению прикладных задач",
    "text_proj": "Разработка рекомендательной машины. Рекомендательная машина необходима для помощи в выборе, который осуществляется обучающимся на всем периоде обучения, начиная от выбора направления при поступлении и выбора вакансии при трудоустройстве или смены работы. При этом выбор не ограничивается только учебными модулями. Он связан выбором проектов, преподавателей, участием в различных мероприятиях, курсов ДПО и т.п. Результаты выбора формируют цифровой след обучающегося. На правильность выбора влияет множество факторов, включая цифровой след и имеющуюся цель (например, занять ту или иную должность в компании).  Для того чтобы учесть все эти факторы разрабатывается рекомендательная машина, которая помогает обучающемуся сделать правильный выбор. В данном проекте необходимо разрабатывать модули рекомендательной машины: шину данных для работы с множеством разных источников; модуль предобработки данных для преобразования исходных данных к виду и качеству необходимому для рекомендательных моделей ядро машинного обучения для подключения разных систем машинного обучения и выполнения на них различных моделей и алгоритмов машинного обучения модуль управления, обеспечивающий как формирование рекомендаций, так и переобучение рекомендательных моделей.  . Обязательно должен: знать: принципы выполнения машинного обучения, ООП уметь: изучать open source системы владеть: языками программирования Python, Java. Желательно должен: знать: принципы работы рекомендательных машин, шин данных, движков машинного обучения уметь: строить сложные программные системы из различных компонент владеть: Apach Spark, Apach Drill, scikit-learn и др. В результате получит: знать: работу рекомендательных машин, шин данных, движков машинного обучения уметь: строить сложные программные системы из различных компонент владеть: Apach Spark, Apach Drill, scikit-learn и др. ",
    "need_match": true
  },
  {
    "id_rp": "1447",
    "id_proj": "43",
    "name_rp": "Моделирование нелинейных динамических систем",
    "name_proj": "Нелинейная динамика и приложения теории хаоса",
    "text_rp": "Дисциплина направлена на ознакомление студентов с особенностями нелинейного поведения динамических систем, раскрытие закономерностей нелинейных процессов, возникающих в процессе проектирования и эксплуатации комплексных технических систем. Предусматривает овладение методами научных исследований в области теоретической и экспериментальной нелинейной динамики, современным инструментарием анализа поведения динамических систем и его имплементацией в средах графического программирования. Знакомит с математическим аппаратом описания нелинейных систем и процессов, а также с приемами и подходами для их моделирования на современных цифровых вычислителях.. Формирование у студентов устойчивых представлений о фундаментальном характере нелинейных процессов в природных и технических системах, положительных и отрицательных эффектах нелинейного поведения, областях практического применения детерминированного хаоса. Изучение научных и технических проблем, связанных с теорией и практикой нелинейной динамики, причин и механизмов возникновения хаотических режимов в динамических системах. Приобретение знаний в области математического аппарата нелинейных дифференциальных уравнений, умений идентификации динамических систем, дискретных интегрирующих операторов. Приобретение умений в области анализа и обработки результатов вычислительного и полунатурного эксперимента с использованием современной вычислительной техники и сред графического программирования. Освоение навыков анализа и обобщения бифуркационного поведения систем, способствующее пониманию природы детерминированного хаоса и феномена катастроф.. . Министерство науки и высшего образования Российской Федерации ФГАОУ ВО «Санкт-Петербургский государственный электротехнический университет «ЛЭТИ» имени В.И. Ульянова (Ленина)» ____________________________________________________________ ЭКЗАМЕНАЦИОННЫЙ БИЛЕТ № 1 Дисциплина Моделирование нелинейных динамических систем ФКТИ 1. Что такое аттрактор? Какие аттракторы называются странными? 2. Практическая задача. Постройте график поведения решения хаотической системы, описывающей аттрактор Рёсслера, во временной области. В качестве численного метода решения ОДУ используйте неявный метод Трапеций.   УТВЕРЖДАЮ Заведующий кафедрой                                                   Н.Г. Рыжов. Введение. Предпосылки возникновения и история нелинейной динамики. Работы Э. Лоренца, А. Пуанкаре, Д. Спротта. Хаотические процессы в природе на примере Солнечной системы, турбулентности, погодных явлений. Важность учета нелинейностей при проектировании технических объектов. Тема 1. Общие сведения о динамических системах. Способы описания динамических систем. Дифференциальное исчисление. Уравнения в частных производных, обыкновенные уравнения, дифференциально-алгебраические уравнения. Форма пространства состояний. Передаточные функции и типовые звенья. Операторный метод. Тема 2. Нелинейные системы и процессы. Виды и причины возникновения нелинейностей в природе и технике. Основные типы нелинейностей, встречающиеся в математических моделях динамических систем. Нелинейности, связанные с переходом от дифференциальных уравнений к конечно-разностным схемам. Шаг дискретизации как параметр нелинейности. Тема 3. Моделирование динамических систем в средах графического программирования. Среда LabVIEW как инструмент моделирования динамических систем. Понятие виртуального прибора. Лицевая панель и блок-диаграмма. Модуль Simulation Module. Переход от графической модели к исполняемому коду. Оптимизация производительности. Виртуальный прибор построения бифуркационных диаграмм. Тема 4. Дискретные нелинейные отображения. Логистическое отображение. Отображение Богданова. Отображение Хенона. Экспоненциальное отображение. Отображение Фейгенбаума. Тема 5. Численные методы интегрирования при моделировании нелинейных динамических систем. Численный метод интегрирования как способ перехода от непрерывных моделей динамических систем к конечно-разностным схемам. Явные методы численного интегрирования. Экстраполяционные методы. Полуявные методы интегрирования. Реверсивность и симметричность методов. Оценка производительности численных методов с помощью графика эффективности. Тема 6. Детерминированный хаос. Хаотические процессы и явления. Явление детерминированного хаоса. Плотность фазовых орбит. Топологическое смешивание. Чувствительность к начальным условиям. Фрактальность решений хаотических систем. Типы бифуркаций. Фазовое пространство. Тема 7. Алгоритмы и инструменты анализа хаотических систем. Одномерные бифуркационные диаграммы. Двумерные бифуркационные диаграммы. Каскады Фейгенбаума. H-диаграммы хаотических систем. Отображение фазовых портретов системы и ошибки моделирования. Вычисление ляпуновских экспонент. Обнаружение хаотического поведения в произвольных сигналах. Тема 8. Синхронизация хаотических систем. Общие принципы хаотической синхронизации. Унимодальная и бимодальная синхронизация. Поиск оптимального значения коэффициента синхронизации. Синхронизация дискретных моделей хаотических систем, полученных различными численными методами. Различные топологические схемы при синхронизации хаотических систем. Синхронизация аналоговых и дискретных моделей хаотических систем. Тема 9. Практические приложения детерминированного хаоса. Сенсорные элементы на основе хаотических систем. Осциллятор Дуффинга как высокочувствительный детектор гармонических сигналов. Металлодетекторы на основе принципа синхронизации. Хаос в шифровании и защищенных системах связи. Заключение. Подведение итогов курса. Перспективы развития и внедрения нелинейных решений в теорию и практику автоматического управления, цифровой обработки сигналов и систем связи.",
    "text_proj": "Нелинейная динамика и приложения теории хаоса. Создание математических основ решения прикладных задач с использованием адаптивных дискретных отображений Разработка программного обеспечения для автоматизации компьютерного эксперимента и визуализации хаотической динамики Основы скрытной передачи данных. Хаотические системы связи. Стеганография Разработка приложений-мессенжеров с шифрованием сообщений на основе теории хаоса Разработка средств шифрования изображений, текста, потокового видео с применением теории динамического хаоса. Сравнительное исследование криптостойкости хаотических и традиционных алгоритмов Разработка способов обнаружения факта передачи данных в хаотических системах связи Разработка новых способов модуляции и демодуляции хаотических сигналов Синтез математического описания новых дискретных хаотических систем Разработка методов обработки хаотических сигналов Публикация результатов в высокорейтинговых изданиях. Английский язык - Upper Intermediate или выше. Навыки программирования Базовая алгебра. Спецразделы математики, дифференциальные уравнения с дробной производной, теория информации, теория обработки сигналов. Знания в области современной нелинейной динамики State-of-the-art в области численных методов моделирования нелинейных систем Опыт разработки криптографических приложений Знания о перспективных алгоритмах шифрования и скрытной передачи данных Навыки написания и публикации статей в международной научной периодике. ",
    "need_match": true
  },
  {
    "id_rp": "1098",
    "id_proj": "56",
    "name_rp": "Обработка изображений и компьютерное зрение  (OpenCV)",
    "name_proj": "Практика в проектах по автономному транспорту от АО \"НИИАС\" РЖД",
    "text_rp": "Рассматриваются основные задачи, модели, методы и алгоритмы в области цифровой обработки изображений. Показывается процесс формирования изображения в оптической системе, описываются возникающие дефекты. Вводится понятие качества изображения, формулируются основные задачи увеличения качества изображения. Излагаются основные методы цифровой обработки изображений (фильтрация, интерполяция, сегментация, бинаризация и др.), элементы геометрической оптики (перспективные преобразования, эпиполярная геометрия, обобщенные координаты, фундаментальная и существенные матрицы), представление изображений виде графа, связанность, применение теории графов в обработке изображений. Рассматриваются основные методы кодирования изображений и видеоинформации, 3D-изображения.. Изучение основных задач, моделей, методов и алгоритмов в области цифровой обработки изображений. Формирование основных задач увеличения качества изображения. Знание основных задач, моделей, методов и алгоритмов в области цифровой обработки изображений. Умение решать основные задачи увеличения качества изображения. Навыки освоения основных методов цифровой обработки изображений (фильтрация, интерполяция, сегментация, бинаризация и др.), основных методов кодирования изображений и видеоинформации, 3D-изображения.. . Примеры вопросов для формирования билетов: 1.       Получение компилятора и настройка CMake 2.       Изображения с широким динамическим диапазоном. Введение. Место дисциплины в ООП. Виды контроля и аттестации. Тема 1. Работа с файлами изображений и видео. 1. Введение в OpenCV 2. Загрузка и установка OpenCV 3. Получение компилятора и настройка CMake 4. Компиляция и установка библиотеки 5. Структура каталогов OpenCV 6. Создание проекта, включающего OpenCV 7. Чтение и запись файлов изображений 8. Чтение и запись видеофайлов. Тема 2. Инструменты обработки изображений. 1. Основные типы данных 2. Доступ к пикселям 3. Хронометраж 4. Типичные операции над изображениями 5. Арифметические операции 6. Сохранение данных 7. Гистограммы. Тема 3. Коррекция и улучшение изображений. 1. Фильтрация изображений. Сглаживание. Повышение резкости. Работа с пирамидами изображений. Пирамиды Лапласа 2. Морфологические операции 3. LUT-фильтры 4. Геометрические преобразования. Аффинное преобразование 5. Ретуширование 6. Очистка от шумов. Тема 4. Работа с цветом. 1. Цветовые пространства 2. Сегментация на основе цветового пространства. HSV-сегментация. YCrCb-сегментация 3. Цветоперенос. Тема 5. Обработка видео. 1. Стабилизация видео 2. Сверхвысокое разрешение 3. Сшивка изображений. Тема 6. Вычислительная фотография. 1. Изображения с широким динамическим диапазоном 2. Создание HDR-изображений 3. Тональная компрессия 4. Совмещение 5. Экспозиционное объединение 6. Бесшовное клонирование 7. Обесцвечивание 8. Нефотореалистичный рендеринг. Заключение. Основные выводы по курсу.",
    "text_proj": "Практика в проектах по автономному транспорту от АО \"НИИАС\" РЖД. АО “НИИАС” РЖД приглашает студентов на практику в проекты по автономному транспорту: Проекты по автоматизации управления движением беспилотных поездов. Пожелания к кандидатам: уверенное владение Linux и Bash, Qt, Python, SQL базами данных. Проект по высокоточной системе позиционирования (отдел Математического обеспечения систем управления АО “НИИАС” РЖД). Пожелания к кандидатам: знания прикладной математики, алгоритмов, моделирования, Python. Технологии проекта: SLAM, фьюзинг данных от датчиково-навигационного оборудования различного типа. Проект: Автоматизированная калибровка камер. Пожелания: Знания в области Компьютерного зрения, Проективной геометрии. На базе АО «НИИАС» РЖД можно пройти производственную практику, а также написать диплом.   Сроки практики -- 1-3 месяца. Обязательно должен: знать: основны алгоритмов и структур данных уметь: работать с методами прикладной математики, с языком программирования Python владеть: основными технологиями разработки алгоритмов и программного обеспечения. Желательно должен: знать: основы компьютерного зрения, проективной геометрии.  уметь: применять основные методы компьютерного зрения и проективной геометрии.  владеть: Linux и Bash, Qt, Python, SQL базами данных. В результате получит: знания: основ позиционирования, калибровки камер, технологий беспилотного транспорта умения: применять основные методы позиционирования, калибровки камер, беспилотного транспорта опыт: работы в реальном проекте по беспилотному транспорту, разработки систем компьютерного зрения и проективной геометрии для решения реальных задач, опыт применения технологий совместной разработки . ",
    "need_match": true
  },
  {
    "id_rp": "2195",
    "id_proj": "38",
    "name_rp": "Основы гидроакустики",
    "name_proj": "Разработка системы звукоподводной связи на основе теории хаоса",
    "text_rp": "2 АННОТАЦИЯ ДИСЦИПЛИНЫ «ОСНОВЫ ГИДРОАКУСТИКИ» Дисциплина «Основы гидроакустики» предназначена для изучения студентами основных законов распространения звуковых колебаний в морской среде с учетом потерь на распространение и затухание различных волновых структур, условий формирования звуковых каналов в морях и океанах. В дисциплине изучается формирование отраженных гидроакустических (гидролокационных) сигналов от тел простой и сложной геометрической формы с учетом соотношения размеров тел и длин волн облучающих звуковых колебаний, формирование шумовых гидроакустических полей и реверберационных помех, обусловленных рассеянием зондирующих сигналов на поверхностях и неоднородностях морской среды . Получение студентами базовых знаний по гидроакустике с возможным их расширением в процессе работы по этой дисциплине. 1. Изучение условий формирования отраженных и шумовых гидроакустических сигналов и распространение их в материалах тел и морской среде. 2. Формирование у студентов умения и навыков по выполнению расчетов распространения гидроакустических сигналов и дальностей обнаружения шумовых и гидролокационных целей, а также умения пользоваться дополнительными литературными источниками по гидроакустике. Знания основных законов распространения звуковых колебаний в морской среде с учетом потерь на распространение и затухание различных волновых структур, условий формирования звуковых каналов в морях и океанах. Знания условий формирование отраженных гидроакустических (гидролокационных) сигналов от тел простой и сложной геометрической формы с учетом соотношения размеров тел и длин волн облучающих звуковых колебаний, формирование шумовых гидроакустических полей и реверберационных помех, обусловленных рассеянием зондирующих сигналов на поверхностях и неоднородностях морской среды. Умения определять потери при распространении звуковых колебаний в морской среде за счет расширения фронта волны и поглощения звука в морской среде в зависимости от частоты колебаний и глубины моря. Умения рассчитывать скорость звука в море в зависимости от температуры, солености и глубины моря. Умения строить уравнения активной и пассивной гидролокации. Умения выполнять расчеты энергетической дальности обнаружения целей в однородной среде. Иметь навыки по выполнению расчетов потерь распространения гидроакустических сигналов в морской среде и дальностей обнаружения гидроакустических целей, а также умения пользоваться дополнительными литературными источниками по гидроакустике.. . Министерство науки и высшего образования Российской Федерации ФГАОУ ВО «Санкт-Петербургский государственный электротехнический университет «ЛЭТИ» имени В.И. Ульянова (Ленина)» ____________________________________________________________ ЭКЗАМЕНАЦИОННЫЙ БИЛЕТ № 11 Дисциплина: Основы гидроакустики  1. Приповерхностный звуковой канал.  2. Отражение и рассеяние звуковых колебаний от поверхности моря. 3. Морская среда является однородной средой. УТВЕРЖДАЮ Заведующий кафедрой                                                   И.И. Иванов. Введение. История развития гидроакустики. Ученые, которые внесли большой вклад в развитие гидроакустики. Ведущие гидроакустические организации России, разрабатывающие гидроакустические комплексы. Вопросы, изу-чаемые в данной дисциплине. Литературные источники. Физические свойства морской среды. Физические свойства морской среды. Отличие морской среды от твердых тел и газообразной среды. Сжимаемость воды, упругие свойства, соленость, вязкость, теплоемкость морской воды. Электрические характеристики морской воды. Волновые процессы в стратифицированной среде. Волновые процессы в стратифицированной среде. Рассмотрение морей и океанов как стратифицированной среды. Формирование и распространение внутренних волн в морской стратифицированной среде. Модели акустического поля. Модели акустического поля. Описание моделей акустических полей в зависимости от условий их распространения (дальностей, глубины моря, длины волн и др.) с помощью функций Бесселя, Ханкеля. Приближенные методы представления гидроакустических полей. Приближенные методы представления гидроакустических полей. Усло-вия применения лучевой теории. Уравнение эйконала. Профиль скорости звука в глубоком море. Профиль скорости звука в глубоком море. Приповерхностный слой. Сезонный термоклин. Основной термоклин. Глубоководный изотермический слой. Приповерхностный звуковой канал. Приповерхностный звуковой канал. Условия распространения звуковой энергии в приповерхностном канале. Построение лучевой картины. Подводный звуковой канал. Подводный звуковой канал. Открытие подводного звукового канала. Условия распространения звуковой энергии в подводном звуковом канале. Искажение формы импульсных сигналов при дальнем распространении в подводном канале. Каустики и зоны конвергенции. Каустики и зоны конвергенции. Условия их формирования. Концентрация звуковой энергии. Внутренние звуковые каналы. Внутренние звуковые каналы. Условия их формирования. Распространение звуковой энергии по внутренним звуковым каналам. Распространение звука в арктических морях. Распространение звука в арктических морях. Влияние низких температур воды на скорость распространения звука вблизи поверхности моря. Лучевые картины распространения звука в арктических морях. Каналы в мелком море. Каналы в мелком море. Лучевая теория. Теория нормальных мод. Потери при распространении звука в мелком море. Основные свойства реверберационных помех. Основные свойства реверберационных помех. Сила обратного рассеяния. Модель реверберации. Зависимость реверберации от условий излучения и движения носителей антенны. Формирование гидроакустических сигналов, отраженных от тел простой геометрической формы. Формирование гидроакустических сигналов, отраженных от тел простой геометрической формы. Определение тел простой геометрической формы. Сила цели. Зависимость силы цели от соотношения размеров тела к длине волны. Условия распространения дифракционных звуковых волн внутри тел простой формы. Незеркальное отражение. Гидроакустические сигналы, отраженные от тел сложной геометрической формы. Гидроакустические сигналы, отраженные от тел сложной геометрической формы. Определение тел сложной геометрической формы. Зависимость формы отраженного сигнала от условий отражения и рассеяния звука. Расширение спектра эхо-сигнала за счет эффекта Доплера. Условия обработки сложных сигналов. Формирование шумовых гидроакустических полей. Формирование шумовых гидроакустических полей. Источники формирование полей. Гидродинамический шум. Монополи, диполи, квадруполи. Шумы механизмов. Распознаваемые параметры тел в гидроакустике. Распознаваемые параметры тел в гидроакустике. Габариты тел. Формы тел. Толщины оболочек. Материалы тел.",
    "text_proj": "Разработка системы звукоподводной связи на основе теории хаоса. Создание программного и аппаратного обеспечения системы звукоподводной связи для подводных роботов.  Разработка прототипа системы.  Полевые испытания системы на водоеме в различных условиях.  Исследования свойств сигналов различного типа при прохождении водной среды. . Навыки работы в команде, базовые навыки программирования, мотивация к труду. Инструмент выдадим, работать научим. Знания о системах передачи данных в водной среде. Базовые знания в области гидроакустики. Знания о способах модуляции и демодуляции акустических сигналов, включая широкополосные и биологически инспирированные сигналы. Навыки в области проектирования электронных систем. Опыт водной экспедиции для полевых испытаний прибора. Опыт постановки и обработки результатов эксперимента. ",
    "need_match": true
  },
  {
    "id_rp":  "5089", 
    "id_proj":  "31",
    "name_rp": "Глубокое обучение",
    "name_proj": "Определение состояния автомобиля используя видео",
    "text_rp": "Глубокое обучение является передовой областью современного машинного обучения и входит в общую проблематику искусственного интеллекта. В данном курсе основным инструментом для решения прикладных задач являются многослойные искусственные нейронные сети. Рассматриваются основные базовые архитектуры сетей глубокого обучения: многослойные полносвязные сети прямого распространения, сверточные сети, рекуррентные сети. Обсуждаются теоретические и практические аспекты их обучения, оптимизации модели, интерпретации и анализа результатов и процесса их обучения. Особое внимание уделяется практической имплементации глубоких архитектур, с использованием платформ Keras, TensorFlow. Рассматривается ряд современных задач и алгоритмов глубокого обучения: автокодировщики, генеративно-состязательные сети, сети для решения задач машинного перевода, генерации текстов, современные сверточные архитектуры для задач компьютерного зрения. Цель дисциплины: изучение основных методов глубокого обучения и их прикладных аспектов в современных задачах математического моделирования и обработки данных. Задачи дисциплины: формирование практических навыков разработки архитектуры нейронных сетей, их применения к практическим задачам, и программной имплементации. Приобретение знаний основных архитектур искусственных нейронных сетей, теоретических и практических аспектов их обучения. Формирование умений компетентного анализа результатов обучения глубокой архитектуры, навыков анализа и устранения основных проблем, мешающих их правильной работе и обучению. Освоение навыков работы с платформами TensorFlow, Keras, PyTorch для реализации и обучения искусственных нейронных сетей. Формирование навыков работы с академической и справочной литературой по тематике, культуры правильной постановки исследовательской задачи и работы с экспериментом.. В течение семестра выдаются индивидуальные домашние задания по следующим темам: Построение и обучение нейронной сети прямого распространения для решения задачи простой регрессии. Построение и обучение нейронной сети прямого распространения для решения задачи классификации. Построение и обучение сверточной нейронной сети для решения задачи классификации изображений. Построение и обучение рекуррентной нейронной сети для работы с последовательностью. Простые автокодировщики и генеративные задачи. Образец индивидуального домашнего задания: Индивидуальное домашнее задание: Построение и обучение сверточной нейронной сети для решения задачи классификации изображений. Дисциплина Глубокое обучение  ФКТИ Требования к выполнению ИДЗ: 1. Постройте и обучите простую CNN, решающую задачу классификации изображений датасета  \"Fashion MNIST\". 2. Добейтесь 95% точности. Проанализуруйте влияниение стандартных методов регуляризации( dropout, l2-регуляризация, инициализация по Хавье, зашумление выборки) на качество обучения сети. 3. Постройте матрицу ошибок и графики основных метрик. 4. Используя дополнительные библиотеки, проведите визуализацию активаций на нескольких сверточных слоях. 5. Дополнительно: проведите adversarial-атаку на построенную сеть и предъявите пример изображения, визуально неотличимого от правильно классифицируемого, но на котором сеть выдает ошибку классификации.. Пример контрольной (проверочной), выполняемой в виде индивидуального проекта: Индивидуальный проект Семантическая разметка изображения на базе предобученной сети VGG19 Дисциплина Глубокое обучение  ФКТИ Требуется построить и обучить архитектуру полносверточной сети, для решения задачи семантической сегментации изображений. В качестве базовой сверточной сети, выделяющей признаки, предлагается взять сеть VGG19. Необходимо на ее основании построить и обучить архитектуру полносверточной сети, для решения задачи семантической сегментации изображений. Министерство науки и высшего образования Российской Федерации ФГАОУ ВО «Санкт-Петербургский государственный электротехнический университет «ЛЭТИ» имени В.И. Ульянова (Ленина)» ____________________________________________________________ ЭКЗАМЕНАЦИОННЫЙ БИЛЕТ № 1 Дисциплина Глубокое обучение  ФКТИ 1. Параметры и гиперпараметры. Обучающая, тестовая и валидационная выборка. Недообучение и переобучение.   2. Слои с памятью. Сети долгой кратковременной памяти (LSTM). Архетиктура Gated Recurrent Unit (GRU). 3. Показ и защита индивидуального проекта: \"Семантическая разметка изображения на основании предобученной сети VGG19\". УТВЕРЖДАЮ Заведующий кафедрой                                                   С.Н. Поздняков. Введение. История возникновения и основные этапы развития искусственных нейронных сетей. Обзор прикладных задач, решаемых глубоким обучением. Напоминание основных элементов модели перцептрона и искусственных нейронных сетей прямого распространения. Вероятностный подход к машинному обучению. Обучение искусственных нейронных сетей. Проблема XOR. Граф вычислений и дифференцирование на графе вычислений. Полносвязные нейронные сети. Функции активации и их варианты. Метод обратного распространения ошибки. Стохастический градиентный спуск. Слои и векторизация. Регуляризация в глубоком обучении. Регуляризация в глубоком обучении. L1 и L2- регуляризация весов. Аугментация выборки. Ансамбли моделей. Dropout. Численная оптимизация в глубоком обучении. Численная оптимизация в глубоком обучении. Метод моментов, метод Нестерова. Адаптивные модификации стохастического градиентного спуска. Нормализация по мини-батчам. Инициализация весов. Сверточные нейронные сети. Биологическая модель зрения. Операция свертки и взятия максимума. Сверточный нейрон. Сверточные нейронные сети. Современные сверточные архитектуры. Автокодировщики. Примеры приложений в задачах компьютерного зрения. Рекуррентные нейронные сети. Задачи обработки последовательностей. Рекуррентные нейронные сети (RNN). Обучение рекуррентных сетей и обратное распространение ошибки сквозь время (BPTT). Слои с памятью. Сети долгой кратковременной памяти (LSTM). Архетиктура Gated Recurrent Unit (GRU). Генеративные сети. Вероятностная постановка генеративной задачи. Генеративные сети. Генеративно-состязательные искусственные нейронные сети (GAN). Автокодировщики. Вариационные автокодировщики (VAE). Машинный перевод и генерация текстов. Задачи автоматической обработки текстов. Векторные представления слов (Word Embeddings). Сверточные сети для текстов. Модели seq2seq. Рекуррентные сети с механизмом внимания (Attention). Заключение. Общие выводы по курсу. Рекомендации для подготовки к экзамену.",
    "text_proj": "Определение состояния автомобиля используя видео. Цель работы: определять направление движения автомобиля, его остановки и старты по видеозаписи с видеорегистратора. Приложение, используя машинное обучение (или другие алгоритмы и технологии), определяет и классифицирует состояние автомобиля по видеозаписи с видеорегистратора: стоит автомобиль или движется, направление движения автомобиля (движется по прямой, вперед или назад, повернул направо/налево). Сначала сеть обучают (на имеющихся размеченных данных) и тестируют на десктопе. На телефон устанавливается пред-обученная версия (например, \"легкая\" версия tensorflow) с готовой моделью, которая производит обработку видеосигнала. Что требуется: Провести анализ имеющихся решений (state of the art); Установить выбранный фреймворк; Изучить архитектуру и возможности выбранного фреймворка, библиотек; Реализовать алгоритм классификации (предобработка данных, модель нейронной сети); Разделить имеющийся датасет (видеозаписи с размеченными состояниями автомобиля, в котором установлен видеорегистратор) на два набора: для обучения модели и для тестирования модели; Выполнить эксперименты на размеченных данных для получения метрик и на неразмеченных данных для исследования генерализации модели; Написать отчет об исследовании, подготовить презентацию. Обязательно должен: знать: Python уметь: работать с Git, использовать Open Source фреймворки и библиотеки, искать необходимые наборы данных в открытом доступе владеть: навыками изучения программного кода, документаций. Желательно должен: знать: принципы работы машинного обучения, предобработки данных уметь: реализовывать модели нейронных сетей, собирать метрики, визуализировать данные владеть: фреймворками TensorFlow или PyTorch, библиотекой OpenCV. В результате получит: знания: технологии машинного обучения, нейронные сети умения: работать с фреймворками машинного обучения опыт: работа с нейронными сетями, проведение экспериментов, подготовка отчетов и презентаций. ",
    "need_match": true
  },
  {
    "id_rp":  "3524",
    "id_proj":  "57",
    "name_rp": "Разработка защищенных программных систем",
    "name_proj": "Стажировка в Digital Security по аудиту защищённости ПО  ",
    "text_rp": "Дисциплина посвящена изучению современных подходов к разработке программных систем, устойчивых к вредоносным воздействиям. Рассматриваются методы атак на программные системы, такие как повреждения программной памяти, внедрение кода на стороне клиента или сервера и др., а также методики и свойства современных языков программирования для предотвращения появления уязвимостей подобного рода.. Дисциплина нацелена на получение теоретических знаний о классификации основных уязвимостей в программном обеспечении, подходах к разработке защищенного программного обеспечения, и приобретение практических навыков применения полученных теоретических знаний для решения задач профессиональной деятельности. Задачами дисциплины является приобретение знаний, умений и навыков для написания безопасного кода с использованием специальных конструкций, методов и библиотек различных языков программирования. Получение знаний о методах поиска и эксплуатации основных уязвимостей в программном обеспечении. Формирование умения использовать типовые программные решения, ориентированные на выполнение научных, проектных и технологических задач, анализировать программный код и находить в нем уязвимости. Освоение навыков поиска уязвимостей в программном обеспечении методами «белого» и «черного» ящиков, владением инструментарием для поиска уязвимостей в программном обеспечении (отладчики, фреймворки для эксплуатации ошибок, другие утилиты).. Примеры вопросов к контрольному тесту  Вопрос 3 Чем опасна XSS? 1. Возможно украсть данные пользователя, введенные им при авторизации. 2. Может быть использована для «фишинга» пользователей. 3. Выполняет произвольный код в браузере пользователя. 4. Выполняет произвольный код на сервере. Вопрос 5 Что такое CSRF? 1. Тип атаки на посетителей веб-сайтов, которая заключается в том, что если жертва заходит на сайт, созданный злоумышленником, от её лица тайно отправляется запрос на другой сервер, осуществляющий некую вредоносную операцию. 2. Тип атаки на веб-системы, заключающийся во внедрении в выдаваемую веб-системой страницу вредоносного кода и взаимодействии этого кода с веб-сервером злоумышленника. 3. Уязвимость основанный на внедрении в запрос произвольного SQL-кода. 4. Уязвимость на стороне сервера, который позволяет перенаправлять запросы от одного сервера к другому. Вопрос 7 Есть следующая программа, которая выполняет поиск файла по его имени в текущей директории. Для этого пользователю необходимо передать имя файла в качестве аргумента к программе. Присутствует ли уязвимость в данном участке кода? import java.io.*; public class Example1 { public static void main(String[] args) throws IOException { if(args.length != 1) { System.out.println(\"No arguments\"); System.exit(1); } Runtime runtime = Runtime.getRuntime(); Process proc = runtime.exec(\"find. --name \\”\" + args[0]+”\\””); InputStream is = proc.getInputStream(); InputStreamReader isr = new InputStreamReader(is); BufferedReader br = new BufferedReader(isr); String line; while ((line = br.readLine()) != null) { System.out.println(line); } } } 1. Уязвимости нет 2. SQL инъекция 3. Инъекция команд 4. Инъекция команд и SQL инъекция. Министерство науки и высшего образования Российской Федерации ФГАОУ ВО «Санкт-Петербургский государственный электротехнический университет «ЛЭТИ» имени В.И. Ульянова (Ленина)» ____________________________________________________________ ЭКЗАМЕНАЦИОННЫЙ БИЛЕТ № 1 Дисциплина Разработка защищенных программных систем ФКТИ 1. Понятие об информационной безопасности и защищенных системах.  2. Организация памяти в современном программном обеспечении. Переполнение буфера на стеке.  УТВЕРЖДАЮ Заведующий кафедрой                                                   К. В. Кринкин. Введение. Информационная безопасность и защищенная система: основные понятия. Законы информационной безопасности в современном мире. Понятие уязвимости в информационной системе. Уязвимости в программных средствах, конфигурационные уязвимости, уязвимости в бизнес-процессах. Классификация уязвимостей в ПО. Тема 1. Аудит информационной безопасности и понятие тестирования на проникновение. Основные методы и подходы при проведении аудита информационной системы и приложений. Типовые примеры эксплуатации уязвимостей и слабостей системы. Подходы к поиску уязвимостей в ПО. Тема 2. Введение в безопасность Web-приложений. Основные уязвимости и понятия, которые встречаются при реализации web-приложений. Тема 3. Уязвимости в Web-приложениях. Внедрение кода на клиенте. Обход аутентификации и CSRF-атаки. Инструментарий для анализа Web-приложений. OWASP-Top 10. Тема 4. Внедрение кода на сервере. Инъекции команд. SQL-инъекции. XML-инъекции и другие типы инъекций. Тема 5. Уязвимости, связанные с манипуляциями программной памяти. Организация памяти в современном программном обеспечении. Переполнение буфера на стеке. Уязвимости в динамической памяти. Уязвимости форматной строки. Инструментарий для поиска уязвимостей. Тема 6. Ошибки, связанные с целочисленным переполнением. Арифметические операции в современных языках программирования. Ошибки и уязвимости, возникающие из-за целочисленного переполнения. Тема 7. Другие классы уязвимостей. Раскрытие информации. «Состояние гонки». Некорректная обработка исключений. Слабости в реализации криптографических модулей приложения. Тема 8. Уязвимости вне программных средств. Некорректная конфигурация. Уязвимости, связанные с политикой безопасности и бизнес-процессами в организации. Социальная инженерия. Тема 9. Изучение программных средств для анализа кода. Средства для статического и динамического анализа исходного кода приложений. Декомпиляция приложений. Заключение. Общие выводы по курсу. Информационная безопасность и современные угрозы. Рекомендации для подготовки к экзамену.",
    "text_proj": "Стажировка в Digital Security по аудиту защищённости ПО. Summ3r 0f h4ck 2022. Обучающая программа в Digital Security Digital Security приглашает на традиционную летнюю обучающую программу «Summ3r 0f h4ck». Она пройдет c 4 по 29 июля 2022 года в нашем офисе в Санкт-Петербурге. Прием заявок продлится до 1 мая (включительно) Подробности.   https://dsec.ru/about/summerofhack/                 . Обязательно должен: знать: основы информационной безопасности уметь:  программировать на C/C++ владеть: . Желательно должен: знать:  уязвимости ПО уметь:  программировать на JS, PHP, Python владеть: . В результате получит: знания:  способы поиска уязвимостей в приложениях на С\\С++  и в веб-приложениях  ( умения:  применение методов white-box и black-box, полезные трюках при reverse engineering (IDAPython, Ghidra, DBI), премудростях фаззинга приложений (KLEE, libfuzz, AFL), пентестинг веб-приложений опыт: аудита программного обеспечения. Начало стажировки. Сбор заявок на стажировку . Завершение стажировки. Защита отчетов по выполненным работам. ",
    "need_match": true
  },
  {
    "id_rp":  "3514",
    "id_proj":  "26",
    "name_rp": "Технологии автоматизации процесса разработки программного обеспечения",
    "name_proj": "Программно-аппаратное конфигурирование сети лаборатории",
    "text_rp": "В курсе рассматриваются вопросы организации процессов непрерывной интеграции, непрерывного развертывания и непрерывной поставки ПО в рамках парадигмы DevOps. Изучаются современные технологии автоматизации процесса разработки - Docker, Docker-Compose, Jenkins. Рассматриваются примеры использования технологий для проектов различной специфики. . Целью дисциплины является изучение фундаментальных концепций методологии DevOps в области задач непрерывной интеграции, непрерывного развертывания и непрерывной поставки и приобретение навыков использования полученных знаний в профессиональной деятельности. Задачами является приобретение знаний, умений и навыков применения фундаментальных концепций методологии DevOps в области задач непрерывной интеграции, непрерывного развертывания и непрерывной поставки. Получение знаний основных принципов автоматизации настройки среды, автоматизации тестирования и развертывания ПО. Формирование умения использовать современные технологии и инструменты автоматизации процесса разработки ПО. Приобретение навыков работы с современными программными средствами автоматизации тестирования, настройки среды и развертывания.. В ходе практических занятий и самостоятельной работы студенты должны выполнить проектную работу по разработке программного обеспечения (ПО) с использованием технологий автоматизации процесса разработки программного обеспечения.  Целью работы является разработка программного продукта по заданной теме. Разработка проводится итеративно в 3 этапа. Для контроля и оценивания  предусмотрены 3 контрольные точки в виде доклада с презентацией по этапам разработки.  Презентация должна быть представлена на 8 - 10 минут с демонстрацией min - 10, max - 15 слайдов, и содержать в себе:  1. Постановку задачи. 2. Методы решения, технологии. 3. Полученные результаты. В качестве результатов в презентации должны быть представлены артефакты методологии разработки, программный код и материалы, демонстрирующие работу ПО.  4. Примеры использования. 5. Список использованных источников (min - 3, max - не ограничено). Доклад по результатам работы с использованием презентации должен быть выполнен в устной форме.  Примерные сквозные темы разработок и докладов: Генератор условий задач по курсу \"Базы данных\". Генерация сессий прокторинга с использованием облачных хранилищ. Применение среды разработки WEB IDE в Duckietown Dashboard. Разработка Autolab Remote Control Service. OpenSource Веб-сервис для 3d-реконструкции.. . Министерство науки и высшего образования Российской Федерации ФГАОУ ВО «Санкт-Петербургский государственный электротехнический университет «ЛЭТИ» имени В.И. Ульянова (Ленина)» ____________________________________________________________ ЭКЗАМЕНАЦИОННЫЙ БИЛЕТ № 1 Дисциплина Технологии автоматизации процессов разработки программного обеспечения   ФКТИ 1. Проверки на этапе компиляции ПО. Интеграционное тестирование.  2. Модели жизненного цикла. УТВЕРЖДАЮ Заведующий кафедрой                                                   К.В. Кринкин. Введение. Идеология DevOps. Постановка задач непрерывной интеграции, непрерывного развертывания и непрерывной поставки. Тема 1. Организация автоматического тестирования ПО. Этапы и способы проверки исходного кода и ПО в целом. Статический анализ исходного кода. Юнит-тестирование. Проверки на этапе компиляции ПО. Интеграционное тестирование. Дополнительные проверки в процессе тестирования (время выполнения, косвенные метрики оценки работы ПО в тестах). Требования к организации отчетов о запуске автоматических тестов. Техническая реализация автоматизации тестирования (precommit hooks, периодическое тестирование и тестирование по мере поступления изменений). Тема 2. Инструменты автоматизации настройки среды. Задача автоматизации настройки среды. Технология Docker - контейнеры, образы, репозитории. Синтаксис Dockerfile. Флаги запуска контейнеров. Ограничение ресурсов контейнера. Отладка контейнеров и контроль работы. Механизм Healthcheck. Тема 3. Инструменты автоматизации развертывания и поставки ПО. Задача автоматизации развертывания и поставки ПО. Технология Docker Compose - конфигурации и сервисы. Синтаксис конфигурационных файлов. Адресация и взаимное обнаружение узлов. Передача внешних параметров в конфигурацию. Команды управления конфигурацией. Отладка работы конфигураций. Тема 4. Серверы непрерывной интеграции. Понятие и назначение сервера непрерывной интеграции. Последовательности шагов для автоматизации интеграции, развертывания и поставки ПО. Jenkins - основные сущности (job, build, view, user, repo, node). Основные элементы настройки Job: периодичность и параметры запуска, репозиторий и настройки клонирования, шаги сборки, послесборочные операции (рассылка писем, запуск других Job). Пример настройки Job. Анализ запусков Job (логи и их интерпретация, артефакты сборки). Особенности эксплуатации сервера непрерывной интеграции на примере Jenkins (хранение конфигураций, разделение доступа к серверу, объем почтовых уведомлений, требуемое дисковое пространство). Заключение. Общие выводы по курсу. Рекомендации для подготовки к экзамену.",
    "text_proj": "Программно-аппаратное конфигурирование сети лаборатории. Видео-презентация проекта https://youtu.be/uLePbMkxzZE Цель данного проекта состоит в построении и отладке программно-аппаратной системы наблюдения и отладки решений на полигоне автономного транспорта лаборатории мобильных интеллектуальных систем.  Задачи: Настройка системы управления конфигурациями Ansible на парке машин лаборатории интеллектуальных мобильных систем Разработка решения захвата видео камеры наблюдения полигона в трансляцию конференций Zoom Тестирование онлайн-курса по GDB и Valgrind Формат работы: смешанный: заочный + очный Очно в аудитории 3501 Прототипирование при отсутствии необходимости работы с оборудованием возможно выполнять дистанционно. Ориентировочно 2-3 курс Навык работы с ОС Linux (Ubuntu) Знание языка Си, основ отладки программ Умение самостоятельно находить информацию, учиться новому Умение следовать инструкции Аккуратность  Умение пользоваться отверткой Знание английского языка на уровне чтения технической документации Понимание базовых принципов организации ЛВС. Плюсом будет любой опыт работы с библиотеками автоматизации настройки и любой опыт наладки систем видеофиксации. . В результате получит: знания о устройстве систем машинного зрения и систем автоматизированной постановки эксперимента для задач автономного транспорта, умения настройки и отладки реальных роботехнических систем, опыт участия в передовом исследовательском проекте. . Тестовое задание проекта. Составить docker-compose файл, позволяющий запустить 2 докер-контейнера, объединенные в одну локальную сеть (изолированную от сети хост-машины)   Программа-клиент, запущенная в одном контейнере должна передавать строку “docker test #K” по TCP программе-серверу, запущенной во втором контейнере. Программа-сервер должна печатать полученные данные в лог, доступный командой docker log.   #K - порядковый номер сообщения (0, 1, 2, …) Строку передавать раз в секунду   Способ реализации программ клиента и сервера может быть любым (стандартные утилиты / самостоятельно написанные программы / …)   В качестве решения прислать ссылку на репозиторий с docker-compose файлом и инструкцией по запуску. ",
    "need_match": true
  },
  {
    "id_rp":  "1447",
    "id_proj":  "42",
    "name_rp": "Моделирование нелинейных динамических систем",
    "name_proj": "Перспективные сенсоры на основе теории динамического хаоса",
    "text_rp": "Дисциплина направлена на ознакомление студентов с особенностями нелинейного поведения динамических систем, раскрытие закономерностей нелинейных процессов, возникающих в процессе проектирования и эксплуатации комплексных технических систем. Предусматривает овладение методами научных исследований в области теоретической и экспериментальной нелинейной динамики, современным инструментарием анализа поведения динамических систем и его имплементацией в средах графического программирования. Знакомит с математическим аппаратом описания нелинейных систем и процессов, а также с приемами и подходами для их моделирования на современных цифровых вычислителях.. Формирование у студентов устойчивых представлений о фундаментальном характере нелинейных процессов в природных и технических системах, положительных и отрицательных эффектах нелинейного поведения, областях практического применения детерминированного хаоса. Изучение научных и технических проблем, связанных с теорией и практикой нелинейной динамики, причин и механизмов возникновения хаотических режимов в динамических системах. Приобретение знаний в области математического аппарата нелинейных дифференциальных уравнений, умений идентификации динамических систем, дискретных интегрирующих операторов. Приобретение умений в области анализа и обработки результатов вычислительного и полунатурного эксперимента с использованием современной вычислительной техники и сред графического программирования. Освоение навыков анализа и обобщения бифуркационного поведения систем, способствующее пониманию природы детерминированного хаоса и феномена катастроф.. . Министерство науки и высшего образования Российской Федерации ФГАОУ ВО «Санкт-Петербургский государственный электротехнический университет «ЛЭТИ» имени В.И. Ульянова (Ленина)» ____________________________________________________________ ЭКЗАМЕНАЦИОННЫЙ БИЛЕТ № 1 Дисциплина Моделирование нелинейных динамических систем ФКТИ 1. Что такое аттрактор? Какие аттракторы называются странными? 2. Практическая задача. Постройте график поведения решения хаотической системы, описывающей аттрактор Рёсслера, во временной области. В качестве численного метода решения ОДУ используйте неявный метод Трапеций.   УТВЕРЖДАЮ Заведующий кафедрой                                                   Н.Г. Рыжов. Введение. Предпосылки возникновения и история нелинейной динамики. Работы Э. Лоренца, А. Пуанкаре, Д. Спротта. Хаотические процессы в природе на примере Солнечной системы, турбулентности, погодных явлений. Важность учета нелинейностей при проектировании технических объектов. Тема 1. Общие сведения о динамических системах. Способы описания динамических систем. Дифференциальное исчисление. Уравнения в частных производных, обыкновенные уравнения, дифференциально-алгебраические уравнения. Форма пространства состояний. Передаточные функции и типовые звенья. Операторный метод. Тема 2. Нелинейные системы и процессы. Виды и причины возникновения нелинейностей в природе и технике. Основные типы нелинейностей, встречающиеся в математических моделях динамических систем. Нелинейности, связанные с переходом от дифференциальных уравнений к конечно-разностным схемам. Шаг дискретизации как параметр нелинейности. Тема 3. Моделирование динамических систем в средах графического программирования. Среда LabVIEW как инструмент моделирования динамических систем. Понятие виртуального прибора. Лицевая панель и блок-диаграмма. Модуль Simulation Module. Переход от графической модели к исполняемому коду. Оптимизация производительности. Виртуальный прибор построения бифуркационных диаграмм. Тема 4. Дискретные нелинейные отображения. Логистическое отображение. Отображение Богданова. Отображение Хенона. Экспоненциальное отображение. Отображение Фейгенбаума. Тема 5. Численные методы интегрирования при моделировании нелинейных динамических систем. Численный метод интегрирования как способ перехода от непрерывных моделей динамических систем к конечно-разностным схемам. Явные методы численного интегрирования. Экстраполяционные методы. Полуявные методы интегрирования. Реверсивность и симметричность методов. Оценка производительности численных методов с помощью графика эффективности. Тема 6. Детерминированный хаос. Хаотические процессы и явления. Явление детерминированного хаоса. Плотность фазовых орбит. Топологическое смешивание. Чувствительность к начальным условиям. Фрактальность решений хаотических систем. Типы бифуркаций. Фазовое пространство. Тема 7. Алгоритмы и инструменты анализа хаотических систем. Одномерные бифуркационные диаграммы. Двумерные бифуркационные диаграммы. Каскады Фейгенбаума. H-диаграммы хаотических систем. Отображение фазовых портретов системы и ошибки моделирования. Вычисление ляпуновских экспонент. Обнаружение хаотического поведения в произвольных сигналах. Тема 8. Синхронизация хаотических систем. Общие принципы хаотической синхронизации. Унимодальная и бимодальная синхронизация. Поиск оптимального значения коэффициента синхронизации. Синхронизация дискретных моделей хаотических систем, полученных различными численными методами. Различные топологические схемы при синхронизации хаотических систем. Синхронизация аналоговых и дискретных моделей хаотических систем. Тема 9. Практические приложения детерминированного хаоса. Сенсорные элементы на основе хаотических систем. Осциллятор Дуффинга как высокочувствительный детектор гармонических сигналов. Металлодетекторы на основе принципа синхронизации. Хаос в шифровании и защищенных системах связи. Заключение. Подведение итогов курса. Перспективы развития и внедрения нелинейных решений в теорию и практику автоматического управления, цифровой обработки сигналов и систем связи.",
    "text_proj": "Перспективные сенсоры на основе теории динамического хаоса. Разработка новых типов датчиков (магнетометров, салинометров, индуктивных датчиков и др.) на основе устройств с хаотическим поведением. Исследование свойств хаотических сигналов при прохождении различных сред Разработка стендов для испытания датчиков различных типов, включая создание электронных схем, корпусирование с применением аддитивных технологий Проведение сравнительных испытаний датчиков традиционной конструкции и предлагаемых решений на основе теории хаоса. Базовые навыки программирования Базовые математические знания - теория дифференциального и интегрального исчисления, алгебра. Знания в области аналоговой и цифровой схемотехники, электрофизики. Новые знания о перспективных конструкциях датчиков на новых физических принципах Практические навыки проектирования электронных устройств Опыт разработки экспериментальных стендов, снятия и обработки результатов полунатурного эксперимента. ",
    "need_match": true
  },
  {
    "id_rp":  "1916",
    "id_proj":  "41",
    "name_rp": "Разработка программного обеспечения для  робототехнических систем",
    "name_proj": "Разработка подводного телеуправляемого робота на гусеничном шасси",
    "text_rp": " Цели изучения курса состоят в формировании знаний, умений и навыков применения программных средств, необходимых разработчикам для реализации робототехнический комплексов, формировании у студентов представлений о работе и принципах разработки распределенных систем и их организации; освоении современных инструментов организации вычислений и коммуникации между вычислительными единицами с целью полноценной работы робототехнического комплекса и овладении студентами практических навыков применения программных средств для разработки комплексных робототехнических систем.. Целью дисциплины является получение теоретических знаний в области специального программного обеспечения для робототехнических систем и формирование умений разрабатывать комплексные программные системы на основе фреймворка Robot Operating System и навыков их применения. Задачами дисциплины является: изучение теории разработки программного обеспечения для робототехнических систем; получение навыков разработки программного обеспечения для робототехнических систем; формирование умений организации межпрограммного взаимодействия с применение инструментов фреймворка Robot Operating System. Знания принципов разработки прикладного ПО на базе Robot Operating System в ОС Linux. Умение структурировать собственные разработки по общепринятым концепциям организации кода с размещением в системе контроля версии Git. Владение навыками ознакомления, изучения и применения с возможность доработки и настройки существующих разработок для получения желаемого функционала и результатов выполнения.. Примеры вопросов для коллоквиума 1 Какие базовые типы поддерживаются в сообщениях? Каким образом можно это узнать? Какие базовые этапы необходимо выполнить для создания собственного пакета? Какие шаги необходимы для создания узла на языке Python? Какие шаги необходимы для создания узла на языке С++? Опишите базовые принципы размещения кода в репозитории? В случае одного пакета, стека пакетов? Какие типы связей узлов можно организовать с помощью топиков? Какая CLI утилита позволяет работать с топиками? Какие она имеет команды и для чего они нужны? Какая CLI утилита позволяет работать с сервисами? Какие она имеет команды и для чего они нужны? Опишите основные различия между типоками и сервисами и приведите примеры, когда нужно применять одни, а когда другие? Как создать свое сообщение для топика? Примеры вопросов для коллоквиума 2 Какие типы параметров бывают? В чем их отличие? Возможно ли устанавливать параметры из файла? Если да, какой командой это выполняется? Для чего используется тэг arg в launch-файлах? Напишите пример применения. В чем отличия разработки на основе языка С++ и языка Python для ROS? Нарисуйте и опишите схему, как происходит настройка соединения и коммуникация между узлами по системе топиков? Какова цель мастер-узла в этой схеме? Для чего используется мастер-узел? Возможна ли работа системы без него? Какое назначение имеет система TF? Приведите примеры использования. Какой структурой предоставляются системы координат в TF? Может ли эта структура иметь свойство цикличности? Почему? На каких основных компонентах строится описание части робота в Gazebo? Какие бывают типы соединений частей роботов? Опишите их с иллюстрацией работы. Какая команда выводит полный путь к текущей директории? а) mv б) cd в) rm г) pwd д) ls Какой символ используется для чтения значения переменной? а) $ б) % в) : г) \\textbraceleft\\textbraceright д) ^ Как называется утилита сборки ROS пакетов? а) rosbuild б) catkin make в) catkin build г) ros build Какой утилитой можно перейти в папку пакета? а) rosls б) roscd в) roscat г) rosed д) roslist На основе какого формата создаются launchфайлы? а) JSON б) XML в) HTML г) Launch Какой из параметров тэга <node> launchфайла является обязательным? а) output б) log в) pkg г) ns. Какая команда выводит полный путь к текущей директории? а) mv б) cd в) rm г) pwd д) ls Какой символ используется для чтения значения переменной? а) $ б) % в) : г) {} д) ^ Как называется утилита сборки ROS пакетов? а) rosbuild б) catkin_make в) catkin_build г) ros_build Какой утилитой можно перейти в папку пакета? а) rosls б) roscd в) roscat г) rosed д) roslist На основе какого формата создаются launch-файлы? а) JSON б) XML в) HTML г) Launch Какой из параметров тэга <node> launch-файла является обязательным? а) output б) log в) pkg г) ns. Министерство науки и высшего образования Российской Федерации ФГАОУ ВО «Санкт-Петербургский государственный электротехнический университет «ЛЭТИ» имени В.И. Ульянова (Ленина)» ____________________________________________________________ ЭКЗАМЕНАЦИОННЫЙ БИЛЕТ № 1 Дисциплина Физические основы электронагрева   ФЭА 1. Закон Ома в дифференциальной форме. Закон Джоуля – Ленца в локальной форме.  2. Снижения уровня термических деформаций и напряжений. 3. Задача. УТВЕРЖДАЮ Заведующий кафедрой                                                   И.И. Иванов. . Основы работы с ОС Linux. Основные команды и принципы работы в командной строке, настройка среды разработки. Основы Robot Operating System. Понятие и назначение ROS. Примеры проектов с применением ROS. Поддержка языков. Базовые понятия в ROS - пакеты, рабочее пространство, сборка. Работа с репозиторием. Организация связи в децентрализованной системе. Знакомство с рабочей экосистемой ROS на момент запуска. Подключение узлов в экосистему. Основные утилиты для получения информации о рабочей экосистеме. Разница узла и процесса. Коммуникации в ROS. Организация асинхронного взаимодействия между узлами. Освоение формата описания запуска множества узлов.launch. Примеры использования и полезные практики применения. Создание типов сообщений для собственных разработок и со специализированным описанием.Освоение навыков с поддержкой функционала сервисов - синхронного метода взаимодействия между узлами. Рассмотрение положительных и отрицательных сторон подхода. Сравнение с топиками. Обсуждение применимости каждого из типов. Организация пространства параметров в ROS. Изучение подходов работы с параметрами в рабочей экосистеме ROS. Изучение утилит для работы с сервером параметров. Обсуждение ситуаций применимости различных видов параметров. Освоение методов работы с параметрами. Рассмотрение примеров применения параметров. Система TF (Transforms) в ROS. Системы координат и их трансформации. Освоение методов работы с TF в ROS. Практика применения утилит для получения информации о TF. Обсуждение ситуаций для применения на практике. Ограничения системы TF. Заключение. Назначение ROS2, отличия от ROS. Другие аппаратные комплексы.",
    "text_proj": "Разработка подводного телеуправляемого робота на гусеничном шасси. Разработка программного и аппаратного обеспечения подводной роботизированной системы на основе гусеничной платформы с манипулятором. Создание телеуправляемого водонепроницаемого шасси. Разработка сенсорной системы робота. Разработка подсистемы управления шасси и манипулятором. Полевые испытания робота на водоеме. Основы Arduino IDE, коммуникабельность, владение английским языком на уровне Basic, общая техническая грамотность. Знание цифровой и аналоговой схемотехники, выносливость, целеустремленность. Знания в области дизайна подводных роботизированных систем. Практические навыки проектирования комплексных объектов робототехники. Опыт разработки программно-аппаратных комплексов общего назначения Незабываемый опыт полевой экспедиции на водоемы нашей необъятной Родины с погружениями за застрявшим роботом. ",
    "need_match": true
  },
  {
		"id_rp": "2645",
		"id_proj": "11",
		"name_rp": "Компоненты электронной техники",
		"name_proj": "Анализ динамики COVID-19 в России",
		"text_rp": "Рассмотрены основные свойства и характеристики пассивных элементов электронной техники. Дается описание линейных и нелинейных резисторов, конденсаторов различных типов и катушек индуктивности. Описываются их основные характеристики, свойства, особенности изготовления и эксплуатации Рассматриваются трансформаторы, выпрямители и фильтры на основе пассивных компонентов. Даны материалы по условиям их применения и режимам работы. . . Знание принципов действия, конструкции и технологии изготовления компонентов электронной техники. Формирование умения освоения основных эксплуатационных характеристик электронных компонентов, умение их выбора для разных видов электронной аппаратуры. Формирование навыков экспериментальных исследований свойств компонентов электронной техники.. Введение. Современное состояние электронной техники. Соотношение между дискретными и интегральными компонентами. Факторы, ограничивающие плотность упаковки элементов в РЭА. Тема 1. Основные характеристики резисторов. Сопротивление и температурный коэффициент сопротивления резисторов. Классы точности. Методы подгонки величины сопротивления. Номинальная мощность рассеяния и график нагрузки резистора. Электрическая прочность резисторов. Нелинейные свойства и шумы резисторов. Специфические параметры переменных резисторов. Виды функциональных характеристик регулирования сопротивления, методы их реализации. Основные характеристики нелинейных полупроводниковых резисторов. Тема 2. Основные типы резисторов. Классификация резисторов. Сравнительные характеристики постоянных резисторов различных типов, их конструкция. Резисторы общего и специального назначения. Основные типы и конструкции переменных резисторов. Нелинейные полупроводниковые резисторы: термисторы, позисторы, варисторы, фоторезисторы, магниторезисторы. Тема 3. Основные характеристики электрических конденсаторов. Емкость конденсаторов различных конструкций. Температурный коэффициент емкости. Группы по ТКЕ. Сопротивление изоляции и постоянная времени. Явление абсорбции электрических зарядов в конденсаторах. Потери энергии в конденсаторах. Расчет тангенса угла потерь конденсатора с учетом потерь в рабочем и вспомогательном диэлектриках и в металлических частях конденсатора. Индуктивность и полное сопротивление конденсатора. Методы уменьшения индуктивности конденсаторов. Кратковременная и длительная электрическая прочность конденсаторов. Причины старения конденсаторов. Явление поверхностного пробоя. Понятие о надежности и сроке службы конденсаторов. Удельные характеристики конденсаторов, их связь с рабочим напряжением, частотой и стоимостью конденсатора. Тема 4. Основные типы конденсаторов. Классификация конденсаторов. Конструктивно-технологические особенности конденсаторов на основе неорганических диэлектриков. Преимущества керамических конденсаторов. Связь структуры керамики с электрическими характеристиками конденсаторов. Конденсаторы на основе полупроводниковой керамики. Высоковольтные керамические конденсаторы. Конденсаторы на основе синтетических пленок, их преимущества и недостатки. Комбинированные пленочные конденсаторы. Основные разновидности оксидных конденсаторов, их конструктивно-технологические и эксплуатационные особенности. Сравнение оксидных конденсаторов на различных вентильных металлах. Ионисторы, их свойства и применение. Навесные конденсаторы для ГИС. Конденсаторы переменной емкости. Переменные и подстроечные конденсаторы с газообразным и с твердым диэлектриком. Тема 5. Индуктивные элементы. Основные конструкции и методика расчета катушек индуктивности. Индуктивность, собственная емкость и полное сопротивление катушек индуктивности. Добротность катушек индуктивности, методы ее увеличения. Магнитные сердечники катушек индуктивности. Тема 6. Соединительные и коммутационные элементы. Физические процессы в прижимном электрическом контакте. Электрические и механические параметры электрических контактов. Типы соединительных и коммутационных элементов. Тема 7. Компоненты преобразовательных устройств. Структура блока питания РЭА. Роль трансформатора, его принцип действия. Выбор его конструкции в зависимости от нагрузки. Однополупериодная схема выпрямления: принцип действия, достоинства и недостатки. Расчет параметров и выбор вентеля. Двухполупериодный выпрямитель на трансформаторе со средней точкой. Двухполупериодная мостовая схема выпрямления. Роль фильтров. Емкостные и индуктивные фильтры. LC многозвенные фильтры. Заключение. Влияние элементной базы на конструкцию, технологию изготовления и потребительские свойства современной электронной аппаратуры.",
		"text_proj" : "Web-приложение для отображения динамики различных характеристик распространения COVID-19 в России. ·       Приложение должно отображать различные характеристики, как исходные, так и производные, вычисленные приложением. Так же иногда полезно иметь возможность наложить несколько характеристик друг на друга. ·       Примеры исходных характеристик: динамика новых случаев, динамика выздоровлений. Примеры производных характеристик: разница между новыми случаями и выздоровлениями (больше людей заболевает или больше выздоравливает - растёт или уменьшается нагрузка на систему здравоохранения). Команда Frontend разработчик Backend разработчик iOS/Android разработчик. Как таковых обязательных требований нет. Смотрите желательные. . Технологический стек Frontend Javascript / typescript; фреймворки на выбор: React + Redux, Vue, Angular. Backend Java / Kotlin; Spring framework. C#; WebAPI, EntityFramework или Dapper. Mobile (опционально) iOS/Android приложение для отображения различных графиков. В результате получит: знания: разовьете свои знания по указанным технологиям опыт: работа в команде по методологии SCRUM, распределенной разработке, общее понимание коммерческой разработки Потенциальное трудоустройство .",
		"need_match":  false
	},
	{
		"id_rp": "2649",
		"id_proj": "16",
		"name_rp": "Философия",
		"name_proj": "Разработка системы вскрытия объектов на кадрах видеопотока",
		"text_rp": "Философия – гуманитарная дисциплина, изучающая общие и фундаментальные проблемы, такие как проблемы, связанные с реальностью, экзистенцией, знанием, ценностями, сознанием, мышлением и языком. Философия отличается от других способов решения таких проблем своим критическим и системным подходом и опорой на рациональные аргументы. Изучение философии формирует целостное представление о мире, его структурной организации и свойствах, определяет мировоззрение человека и общества, составляет методологическую основу их деятельности. Среди центральных проблем формирующейся в настоящее время новой философской парадигмы можно назвать: разработка теоретической модели сложного и противоречивого современного мира, обоснование роли человека и субъективного фактора в его развитии, становление информационного общества как мирового процесса, коэволюция его с окружающей средой и др.. Изучение основных направлений в философии, приобретение знаний по основным разделам курса философии, в том числе особенностей функционирования знания в современном обществе, соотношения истины и заблуждения, рационального и иррационального в человеческой деятельности, значение духовных ценностей и их места в мировой культуре. Формирование теоретического мировоззрения, широкого культурного кругозора студентов в процессе изучения законов возникновения, функционирования и развития природы, общества и мышления, умения работать с общенаучным и специальным категориальным аппаратом для понимания междисциплинарного подхода к проблемам и явлениям природной и социальной реальности. По итогам освоения дисциплины обучающийся должен демонстрировать знание основных философских понятий и категорий, закономерностей развития природы, общества и мышления, особенностей этапов становления философской мысли. По итогам освоения дисциплины обучающийся должен демонстрировать умение использовать основы философских знаний для формирования мировоззренческой позиции. Освоение методов критического восприятия, анализа и оценки исторической, философской и экономической информации, навыков методологического анализа и оценки научных и специальных проблем, навыка аргументировано систематизировать и обобщать информацию, правильно употреблять философскую терминологию в различных контекстах. . Здание №1 ТЕСТ. 1. Соотнесите понятия и философские школы: 1) атараксия  А. эпикуреизм 2) апатия  Б. кинизм 3) автаркия В. стоицизм 2. Учение, согласно которому Бог - безличное начало, слитое со всем мирозданием, называется А. политеизмом  Б. неотомизмом В. пантеизмом  Г. теологизмом Д. деизмом   3. Высказывание «Все течет и ничто не становится» принадлежит А. Гесиоду Б. Гераклиту В. Гомеру Г. Гераклу Д. Герострату 4. Кто из представителей патристики считал, что знание превыше веры? А. Климент Б. Тертуллиан В. Ориген  Г. Августин Д. все Е. никто 5. Какой или какие из приведенных примеров относится к идолу рынка (или площади)? А. Глаз человека способен различать 3 основных цвета (синий, зеленый и красный, все остальные цвета – переходные между тремя основными), в то время как рак-богомол различает 12 основных цветов; Б. Мы используем слово «нелицеприятный» в значении «неприятный» вместо «беспристрастный»; В. Человек часто искажает правду ради вознаграждения; Г. Человек изменяет свою точку в соответствии с мнением большинства. 6. Индукция - это А. философское направление   Б. учение Фрэнсиса Бэкона В. вид умозаключения  Г. разновидность силлогизма Д. логический закон 7. Положение Декарта «Я мыслю, следовательно, я существую» надо понимать в том смысле, что А. существует абсолютно все, что можно помыслить Б. мое мышление порождает мое существование В. я знаю о собственном существовании благодаря мышлению Г. если бы я не мыслил, я бы не существовал Д. если я существую, значит я мыслю 8. Приведите примеры мифологического, религиозного, философского и научного объяснения одного и того же явления природы или события. 9. Высказывание «Лишь согласно общепризнанному мнению существует цвет, сладкое, горькое, в действительности же существуют только атомы и пустота» относится к: А. объективному идеализму Б. субъективному идеализму, В. материализму. 10. Высказывание «Мир - комплекс представлений, возникающих в сознании» относится к: А. объективному идеализму Б. субъективному идеализму, В. материализму.  . . Введение. Понятие и структура мировоззрения. Особенности мифа и религии как исторических типов мировоззрения. Предмет философии. Особенности, выражающие специфику философского знания, его отличие от научного, религиозного и обыденного взгляда на мир. Мировоззренческая, методологическая и др. функции философии. Философская рефлексия как метод философского познания. Тема 1. Этапы развития философии и основные типы философской мысли. Тенденции возникновение и развития западноевропейской философии. Основные этапы развития философии. Особенности философии в Древнем мире: космоцентризм, проблема «первоначал», меры. Теоцентризм средних веков. Представление о патристике и схоластике, полемика номиналистов и реалистов. Особенности свободомыслия в средние века. Антропоцентризм, пантеизм и гуманизм в философии Возрождения. Становление нового метода и новых представлений о мире. Эмпиризм, рационализм, сенсуализм в философии Нового времени. Материализм и деизм мыслителей Нового времени и эпохи Просвещения. Классическая и неклассическая философия. Русская философия, этапы становления. Особенности русской философии. Развитие русской философской мысли периода XIX- начала XX веков, специфические черты национального философствования. Основные направления и школы философии XX и XXI вв. Тема 2. Философская онтология. Проблемы реальности в классической и современной философии. Онтология как учение о бытии. Понятие реальности, ее сущностные признаки. Материя как объективная реальность. Движение, самодвижение и основные формы их существования. Пространственно-временная структура реальности. Виртуальная реальность. Социальная реальность и ее специфика. Тема 3. Идея развития в философии. Понятия движения и развития, их соотношение. Диалектика как учение о развитии и связи. Понятие о категориях, основных законах и принципах диалектики. Основные законы диалектики. Проблема направленности изменений. Прогресс, регресс, реорганизация. Детерминизм и индетерминизм. Причина и следствие, их диалектика. Необходимость и случайность: их место и роль в процессе развития. Тема 4. Философские проблемы сознания и языка. Сознание как субъективная реальность. Идеальность сознания. Структура сознания. Самосознание и личность. Сознательное и бессознательное. Сознание и язык. Развитие представлений о сознании в истории философской и научной мысли. Современные научные представления о сознании и его эволюции. Сознание как особая форма отражения действительности. Отражение и информация. Тема 5. Познание мира. Формы и методы научного познания. Проблема познаваемости мира в основных направлениях философии. Субъект и объект познания. Формы чувственного и рационального познания, их взаимодействие. Рациональное и иррациональное в познавательной деятельности. Специфика эмпирического познания. Сущность научных теорий и их роль в научном познании. Проблема истины и её критериев. Виды истины. Классическое и неклассическое понимание истины. Проблема критерия истины. Практика как критерий истины. Истина и заблуждение. Релятивизм и догматизм. Тема 6. Общество как предмет философского анализа. Социальная философия и философия истории. Понятие общества и его структура. Формирование и развитие представлений об обществе и его структуре. Подсистемы общества: экономическая, духовная, социальная, политическая. Гражданское общество: формирование, содержание и значение идеи. Гражданское общество и государство. Основные концепции происхождения и сущности государства. Человек в системе социальных связей. Виды социальных общностей. Основные концепции дифференциации общества. Общество потребления. Информационное общество. Основные концепции исторического прогресса. Понятие общественно-экономической формации. Формационная и цивилизационная концепции общественного развития. Тема 7. Проблема человека в философии. Человек и природа. Природное (биологическое) и социальное в человеке. Антропологический поворот в современной философии. Проблема человека в современной философии. Человек и исторический процесс: личность и массы, свобода и необходимость. Роль личности в истории. Понятие свободы. Проблема человека в информационном обществе. Культура как мера человеческого в человеке. Заключение. Человек перед лицом глобальных проблем. Процессы глобализации, их сущность и потенциальные последствия. Концепция «устойчивого развития». Терроризм как глобальная проблема современности. ",
		"text_proj" : "Разработка системы вскрытия объектов на кадрах видеопотока. Объект исследования: информация с камеры на борту дрона Предмет исследования: выделение особых областей на кадре Цель: Провести разведку местности: сделать снимки поверхности (геопривязанные), вскрыть объекты, не являющиеся ландшафтом Проблема: Робастное определение, какой объект является частью ландшафта, а какой нет, требует формализации и подбора большого количества эвристик. Формулировка задачи: необходимо разработать алгоритм управления дроном, согласно которому дрон будет в процессе движения по некоторому полётному заданию, и делая геопривязанные снимки местности, находить объекты, не относящиеся к местности, отправляя информацию о них (положение и границы на каждом кадре, на котором объект найден) на внешний сервер. Обязательно должен: знать: язык программирования (С++ или Java или Python); уметь: работать в команде. Желательно должен: знать: математические сновы детекции объектов (понятие свёртки, машинного обучения.) владеть: английским языком достаточным для чтения статей. В результате получит: знания: математические основы компьютерного зрения, алгоритмы машинного обучения; умения: проведение научного исследования, прикладное создание программного фреймворка; опыт: работы на предприятии в условиях проекта, близкого к реальному. Сформировать список алгоритмов вскрытия. 1.Сформировать список алгоритмов вскрытия. Создать framework, позволяющий решать задачу вскрытия несколькими методами. 1.Создать framework, позволяющий решать задачу вскрытия несколькими методами. Сформировать критерии сравнения алгоритмов. 1.Сформировать критерии сравнения алгоритмов. Сравнить запрограммированные алгоритмы по выбранным критериям. 1.Сравнить запрограммированные алгоритмы по выбранным критериям.",
		"need_match" :  false
	},
	{
		"id_rp": "2646",
		"id_proj": "44",
		"name_rp": "Диэлектрические материалы и приборы",
		"name_proj": "Разработка системы проверки доставки писем на электронную почту",
        "text_rp": "Рассматриваются современные представления о поляризации, электропроводности, диэлектрических потерях, пробое и фазовых переходах в диэлектриках. Обсуждаются характеристики неорганических, полимерных и композиционных диэлектриков, как в объемном, так и в пленочном исполнении, технологические аспекты их получения и возможности применения. Основное внимание уделяется свойствам активных диэлектриков: сегнетоэлектриков, пироэлектриков, пьезоэлектриков, электретов, а также нанокомпозитов, содержащих активные диэлектрики. Подробно рассмотрены современные перспективные направления использования диэлектрических материалов при создании электронной компонентной базы. . Основной целью дисциплины является формирование у студентов системного подхода в изучении физических процессов, явлений в диэлектриках, в том числе и активных диэлектриках, в массивном и пленочном исполнении для изделий микросистемной техники. Задачи дисциплины включают: - получение знаний о реальных значениях диэлектрических параметров, технологических аспектах получения и возможных применениях диэлектриков; - освоение методик расчета электрических полей, электрофизических параметров диэлектрических материалов и диэлектрических преобразователей. - приобретении навыков в практическом применении методов теоретического расчета и анализа параметров диэлектриков: объемных диэлектриков, тонких диэлектрических пленок и наноструктур, а также преобразователей на основе активных диэлектриков. Знание и понимание сути физических процессов и явлений в диэлектриках, в том числе в активных диэлектриках, технологических аспектов получения и особенностей применения диэлектриков в изделиях микро – и нанотехники, принципов работы и характеристик изделий микро – и нанотехники. Умение: - выполнять анализ исследований и разработок, связанных с созданием и свойствами диэлектрических материалов, а также применением их в приборах микро-и нанотехники; - формулировать цели и задачи научных исследований и разработок в соответствии с тенденциями и перспективами развития современной электронной компонентной базы. Владение навыками применения полученных знаний о диэлектрических материалах и приборах при разработке изделий микро-и нанотехники. . Индивидуальное домашнее задание (ИДЗ) выполняется одновременно с чтением лекций, тематика индивидуального домашнего задания связана с лекционным материалом. Студентам необходимо решить специальные задачи или продумать теоретические ответы на предложенные вопросы, выполнив при этом  обстоятельный обзор современной литературы по выделенной проблеме.  ИДЗ оформляется в виде эссе (реферата), в котором приводится  описание основных методик или  применяемых технологических процессов получения и исследования диэлектрических материалов или диэлектрических приборов, достигнутые научные результаты,  их обсуждение, список используемой литературы. По теме ИДЗ должна быть подготовлена презентация, апробация которой запланирована на практических занятиях. Такие требования призваны повысить интерес студентов к научно-практической  деятельности и  предоставляют возможность проявления индивидуальных способностей. Выполнение индивидуальных домашних заданий в форме реферата на заданную тему и соответствующего доклада с презентацией осуществляется  бригадой студентов в количестве 2-3 человек. Список тем рефератов предлагается студентам на выбор на 1-4 неделях учебного семестра. Срок сдачи готовых рефератов: 10-13 недели учебного семестра. Выступления на практических занятиях с презентациями по теме рефератов на 14-17 неделях учебного семестра. Ориентировочная трудоемкость индивидуального домашнего задания 36 ак. часов.   Предлагаемые темы  1.     Диоксид кремния. Применение в электронике. (The silicon dioxide. Application in electronics.) 2.     (Синтетические опалы на основе диоксида кремния. Получение. Свойства. Применение.( Synthetic opals based on silica. Manufacturing. Properties. Application.) 3.     Пьезоэффект. Пьезоэлектрические материалы. Области применения. (A piezoelectric effect. Piezoelectric materials. Application.) 4.     Пьезоэффект. Пьезопреобразователи. Принцип действия. Конструкции. Применение. (A piezoelectric effect. Piezoelectric transducer. The principle of operation. Design. Application.) 5.     Пьезокерамические актюаторы. Характеристики. Области применения. Принцип действия. Конструкции. (Piezoceramic actuators. Characteristics. Application. The principle of operation. Design.) 6.     Пироэффект. Пироэлектрические материалы. Преобразователи на пироэлектриках. (The pyroelectric effect. Pyroelectric materials. Pyroelectric converters.) 7.     Электретные преобразователи: микрофоны, телефоны, дозиметры, фильтры и др.  (Electret transducers: microphones, telephones, dosimeters, filters, etc) 8.     Электретный эффект. Электретные материалы. Способы получения электретов. (Electret effect. Electret materials. Methods for producing electrets.) 9.     Электретный эффект. Поля электретов. Методы определения электретного потенциала. (Electret effect. The fields of electrets. Methods of determining the electret potential) 10.  Анодные оксиды металлов. Получение, характеристики, применение. (Anodic metal oxides. Manufacturing, characteristics, application.) 11.  Конденсаторы с двойным электрическим слоем.  Принцип работы, характеристики, применение. (Capacitors with a double electric layer. The principle of operation, characteristics, application.). Введение. Описание содержания, целей и задач курса. Классификация диэлектрических материалов. Тема 1. Физические процессы и явления в диэлектрических материалах. Основные характеристики диэлектриков. Поляризация диэлектриков. Диэлектрическая проницаемость и восприимчивость. Анизотропия физических свойств. Тензоры диэлектрической проницаемости и восприимчивости. Виды поляризации в диэлектриках. Зависимость диэлектрической проницаемости от температуры и давления. Расчет диэлектрической проницаемости композиционных диэлектрических материалов. Анодные окислы вентильных металлов, получение и характеристики. Электролитические конденсаторы. Пористый анодный оксид алюминия. Суперконденсаторы. Электропроводность диэлектриков. Механизмы генерации носителей заряда и механизмы переноса заряда в диэлектриках. Токи абсорбции. Электропроводность диэлектриков в зависимости от типа носителей заряда. Энергия активации электропроводности. Зависимость проводимости от напряженности поля, температуры, частоты. Электропроводность газов, жидких диэлектриков, твердых диэлектриков, пористых диэлектриков Обратимое и необратимое нарушение устойчивости непроводящего состояния в диэлектриках. Тема 2. Low-k и high-k диэлектрические материалы в интегральных микросхемах. Функции пассивных диэлектриков в микроэлектронике. Перспективы снижения топологических размеров ИС. Требования к low-k диэлектрикам для суб- 100-нм технологий. Материалы с ультранизкой диэлектрической проницаемостью. Эффект электромиграциии. Диэлектрические материалы с высоким значением k, преимущества их использования в микро-и наноэлектронике. Тема 3. Пьезоэлектрики и пьезоэлектрические преобразователи. Электрострикция и пьезоэлектрический эффект. Физические основы пьезоэффекта. Прямой и обратный пьезоэффекты. Основные параметры и характеристики пьезоэлектриков. Электрическое управление пьезоэффектом. Электромеханический вклад в диэлектрическую проницаемость. Пьезоэлектрические объемные и пленочные материалы на основе неорганических сегнетоэлектриков, полимеров, композиционных пьезоэлектриков, биополимеров. Пьезоэлектрические излучатели, микрофоны, резонаторы, двигатели, генераторы. Пьезоактюаторы, их характеристики, применение. Наногенераторы на основе оксида цинка. Пьезоэлектрические преобразователи на объемных и поверхностных акустических волнах. Тема 4. Пироэффект и пироэлектрические преобразователи. Пироэлектрический эффект. Теплоэлектрический и электрокалорический эффекты. Термо - пьезоэлектричество. Электрокалорический вклад в диэлектрическую проницаемость. Применение пироэлектриков: тепловидение, температурные сенсоры, теплоэлектрические преобразователи, электрокалорическое охлаждение. Пироэлектрические сенсорные элементы и материалы. Чувствительность пироэлектрического элемента. Тема 5. Физические эффекты в сегнетоэлектриках, сегнетоэлектрические преобразователи. Сегнетоэлектричество: нелинейные эффекты, петля гистерезиса, вольтфарадные характеристики, температурная и частотная зависимости электрофизических параметров сегнетоэлектриков. Сегнетоэлектрики и пироэлектрики. Диэлектрическая нелинейность. Вариконды. Эффекты переключения и энергонезависимая память на сегнетоэлектриках. Сегнетоэлектрические пленки. Особенности технологии получения и применения керамических сегнетоэлектрических пленок. Применение наноразмерных сегнетоэлектрических материалов. Тема 6. Электреты и электретные преобразователи. Физика электретного состояния. Основные параметры и характеристики электретов. Способы получения электретов и электретные материалы: полимерные электреты, керамические электреты, оксидные электретные материалы. Температурная и временная стабильность электретного потенциала. Механизмы объемной релаксации электретного потенциала. Роль перколяционных процессов в процессах поверхностной разрядки электретов. Методы повышения стабильности электретного состояния. Электретные микрофоны, телефоны, дозиметры, фильтры, сенсорные переключатели, клавиатура, крепежные устройства. Тема 7. Композиционные материалы. Органо-неорганические пленочные композиты, преимущества и проблемы. Композиты: полимер/сегнетоэлектрик, полимер/металл, полимер/ УНТ. Особенности технологии получения и электрофизические характеристики. Пленочные конденсаторные материалы повышенной электрической прочности с повышенными значениями диэлектрической проницаемости. Получение и исследование физических свойств нанокомпозиционных материалов на основе регулярных пористых диэлектрических матриц, инфильтрованных активными диэлектриками: сегнетоэлектриками, нелинейно-оптическими материалами, лазерно-активными средами. Тема 8. Полимерные диэлектрики. Полимеры, особенности строения. Термопластичные и термореактивные полимеры. Температура стеклования. Полимерные пленки: получение, характеристики, применение. Политетрафторэтилен, полиимиды. Полимерные покрытия, зависимость структурообразования от химического состава полимера, разветвленности цепей, наличия и характеристик наполнителя, степени адгезионного взаимодействия с подложкой. Использование диэлектрического метода для исследования молекулярной подвижности фрагментов молекулярной цепи. Полианилин, его свойства. Процесс создания и характеристики полимерного транзистора на основе полианилина. Заключение. Перспективные материалы функциональной диэлектрической электроники. Обобщение результатов изучения дисциплины и их практического приложения.",
		"text_proj" : "Разработка системы проверки доставки писем на электронную почту. В различных системах и сервисах университета используется отправка писем на электронную почту как средство доставки уведомлений. Часто такие письма не доходят до получателя: переполнен ящик, заведомо неверно написанный адрес — причин может быть множество. В случаях, когда письмо не доходит до адресата не по нашей вине, почтовый сервер сообщает о невозможности доставки с указанием причины. Письмо с таким ответом приходит отправителю. Необходимо разработать систему, которая будет получать такие письма, анализировать их и агрегировать информацию о проблемных почтовых адресах. В системе должен быть предусмотрен API для других систем и сервисов, которые могли бы получить информацию о \"мёртвых\" адресах и, например, удалить такой адрес из списка рассылки. Обязательно должен: знать: PHP, основы алгоритмов уметь: проектировать RESTful API; писать интеграционные и юнит-тесты; владеть: навыками работы в команде; технологиями совместной работы: git, task-tracker. Желательно должен: знать: IMAP, POP3, SMTP, etc. ",
		"need_match":  false
	},
	{
		"id_rp": "2648",
		"id_proj": "46",
		"name_rp": "Конфликтология",
		"name_proj": "Разработка интеллектуальных модулей обработки данных на FPGA",
		"text_rp": "Дисциплина «Конфликтология» знакомит с основными классическими и современными теориями социального конфликта. Предлагает видение современного социального конфликта в глобальной перспективе и освещает основные концепции глобального конфликта. В традиции, восходящей к Л. Коузеру и Р. Дарендорфу, интерпретирует конфликт в его интегративных функциях: как фактор групповой динамики и социальных изменений. Знакомит с типологией и формами конфликта, дает анализ элементов и этапов конфликта. Освещает групповые и индивидуальные стратегии поведения в конфликте. Формирует навыки анализа конфликтных ситуаций, профилактики и разрешения конфликтов.. Изучение основных теоретических знаний подходов к конфликту. Студенты должны знать классические и современные объясняющие модели социального конфликта. Формирование навыков анализа закономерностей возникновения и развития социального конфликта. Студенты должны уметь осуществлять диагностику конфликта. Знания основных классических и современных теорий социального конфликта. Умения анализа конфликтных ситуаций, профилактики и разрешения конфликтов. Освоение технологий управления конфликтом, форм его урегулирования. Студенты должны приобрести навыки управления конфликтами.. Порядок выполнения ИДЗ, подготовка отчета и защита ИДЗ. В процессе обучения по дисциплине Конфликтология студент обязан выполнить два ИДЗ. Под выполнением ИДЗ подразумевается написание реферативной части по теоретическим источникам, проведение эмпирического исследования по выбранной теме, подготовка отчета и его защита на практических занятиях. ИДЗ подготавливаются в рамках самостоятельной работы. Темы ИДЗ определены соответствующей темой рабочей программы. Оформление отчета студентом осуществляется индивидуально в соответствии с принятыми в СПбГЭТУ правилами оформления студенческих работ. Отчет оформляется после выполнения эмпирического исследования и представляется преподавателю на проверку. После проверки отчет либо возвращается (при наличии замечаний) на доработку, либо подписывается к защите. ИДЗ защищаются студентами индивидуально в форме презентации. По окончании презентации студенту задаются вопросы (другими студентами и/или преподавателем). Ответы на вопросы учитываются в итоговой оценке за ИДЗ. Примерные темы ИДЗ:  1.     Конфликт: возможно ли рациональное осмысление? 2.     Конфликт в гуманитарных науках 3.     Предмет конфликтологии 4.     Мировоззренческие основы современной конфликтологии 5.     Методологические основы конфликтологии. Контрольные работы в форме тестовых заданий. Пример тестового задания: 1. Объект конфликтологии – это конфликты в целом люди войны Примеры вопросов для проведения зачета с оценкой:  1.     Основные этапы развития конфликтологической проблематики. 2.     Институциализация конфликтологии в России: основные вехи. 3.     Мировоззренческие и методологические предпосылки конфликтологии. 4.     Социально-психологические интерпретации конфликта. 5.     Позитивистская традиция интерпретации конфликта: Э.Дюркгейм и Т. Парсонс. . Введение. Конфликтология как учебная дисциплина. Цели и задачи курса. Основные понятия и определения. Тема 1. Социальный конфликт в современном обществе. Многообразие национально-этических, политических, идеологических, профессиональных, межпоколенных и иных конфликтов в современных условиях. Модели современного Российского общества через призму конфликтологии. Проблемность способов институциализации и легитимизации конфликтов. «Конфликтологическая парадигма» западной социологии и невозможность прямого заимствования. Актуализация мировоззренческих и методологических традиций. Изучение конфликта в научных и учебных дисциплинах в РФ. Исследовательские проекты академических институтов, Российского Государственного Независимого Фонда, Профессиональной социологической ассоциации. Опыт преподавания в вузах. Профессия конфликтолога. Тема 2. Методологические традиции в интерпретации конфликта. Актуальность классических социологических теорий для осмысления социального конфликта. Осмысление социального конфликта в классическом позитивизме (О. Конт, Г. Спенсер, Э. Дюркгейм), в марксизме (К. Маркс), в понимающей социологии (М. Вебер). Место социального конфликта в общественных изменениях и развитии. Либеральная и социалистическая идеологии: два взгляда на социальный конфликт современного общества. Анализ противоречий и конфликтов «индустриального общества» в рамках классической социологии. Фундаментальные теоретические подходы к анализу социального конфликта: неомарксистский, социобиологический, функционалистский, неофрейдистский. «Конфликтная парадигма» в современной западной социологии (Р.Дарендорф, Л.Козер, Дж.Рекс). Тема 3. Современный социальный конфликт. Глобальное измерение. Основные противоречия процесса глобализации современного мира. Кризис «глобального управления». Глобальное, региональное, локальное, личное. Классическое видение глобального конфликта. Либеральный проект и социальный конфликт. Социальная интеграция в традиционных и развитых современных обществах. Исторический опыт Запада в осознании и разрешении социального конфликта. Политическая и социальная революция. Институционализация социального конфликта: теория «естественного права», «общественного договора», «человеческих отношений», «рефлексивной политики», «общественного консенсуса». Цивилизационный подход. Своеобразие социальных конфликтов процесса модернизации: цивилизационный конфликт, ценностный кризис, партикуляризация конфликтов. Кризис самоидентификации и межпоколенный конфликт. Этносоциальные конфликты. Тема 4. Конфликт и социальная интеграция. Теории среднего и микроуровней. Конфликт как средство интеграции: анализ внутригруппового и межгруппового взаимодействия. Конфликты в формальных и неформальных группах. Трудовые конфликты. Конфликты в организациях. Межгрупповой конфликт. Институциональный плюрализм и социальный конфликт. Стабилизирующая роль конфликта. Реалистический и нереалистический конфликт. Замещающие механизмы и предохраняющие клапаны. Конфликт в интеграционных и мобилизационных технологиях. Управляемый конфликт: основные технологии. Тема 5. Аналитика конфликта. Типология конфликтов. Многообразие форм социального конфликта. Переменные конфликта: насильственность и интенсивность. Структурный анализ: элемента конфликта. Процессуальный анализ: этапы конфликта. Динамика разворачивания конфликта. Профилактика конфликта. Социальные роли и позиции в конфликте. Тема 6. Поведение в конфликте: групповые и индивидуальные стратегии. Модели конфликтного поведения. Основные стили поведения в конфликте. Завершение конфликта: основные проблемы. Разрешение конфликтов. Принципы, модели, технологии. Конфликтолог и медиатор Проблема личностного самоопределения в конфликтной ситуации. Анализ конфликтной ситуации: формы и алгоритмы. Прогнозирование и предупреждение конфликтов. Заключение. Подведение итогов курса.",
		"text_proj" : "Разработка интеллектуальных модулей обработки данных на FPGA. Цель проекта – разработка интеллектуальных технологий обработки данных для встроенных систем.  Для достижения цели исследования необходимо решить следующие задачи: 1. Разработка новых моделей и методов и снижения размерности данных, коррекции систем без переобучения.  2. Разработка интеллектуальных методов и алгоритмов обработки данных в режиме реального времени. 3. Аппаратная реализация встроенных систем. Партнёры: Huawei, Siemens. . Обязательно должен: знать: основы программирования. уметь: работать с \"железом\". владеть: одним из языков высокого уровня. Желательно должен: знать: основы проектирования на FPGA. уметь: моделировать на Matlab или Python; владеть: языками VHDL или Verilog. . В результате получит: знания: в области архитектуры встроенных систем; умения: проектирования для FPGA; опыт: проектирования и реализации аппаратно-ориентированных интеллектуальных модулей обработки данных.",
		"need_match": false  
	},
	{
		"id_rp": "2650",
		"id_proj": "21",
		"name_rp": "Теоретические основы высокочастотной электротехники",
		"name_proj": "Развитие кабинетов Юридических и Физических лиц",
		"text_rp": "Рассматривается распространение электромагнитной волны в полубесконечной среде с постоянными физическими параметрами, понятие о поверхностном эффекте и скорости распространения электромагнитной волны. Расчет сопротивлений тел при ярко выраженном поверхностном эффекте. Токопроводы различных конструкций и их расчет при любых частотах. Рассматривается распространение электромагнитной волны в проводящей пластине в продольном магнитном поле, сплошном и полом цилиндрах. Плоская электромагнитная волна в двухслойной среде. Приближенный расчет параметров коротких индукторов. Расчет сопротивлений индукторов с различными нагрузками по методу общего потока.. Изучение законов, формирование знаний о закономерностях при взаимодействии электромагнитных волн с проводящими телами различной формы и электрофизических свойств. Формирование навыков расчетов в области электротехники с применением аналитических методов. Освоение современных программных средств, предназначенных для расчета параметров электромагнитных полей. Умение использовать оптимальный инструментарий для достижения результата.. Введение. Краткая аннотация учебного курса с указанием целей и основных задач курса. Тема 1. Плоская электромагнитная волна в полубесконечной среде с постоянными физическими параметрами. Понятие о поверхностном эффекте. Скорость распространения электромагнитной волны. Электрические и магнитные сопротивления. Расчет сопротивлений тел при ярко выраженном поверхностном эффекте. Тема 2. Шинопроводы. Одиночная шина. Система двух шин. Распределение напряженностей электрического и магнитного полей. Предельные случаи. Выражения для удельной мощности и сопротивлений. Система трех шин. Тема 3. Проводящая пластина в продольном магнитном поле. Распределение напряженностей электрического и магнитного полей. Предельные случаи. Выражение для удельной мощности и сопротивлений. Электрический КПД. Выбор частоты при сквозном нагреве. Глубина активного слоя. Нагрев пакета пластин. Тема 4. Сплошной цилиндр в продольном магнитном поле. Распределение напряженностей электрического и магнитного полей. Предельные случаи. Выражения для удельной мощности и сопротивлений. Электрический КПД. Выбор частоты при сквозном нагреве. Глубина активного слоя. Тема 5. Полый цилиндр в продольном магнитном поле. Граничные условия при решении уравнений ЭМП. Выражения для активного и внутреннего реактивного сопротивлений. Электрический КПД. Выбор частоты. Электрический КПД. Тема 6. Ферромагнитная среда. Стадии нагрева стальных тел. Поверхностный эффект в ферромагнитной среде. Теория Л. Р. Неймана. Распределение напряженностей электрического и магнитного полей. Электрические и магнитные сопротивления. Определение магнитной проницаемости на поверхности ферромагнитной среды. Тема 7. Плоская электромагнитная волна в двухслойной среде. Основные допущения. Решение уравнений ЭМП. Распределение плотности тока в зависимости от глубины первой среды и магнитной проницаемости второй. Выбор частоты при закалке. Выражения для удельной мощности, активного и внутреннего реактивного сопротивлений. Определение магнитной проницаемости на поверхности второй среды. Тема 8. Приближенный расчет параметров коротких индукторов. Картина магнитного поля. Схема замещения короткого индуктора для нагрева наружных поверхностей. Расчет сопротивления обратного замыкания и индуктивности рассеяния. Вычисление коэффициентов приведения параметров. Заключение. Обобщение лекционного материала. Подведение итогов.",
		"text_proj" : "В рамках проекта развития кабинетов Юридических и Физических лиц предстоит выполнение следующих задач: Реализация маркетплейса. Развитие собственной CRM-обращений. Задачи проекта реализуются в рамках отдела собственных решений департамента разработки бизнес-приложений. Обязательно должен знать:  основные структуры данных и методы работы с ними, Java Core, Spring Boot, Spring Security, SQL. Желательно должен знать: Kotlin, принципы работы нереляционных баз данных.  . В результате получит опыт работы на производственном проекте в роли Java разработчика.",
		"need_match":  false 
	},
	{
		"id_rp": "4833",
		"id_proj": "2",
		"name_rp": "Социология",
		"name_proj": "Разработка платформы сервисов личного кабинета ЛЭТИ",
        "text_rp": "Курс нацелен на формирование у студентов знаний о предмете, структуре и функциях социологии, а также о тенденциях, закономерностях и особенностях развития современного российского социума. В ходе занятий обучающиеся осваивают навыки анализа социально значимых процессов и явлений; использования современных социологических методов в решении своих профессиональных задач; организации анкетных опросов, составления программы социологических исследований. В результате изучения дисциплины у студентов формируются представление о месте человека в системе социальных связей и понимание социальной значимости их будущей профессии.. Цель дисциплины: изучение предмета, получение знаний по структуре, функций социологии, содержания основных фундаментальных социологических теорий; тенденций, закономерностей и особенностей развития современного российского социума. Задачи дисциплины: - формирование знаний и навыков, необходимых для анализа социально значимых процессов и явлений; - формирование толерантного восприятия социальных и культурных различий; - формирование социального взаимодействия на основе принятых в обществе моральных и правовых норм; - понимания социальной значимости своей будущей профессии. Приобретение знаний и навыков, необходимых для анализа социально значимых процессов и явлений. Умение управлять своим временем, выстраивать и реализовывать траекторию саморазвития на основе принципов образования в течение всей жизни. Приобретение навыков использования современных социологических методов в изучении реальности; организации простых анкетных опросов, составления программ небольших социологических исследований.. Порядок выполнения ИДЗ, подготовка отчета и защита ИДЗ. В процессе обучения по дисциплине Социология студент обязан выполнить одно ИДЗ. Под выполнением ИДЗ подразумевается написание реферативной части по теоретическим источникам, проведение эмпирического исследования по выбранной теме, подготовка отчета и его защита на практических занятиях. ИДЗ подготавливается в рамках самостоятельной работы. Тема ИДЗ определена соответствующей темой рабочей программы. Оформление отчета студентом осуществляется индивидуально в соответствии с принятыми в СПбГЭТУ правилами оформления студенческих работ. Отчет оформляется после выполнения эмпирического исследования и представляется преподавателю на проверку. После проверки отчет либо возвращается (при наличии замечаний) на доработку, либо подписывается к защите. ИДЗ защищаются студентами индивидуально в форме презентации. По окончании презентации студенту задаются вопросы (другими студентами и/или преподавателем). Ответы на вопросы учитываются в итоговой оценке за ИДЗ. Примерные темы ИДЗ:  1. Социология как наука об обществе; 2. Этапы социализации личности; 3. Социальные основы инженерной деятельности.. Контрольные работы в форме тестовых заданий. Пример тестового задания: 1.    Основоположником теории позитивизма был: Герберт Спенсер Огюст Конт Эмиль Дюркгейм Макс Вебер. . Введение. Социология в системе социально-гуманитарного знания. Тема 1. Предмет, структура и функции социологии. Определение объекта и предмета социологии. Основные подходы к структуре социологического знания. Содержание фундаментальных социологических теорий. Специфика социологических концепций среднего уровня. Особенности прикладного социологического знания. Познавательная, эвристическая, мировоззренческая, прогностическая, коммуникативная, идеологическая и другие функции социологии. Тема 2. Прикладная социология. Предмет и функции прикладной социологии. Методология, методика и техника прикладных социологических исследований. Программа и процедуры прикладного исследования. Классификация прикладных социологических исследований. Виды социологических опросов. Специфика анкетирования, наблюдения, интервьюирования, социального эксперимента и других социологических методов прикладных исследований. Место и роль социального моделирования, социальной экспертизы, социального картографирования в социологическом исследовании. Тема 3. Общество как целостная система. Основные концепции общества в социологии. Основания и признаки общества как целостной системы. Подсистемы и компоненты содержания общества как системы. Классификация типов общественных систем. Особенности постиндустриального общества. Характер и природа общественной системы современной России. Специфика российского пути к национальной модели постиндустриального общества. Тема 4. Теория социальной стратификации общества. Научные истоки теории социальной стратификации. Основные стратификационные критерии. Сущность социальной стратификации общества. Классификация стратификационных структур: кастовые, сословные, элементарные, кумулятивные, конгломеративные и др. Социальные страты современного российского общества. Питирим Сорокин о сущности социальной мобильности. Вертикальная и горизонтальная мобильность. Маргинальность и маргиналы. Проблемы социальной мобильности в современном российском обществе. Тема 5. Социальные институты общества. Сущность и признаки социального института. Понятие «социальный институт». Классификация социальных институтов. Специфика, природа и функции семьи, церкви, культуры, государства, организации и других основополагающих институтов общества. Особенности становления и формирования современных социальных институтов в России. Тема 6. Социальный статус и социальная роль. Социальный статус и социальные роли личности. Сущность ролевого конфликта. Классификация типов личности. Проблемы взаимоотношений личности и общества. Основные типы личности и проблемы ее развития в современном российском обществе. Личность как объект и субъект экономических отношений. Личность как субъект организационного поведения. Проблемы и аспекты социализации современной личности. Тема 7. Социальная норма и отклоняющееся поведение. Социальные нормы и ценности как регуляторы социального поведения. Нормы-ожидания и нормы правила. Социальный контроль и его функции. Механизмы и структура социального контроля. Понятие санкций. Понятия социальной нормы и социального отклонения. Культурно одобряемые и культурно неодобряемые отклонения. Делинквентное и девиантное поведение. Социологические теории девиантного поведения. Концепция аномии Э. Дюркгейма. Теория аномии Р. Мертона. Теория стигматизации. Феномен «спирали девиантности» и девиантная карьера. Социологический анализ отдельных форм девиантного поведения. Тема 8. Малые группы. Понятие малой группы и ее признаки. Преимущества и ограничения включенности индивида в группу. Инструментальная и экспрессивная функция групп. Коммуникации в группе. Модели внутригрупповых коммуникационных сетей. Ролевая структура группы. Типология внутригрупповых ролей. Групповая динамика и фазы развития группы. Групповая сплоченность и факторы, влияющие на ее уровень. Внутригрупповые отношения и климат внутри группы. Особенности принятия решений в группе. Формы группового обсуждения: групповые дискуссии, «мозговой штурм», «номинальные группы», «гудящие группы» и др. Тема 9. Социология организаций. Понятие «организация». Особенности социологических концепций организации. Социология о двойственной естественно-рациональной природе организаций. Классификация организаций. Формальная и неформальная организационная структура, понятие «социальной» организации. Феномен организационной культуры. Классификации организационной культуры. Понятие организационного развития. Организационные стратегии, инновации и внешняя среда как факторы развития организации. Заключение. Оценка социальной значимости будущей профессии обучающихся.",
		"text_proj" : "Разработка платформы сервисов личного кабинета ЛЭТИ. Личный кабинет студентов, аспирантов и сотрудников университета — центральная система во всей цифровой среде университета. ЛК обеспечивает внутрикорпоративное общение наравне с электронной почтой, доставку объявлений студентам, сервисы заказа справок, подачи заявлений и многое другое. Учётная запись в личном кабинете — ключ для доступа к другим системам и сервисам (включая Moodle, OpenEDX, Индивидуальные траектории, Расписание и многое другое. В 2021 году личным кабинетом начали пользоваться учащиеся подготовительного отделения иностранцев, а в 2022 году к числу пользователей добавятся преподаватели, не являющиеся сотрудниками, и абитуриенты университета. Для дальнейшего развития системы, в том числе за счёт сервисов, реализуемых другими командами разработки университета, необходимо разработать платформу сервисов с возможностью: встраивания части представлений в интерфейс ЛК с имитацией нативности; бесшовной авторизации на основе OAuth 2; подключения к пользовательским и сервисным API с разным уровнем доступа. Участник проекта обязательно должен: знать: HTML, JS, CSS уметь: проектировать интерфейсы пользователя; проектировать RESTful API; писать интеграционные и юнит-тесты; документировать код; владеть: навыками анализа требований пользователя; навыками работы в команде; технологиями совместной работы: git, task-tracker. Желательно должен: знать: PHP, Node.js, Webpack, SCSS, Vue.js владеть: навыками деловой переписки. ",
		"need_match":  false 
	},
	{
		"id_rp": "4833",
		"id_proj": "25",
		"name_rp": "Социология",
		"name_proj": "Android-приложение предобработки данных 3d-реконструкции",
        "text_rp": "Курс нацелен на формирование у студентов знаний о предмете, структуре и функциях социологии, а также о тенденциях, закономерностях и особенностях развития современного российского социума. В ходе занятий обучающиеся осваивают навыки анализа социально значимых процессов и явлений; использования современных социологических методов в решении своих профессиональных задач; организации анкетных опросов, составления программы социологических исследований. В результате изучения дисциплины у студентов формируются представление о месте человека в системе социальных связей и понимание социальной значимости их будущей профессии.. Цель дисциплины: изучение предмета, получение знаний по структуре, функций социологии, содержания основных фундаментальных социологических теорий; тенденций, закономерностей и особенностей развития современного российского социума. Задачи дисциплины: - формирование знаний и навыков, необходимых для анализа социально значимых процессов и явлений; - формирование толерантного восприятия социальных и культурных различий; - формирование социального взаимодействия на основе принятых в обществе моральных и правовых норм; - понимания социальной значимости своей будущей профессии. Приобретение знаний и навыков, необходимых для анализа социально значимых процессов и явлений. Умение управлять своим временем, выстраивать и реализовывать траекторию саморазвития на основе принципов образования в течение всей жизни. Приобретение навыков использования современных социологических методов в изучении реальности; организации простых анкетных опросов, составления программ небольших социологических исследований.. Порядок выполнения ИДЗ, подготовка отчета и защита ИДЗ. В процессе обучения по дисциплине Социология студент обязан выполнить одно ИДЗ. Под выполнением ИДЗ подразумевается написание реферативной части по теоретическим источникам, проведение эмпирического исследования по выбранной теме, подготовка отчета и его защита на практических занятиях. ИДЗ подготавливается в рамках самостоятельной работы. Тема ИДЗ определена соответствующей темой рабочей программы. Оформление отчета студентом осуществляется индивидуально в соответствии с принятыми в СПбГЭТУ правилами оформления студенческих работ. Отчет оформляется после выполнения эмпирического исследования и представляется преподавателю на проверку. После проверки отчет либо возвращается (при наличии замечаний) на доработку, либо подписывается к защите. ИДЗ защищаются студентами индивидуально в форме презентации. По окончании презентации студенту задаются вопросы (другими студентами и/или преподавателем). Ответы на вопросы учитываются в итоговой оценке за ИДЗ. Примерные темы ИДЗ:  1. Социология как наука об обществе; 2. Этапы социализации личности; 3. Социальные основы инженерной деятельности.. Контрольные работы в форме тестовых заданий. Пример тестового задания: 1.    Основоположником теории позитивизма был: Герберт Спенсер Огюст Конт Эмиль Дюркгейм Макс Вебер. . Введение. Социология в системе социально-гуманитарного знания. Тема 1. Предмет, структура и функции социологии. Определение объекта и предмета социологии. Основные подходы к структуре социологического знания. Содержание фундаментальных социологических теорий. Специфика социологических концепций среднего уровня. Особенности прикладного социологического знания. Познавательная, эвристическая, мировоззренческая, прогностическая, коммуникативная, идеологическая и другие функции социологии. Тема 2. Прикладная социология. Предмет и функции прикладной социологии. Методология, методика и техника прикладных социологических исследований. Программа и процедуры прикладного исследования. Классификация прикладных социологических исследований. Виды социологических опросов. Специфика анкетирования, наблюдения, интервьюирования, социального эксперимента и других социологических методов прикладных исследований. Место и роль социального моделирования, социальной экспертизы, социального картографирования в социологическом исследовании. Тема 3. Общество как целостная система. Основные концепции общества в социологии. Основания и признаки общества как целостной системы. Подсистемы и компоненты содержания общества как системы. Классификация типов общественных систем. Особенности постиндустриального общества. Характер и природа общественной системы современной России. Специфика российского пути к национальной модели постиндустриального общества. Тема 4. Теория социальной стратификации общества. Научные истоки теории социальной стратификации. Основные стратификационные критерии. Сущность социальной стратификации общества. Классификация стратификационных структур: кастовые, сословные, элементарные, кумулятивные, конгломеративные и др. Социальные страты современного российского общества. Питирим Сорокин о сущности социальной мобильности. Вертикальная и горизонтальная мобильность. Маргинальность и маргиналы. Проблемы социальной мобильности в современном российском обществе. Тема 5. Социальные институты общества. Сущность и признаки социального института. Понятие «социальный институт». Классификация социальных институтов. Специфика, природа и функции семьи, церкви, культуры, государства, организации и других основополагающих институтов общества. Особенности становления и формирования современных социальных институтов в России. Тема 6. Социальный статус и социальная роль. Социальный статус и социальные роли личности. Сущность ролевого конфликта. Классификация типов личности. Проблемы взаимоотношений личности и общества. Основные типы личности и проблемы ее развития в современном российском обществе. Личность как объект и субъект экономических отношений. Личность как субъект организационного поведения. Проблемы и аспекты социализации современной личности. Тема 7. Социальная норма и отклоняющееся поведение. Социальные нормы и ценности как регуляторы социального поведения. Нормы-ожидания и нормы правила. Социальный контроль и его функции. Механизмы и структура социального контроля. Понятие санкций. Понятия социальной нормы и социального отклонения. Культурно одобряемые и культурно неодобряемые отклонения. Делинквентное и девиантное поведение. Социологические теории девиантного поведения. Концепция аномии Э. Дюркгейма. Теория аномии Р. Мертона. Теория стигматизации. Феномен «спирали девиантности» и девиантная карьера. Социологический анализ отдельных форм девиантного поведения. Тема 8. Малые группы. Понятие малой группы и ее признаки. Преимущества и ограничения включенности индивида в группу. Инструментальная и экспрессивная функция групп. Коммуникации в группе. Модели внутригрупповых коммуникационных сетей. Ролевая структура группы. Типология внутригрупповых ролей. Групповая динамика и фазы развития группы. Групповая сплоченность и факторы, влияющие на ее уровень. Внутригрупповые отношения и климат внутри группы. Особенности принятия решений в группе. Формы группового обсуждения: групповые дискуссии, «мозговой штурм», «номинальные группы», «гудящие группы» и др. Тема 9. Социология организаций. Понятие «организация». Особенности социологических концепций организации. Социология о двойственной естественно-рациональной природе организаций. Классификация организаций. Формальная и неформальная организационная структура, понятие «социальной» организации. Феномен организационной культуры. Классификации организационной культуры. Понятие организационного развития. Организационные стратегии, инновации и внешняя среда как факторы развития организации. Заключение. Оценка социальной значимости будущей профессии обучающихся.",
		"text_proj" : "Android-приложение предобработки данных 3d-реконструкции. Видео-презентация проекта https://www.youtube.com/watch?v=2dM3OOvD6Lk Одной из самых нетребовательных технологий 3d-реконструкции выступает фотограмметрия - набор методов, позволяющий составить трехмерную модель по неупорядоченному набору снимков камер обычных смартфонов. Однако, у этой технологии есть большой недостаток - для качества модели очень важно, чтобы соседние снимки были сделаны с минимальным углом ракурсов друг относительно друга, а также, чтобы в кадре было как можно больше особых точек (дескрипторов) Для решения этой проблемы, предлагается разработать мобильное приложение, позволяющее вести съемку и выполнять предварительный анализ снимков на предмет их взаимного сходства и количества особых точек. Помимо этого, приложение должно давать интерактивные рекомендации по траектории съемки. В задачи на этот семестр войдут следующие активности: разработка и программирование эвристик для отсеивания фото, не соответствующих минимальным требованиям корректной реконструкции; разработка модуля выработки рекомендаций по съемке; реализация простейших SLAM алгоритмов для позиционирования снимков. Кандидат должен иметь опыт разработки Android приложений на Kotlin, обладать базовым опытом решения задач машинного зрения. Плюсом будет любой опыт работы с облаками точек, работы с сенсорными данными и OpenCV. В результате получит: знания по работе с облаками точек и 3d реконструкции, умения Android-разработки, опыт участия в исследовательском проекте. Тестовая задача для участия в проекте. Создайте Android-приложение для проведения фотосъемки. Решение должно соответствовать максимальному числу требований из списка:   - ввод шаблона именования снимков в пользовательском интерфейсе, - отображение счетчика снимков в интерфейсе приложения, Проект должен запускаться по понятной инструкции в Android Studio версии Android Studio Arctic Fox 2020.3.1 Canary 10 или выше.   Исходный код и материалы загрузите в репозиторий на Github и укажите ссылку в качестве ответа.",
		"need_match":  false  
	},
	{
		"id_rp": "1552",
		"id_proj": "29",
		"name_rp": "Методы и инструменты управления рисками организации",
		"name_proj": "Разработка программного комплекса для оценки вариабельности пульса по видеоизображения человека",
		"text_rp": "В данной дисциплине изучаются основы, термины и определения информационно-системной методологии управления рисками, востребованные в практике организации при разработке и производства изделия, согласованные с требованиями нормативной документации, в том числе по системной инженерии, с теорией надежности, теорией управления рисками, системно-инженерными принципами, с автоматизированными системами управления качества типа Windchill Quality Solutions. Особое внимание также обращено на информационно-системные основы построения методов, моделей и алгоритмов по оценке и анализу процессов жизненного цикла и обеспечении требуемых надежности и допустимых рисков.. Целью дисциплины является развитие инженерной подготовки профессиональных компетенций магистрантов, направленных на эффективное решение основных задач по управлению рисками организации при создании сложных технических систем. Задачи дисциплины: овладеть основными методами оценки и управления рисками в деятельности организации. Знания на уровне представлений: выработка целостного восприятия рисков организации, как сложного управляемого информационного процесса при создания технических систем; Знания на уровне воспроизведения: освоение методов поиска технических решений, направленных на снижение риска и обеспечение высокого качества и требуемой надежности изделия; Знания на уровне понимания: приобретение практических навыков применения современных методов и инструментов управления рисками организации для принятия рациональных решений. Умения использовать современные методы и инструменты управления рисками с целью качества и надежности создаваемого образца технической системы; Формулировать задачи анализа, оценки и контроля качества, надежности образцов технических систем с помощью изучения конкретных примеров. Формирование навыков решения задач управления рисками на основе современных информационных технологий при обеспечении качества и надежности образцов технических систем.. . Выберите все верные ответы – их может быть больше одного! 1. Выберите верное определение термина \"риск\": 1. Вероятностная мера возникновения опасных явлений 2. Характеристика размера нанесенного социального, экономического, экологического и других видов ущерба и вреда. 3. Ожидаемая частота или вероятность возникновения опасностей определенного класса. 4. Верно все вышеперечисленное. Вопросы с множественным выбором позволяют учащимся выбрать только один вариант. Все варианты ответа предъявляются одновременно, наряду с текстом задачи: 2. Определите типичную ошибку, допущенную в следующем отрывке текста: «отказы по причинным схемам возникновения подразделяются на следующие группы …» а. отказы с мгновенной схемой возникновения б. отказы из-за конструктивных дефектов в. отказы из-за постепенного старения   Вопрос со свободным ответом: 3. Технический риск – это ______________________________________________(При ответе используйте взаимосвязь: объект риска - источник риска - нежелательное событие). . Введение. Современные концепции управления рисками организации. Современное развитие концепций управления рисками. Интеграция менеджмента рисков в различные модели систем управления. Менеджмент рисков и корпоративное управление организацией. Менеджмент рисков как основа концепции устойчивого развития организации. Основы анализа надежности технических систем в целях управления рисками. Основные определения теории надежности. Показатели надежности. Математические модели безопасности. Основы расчета технических систем по надежности их элементов. Алгоритм обеспечения надежности технических систем. Инженерные методы анализа рисков. Предварительный анализ опасностей. Методы проверочного листа (CHECK-LIST) и «что будет если.?» («WHAT-IF»). Дерево отказов ДО (fault tree analysis-FTA). Процедура построения, содержание анализа и структура дерева отказов. Дерево событий – ДС (event tree analysis - ETA). Дерево решений. Логический анализ. Контрольные карты процессов. Таблицы состояний и сочетаний рисков. Информационно-системная методология управления рисками. Методология проектного управления в жизненном цикле (ЖЦ) изделия. Метод управления проектами \"Ворота качества\" (Quality Gates). Метод развертывания функции качества (QFD). Процессы управления рисками и надежностью изделий в парадигме системной инженерии. Положения информационно-системной методологии управления рисками и надежностью в процессах ЖЦ изделий. Исходные представления информационно-системной методологии управления рисками и надежностью в процессах ЖЦ изделий. Информационно-системная методология управления рисками и надежностью в процессах ЖЦ изделий. Модели, методики, информационно-системные и эвентологические шкалы в управлении рисками и надежностью в процессах ЖЦ изделий. Программный пакет WINDCHILL QUALITY SOLUTIONS, как инструмент управлении рисками. Общие сведения и приемы работы в PTC Windchill Quality Solutions Модуль FMEA – Анализ видов, последствий и критичности отказов Модули Windchill FTA и Windchill Дерево событий – Анализ деревьев отказов и деревьев событий Модуль Windchill RBD – Анализ надежности сложной структуры. Модуль Windchill LCC – Анализ стоимости жизненного цикла. Оценка надежности человека, как звена организации. Причины совершения ошибок. Методология прогнозирования ошибок. Основные принципы формирования баз данных об ошибках человека. Правовые аспекты анализа риска и управления безопасностью организации. Классификация промышленных объектов по степени опасности. Оценка опасности промышленного объекта. Система лицензирования. Экспертиза промышленной безопасности. Ответственность организации за нарушения законодательства и нанесенный ущерб. Учет и расследование. Государственный контроль и надзор за промышленной безопасностью. Разработка планов по предотвращению происшествий и локализации их последствий. Российское законодательство в области промышленной безопасности. Заключение. Принципы оценки экономического ущерба от происшествий. Понятие ущерба и вреда. Структура вреда. Экономический и экологический вред. Структура полного ущерба как последствий происшествий на технических объектах. Принципы оценки экономического ущерба. Заключение. Перспективы развития методов и инструментов управления рисками.",
		"text_proj" : "Разработка программного комплекса для оценки вариабельности пульса по видеоизображения человека. Целью проекта является разработка программного сервиса, который по входному видео вычисляет частоту пульса человека. Проект подразумевает, как разработку ПО, так и исследования различных методов для достижения поставленной цели. Базовые технологии проекта: python, opencv, numpy, docker Задачами проекта являются: – Анализ существующих алгоритмов обработки видео для получения амплитудных и частотных характеристик человека на видео – Реализация наиболее подходящего алгоритма обработки – Разработка метода вычисления пульса по обработанному видео – Проведение исследования на предмет корреляции полученных результатов и реального пульса (полученного с помощью мед. оборудования или различных умных устройств) – Формулировка технических требований к аппаратной составляющей системе для обеспечения ее работы в наиболее сложных условиях. – Английский язык для чтения технической литературы и научных статей – Знание языка программирования python – Опыт разработки в ОС Linux. Иметь опыт в: – Работа с opencv – Базовая работа с виртуализацией с помощью Docker. В результате получит: – Знания в области обработки видео – Опыт участия в R&D проекте – Опыт работы в команде – Опыт разработки интеллектуальных систем компьютерного зрения. Входная задача на OpenCV. Разработать программу на языке python, которая с помощью библиотеки opencv читает входное видео и преобразует его следующим образом: – уменьшает разрешение видео в 2 раза – переводит видео в черно-белый формат – выводит порядковый номер кадра в углу видео Затем сохраняет новое преобразованное видео формате.mp4 Результатом выполнения задания является открытый git репозиторий с инструкцией по запуску программы исходным кодом.",
		"need_match":  false 
	},
	{
		"id_rp": "1557",
		"id_proj": "30",
		"name_rp": "Бережливые технологии в менеджменте качества",
		"name_proj": "Разработка системы детектирования и идентификации объектов на кадрах",
		"text_rp": "Целью освоения дисциплины «Бережливые технологии в менеджменте качества» является формирование у студентов знаний об инструментах бережливого производства, навыков их применения и оценки их эффективности. Полученные знания и навыки позволят им применять бережливые технологии при управлении процессами, что позволит повысить их эффективность и снизить риски возникновения ошибок.. Целью изучения дисциплины является приобретение знаний об инструментах бережливого производства и формирование умений и навыков их применения, оценки их эффективности в соответствии со спецификой процессов организации. Задачами изучения дисциплины является: - изучение основных особенностей, понятий и принципов бережливого производства; - изучение современных технологий бережливого производства и методов их внедрения; - изучение взаимосвязей бережливого производства и управления качеством; - применение эффективных технологий бережливого производства в управлении процессами; - освоение методов оценки эффективности проектов по бережливому производству. Знания: основных особенностей, понятий и принципов бережливого производства; современных технологий бережливого производства и методов их внедрения; взаимосвязей бережливого производства и управления качеством. Умение: планировать и реализовывать мероприятия по улучшению в соответствии с методами бережливого производства; встраивать бережливые технологии в процессы управления качеством. Навыки применения технологии бережливого производства в управлении процессами организации в контексте ее внутренней среды и гармонизация требований СМК и бережливых технологий в процессах организации.. Индивидуальное домашнее задание (ИДЗ) выполняется студентом в форме письменной работы по указанной ниже теме и предполагает проверку знания обучающимися пройденного материала.  ИДЗ формируется по данным организации, в которой студент проходит практику.  Структура письменной работы должна включать в себя следующие смысловые элементы:  1) введение, в котором студент характеризует деятельность компании;  2) основная часть, посвящённая раскрытию сути вопроса; 3) заключение, в котором подводятся итоги изложенного материала, высказывается индивидуальная позиция студента по изложенному материалу.  Объем письменной работы в текстовом виде не должен превышать 30 страниц печатного текста. Работа сдается преподавателю в установленный графиком текущего контроля срок. Используя ниже приведенный список, необходимо сформировать стратегию применения технологий бережливого производства в исследуемой компании.  Для этого:  1.  Выберите модель организации проектной деятельности, предложите политику управления проектной деятельностью. Определите портфель проектов по бережливому производству, критерии оценки эффективности проектной деятельности и зоны ответственности по портфелю проектов различных ролей. 2. Приведите пример проекта по улучшению (реальный кейс предприятия) согласно методологии DMAIC в рамках предложенного портфеля проектов. Приведите описание каждого шага методологии, команды проекта; предложите процедуру рабочих встреч по исполнению проекта. 3. Разработайте систему мотивации для руководителей высшего и среднего звена, участников проектов и работников на местах реализации проектов. Пример возможных мероприятий, реализуемых в рамках проекта по бережливому производству (на примере конкретного процесса и продукта организации).  1. Снижение уровня несоответствий в производственном процессе. 2. Сокращение времени протекания процесса. 3. Снижение потерь в процессе. 4. Повышение стабильности процесса.   ТРЕБОВАНИЯ К ОФОРМЛЕНИЮ ТЕКСТОВЫХ ДОКУМЕНТОВ ИДЗ: 1) используйте программный продукт Microsoft Word; 2) поля  - 2 см со всех сторон; шрифт  - Times New Roman 14; межстрочный интервал - 1,5 см; абзацный отступ - 1,25 см; книжная ориентация страницы; номера страниц обозначаются сверху, выравнивание текста производится по центру; на титульном листе номер не ставится, нумерация начинается со 2 страницы; текст оформляется без переносов, выравнивание производится по ширине страницы. 3) на все рисунки обязательны ссылки; рисунок и заголовок (подпись) выравниваются посередине листа; заголовок рисунка оформляется под рисунком;   4) заголовок пишется обычным шрифтом (без курсива и подчеркивания); 5) на все таблицы в тексте обязательны ссылки, таблица должна идти сразу же; заголовок таблицы рекомендуется писать обычным шрифтом, никак не выделяя; заголовок таблицы выравнивается по правому краю, а сама таблица по середине листа; 6) при наличии ссылок на источники они размещаются сразу же после того объекта, к которому относятся [1, с. 151]; ссылки нумеруются арабскими цифрами по мере использования по тексту; ссылка на один и тоже источник имеет одинаковый номер; ссылки также указываются в списке использованных источников в порядке использования по тексту.. № 2 Тема: Теория вероятностей 1. В билете 3 вопроса. Студент знает 20 вопросов из 40. С какой вероятностью он сдаст экзамен, если достаточно ответить на 2 вопроса из трех. 2. В партии n = 100 изделий. Вероятность брака p = 0,02. Используя приближенную формулу Пуассона, найдите вероятность события, означающего, что в партии не более одного бракованного изделия. Вопрос № 1.  Производственная система включает в себя …  1. персонал и оборудование; 2. материалы и методы;  3. все перечисленное; 4. процессы. Вопрос № 2. Целью проекта по совершенствованию производственного процесса может являться:  1. повышение качества продукции;  2. повышение производительности оборудования;  3. все перечисленное;  4. расширение узкого места в процессе. Вопрос № 3. Проект по улучшению включает следующие этапы: 1. анализ текущего состояния;  2. проектирование целевого состояния;  3. все перечисленное;  4. анализ рисков перехода к целевому состоянию. Вопрос № 4. Применение методологии DMAIC не предусмотрено, когда:  1.   определены процессы во всей организации;  2. в организации отсутствует описание процессов;  3. всеми определенными процессами управляют и выполняют необходимые измерения;  4. все процессы в организации постоянно улучшают. Вопрос № 5.  Для оценки развития производственной системы внедряется учетная модель: 1. с едиными финансовыми показателями процесса для финансовых и производственных подразделений ;  2. оперативно отображающая виды брака в процессе;  3. оперативно отображающая виды брака в процессе;  4. с едиными финансовыми показателями процесса для финансовых и производственных подразделений. Вопрос № 6.  Анализ текущего состояния включает в себя: 1. картирование процесса;  2. анализ коренных причин потерь и проблем процесса;  3. поиск и идентификация потерь в процессе;  4. все перечисленное. Вопрос № 7. Переход к целевому состоянию предполагает: 1. реализацию плана мероприятий; 2. мониторинг процесса; 3. оценку достижения поставленных целей;  4. анализ рисков целевого состояния. Вопрос № 8.  На каких этапах проекта целесообразно проводить хронометраж? 1. Анализ текущего состояния; 2. Оценка условий труда; 3. Обучение сотрудников; 4. Планирование этапов проекта. Вопрос № 9.  Методология \"DMAIC\" направлена на: 1. все перечисленное; 2. повышение финансовой эффективности; 3. повышение безопасности; 4. обеспечение удовлетворенности потребителя. Вопрос № 10. Число дефектов (несоответствий) на миллион возможных дефектов рассчитывается с учетом: 1. всего перечисленного;  2. количества выявленных несоответствий;  3. количества произведенных единиц продукции;  4. количества видов несоответствий. Министерство науки и высшего образования Российской Федерации ФГАОУ ВО «Санкт-Петербургский государственный электротехнический университет «ЛЭТИ» имени В.И. Ульянова (Ленина)» ____________________________________________________________ ЭКЗАМЕНАЦИОННЫЙ БИЛЕТ № 1 Дисциплина Физические основы электронагрева   ИНПРОТЕХ 1. Принципы производственной системы ТРS (Toyota Production System) 2. Организация рабочего места по методике 5S 3. Задача. УТВЕРЖДАЮ Заведующий кафедрой                                                   И.И. Иванов. Основы концепции бережливого производства. Основные понятия, термины и определения. Предмет и задачи дисциплины. Значение концепции бережливого производства. Операционные ресурсы, подлежащие оптимизации. Взаимосвязь инструментов бережливого производства и инструментов управления качеством. Мировые практики, успешный опыт компаний. Обзор нормативно-правовой базы бережливого производства. Политика управления проектами по бережливому производству. Основные отличия бережливых проектов, взаимосвязь стратегии с проектной деятельностью, типы проектов, анализ наличия ошибок в организации; риски, связанные с проектной деятельностью. Модели организации проектной деятельности, политика управления проектной деятельностью. Критерии оценки эффективности проектной деятельности. Структурирование проектов, планирование портфеля проектов; зоны ответственности по портфелю проектов различных ролей. Организация и оценка эффективности применения бережливых технологий в процессах организации. Методология DMAIC. Исследование каждого шага методологии. Ведение проекта: документирование, календарное и ресурсное планирование, типовые проекты по разным типам задач, команда проекта; процедура рабочих встреч по исполнению проекта; ретроспективный анализ. Инфраструктура для реализации бережливых технологий. Ролевая структура управления проектами; формирование группы улучшения, как профиль компетенции ключевых участников проектной деятельности; программа обучения управлению проектами по бережливому производству. Планирование и мотивация совершенствования. Заключение. Преодоление сопротивления изменениям. Корпоративная культура и бережливое производство. Система гибкой мотивации для руководителей высшего и среднего звена, участников проектов и работников на местах реализации проектов.",
		"text_proj" : "Разработка системы детектирования и идентификации объектов на кадрах. Объект исследования: разрозненные геопривязанные кадры видео Предмет исследования: детекция, классификация и идентификация объектов интереса Цель: Определить, какому из заранее заданных классов принадлежит объект Проблема: Протяженность объектов может быть различной, в том числе, не помещающихся на одно изображение Формулировка задачи: необходимо разработать систему идентификации объектов, найденных системой вскрытия, определяющую тип и характеристики найденного объекта или помечающую выделенный объект, как неинтересный. Обязательно должен: знать: язык программирования (С++ или Java или Python); уметь: работать в команде. Желательно должен: знать: математические основы детекции объектов (понятие свёртки, машинного обучения.); владеть: английским языком достаточным для чтения статей. В результате получит: знания: математические основы компьютерного зрения, алгоритмы машинного обучения; умения: проведение научного исследования, прикладное создание программного фреймворка; опыт: работы на предприятии в условиях проекта, близкого к реальному. Сформировать список алгоритмов идентификации. Необходимо сформировать список алгоритмов идентификации. Создать framework, позволяющий решать задачу идентификации несколькими методами. Необходимо создать framework, позволяющий решать задачу идентификации несколькими методами. Сформировать критерии сравнения алгоритмов. Необходимо сформировать критерии сравнения алгоритмов. Сравнить запрограммированные алгоритмы по выбранным критериям. Необходимо сравнить запрограммированные алгоритмы по выбранным критериям. ",
		"need_match":  false 
	},
	{
		"id_rp": "1558",
		"id_proj": "31",
		"name_rp": "Оценка соответствия и аудит",
		"name_proj": "Определение состояния автомобиля используя видео",
		"text_rp": "Дисциплина предназначена для изучения основ оценки соответствия, аудита систем менеджмента организаций и направлена на приобретение навыков применения нормативных документов и стандартов в области оценки соответствия и аудита; изучение правил и методик организации и проведения работ по оценке соответствия систем менеджмента (внутреннего и внешнего аудита), аккредитации органов по сертификации; формирование знаний принципов, методов построения и функционирования национальной и международных систем сертификации и аккредитации.. Изучение методических основ оценки соответствия СМК и управления процессом аудита, приобретение умений по планированию и проведению процедур сертификации и процесса аудита, знание основных нормативных документов в области сертификации и аудита. Планированию и проведению процедур сертификации и процесса аудита Сбор свидетельств аудита, квалификация статуса несоответствий и документирование результатов аудита Оценка соответствия СМК установленным требованиям. Приобретение знаний по планированию и проведению: процедур сертификации продукции/услуг и систем менеджмента; процесса аудита; для сбора свидетельств аудита. Приобретение умений по планированию и проведению процедур сертификации и процесса аудита; сбору свидетельств аудита; классификации несоответствий. Формированию навыков для планирования и проведения процедуры сертификации; процесса аудитадля оценки соответствия СМК; сбора свидетельств аудита; для квалификации статуса несоответствий и документирования результатов аудита. не предусмотретно. Министерство науки и высшего образования Российской Федерации ФГАОУ ВО «СанктПетербургский государственный электротехнический университет «ЛЭТИ» имени В.И. Ульянова (Ленина)» ЭКЗАМЕНАЦИОННЫЙ БИЛЕТ № 1 Дисциплина ОЦЕНКА СООТВЕТСТВИЯ И АУДИТ 1. Основные положения сертификации: Цели и задачи сертификации систем менеджмента качества, продукции и услуг. Законодательная основа обеспечения качества в России. 2. Менеджмент программы аудита: Блок-схема менеджмента программой аудита. Виды аудитов. Цели и задачи аудита системы менеджмента качества. (аудита первой, второй или третьей стороной)                                  УТВЕРЖДАЮ                                Заведующий кафедрой МСК                                                                                                                                               С.Н. Кузьмина  . Введение. \"Оценка соответствия и аудит\" как учебная дисциплина и как вид практической деятельности. Предмет и метод курса «Оценка соответствия и аудит». Методологические основы и задачи учебной дисциплины и ее взаимосвязи с другими дисциплинами учебного плана. Раздел 1 Оценка соответствия. Тема 1.1 Основные понятия сертификации (оценки соответствия). Основные определения и понятия. Системы сертификации их статус, правила организации и функционирования. Цели и задачи сертификации систем менеджмента качества, продукции и услуг. Цели и задачи введения национальной системы сертификации. Законодательная основа обеспечения качества в России. Российская система сертификации ГОСТ-Р, структура и принципы построения. Сертификация гарант соответствия систем менеджмента качества, продукции и услуг нормативным документам (государственным и международным стандартам). Аккредитация, сертификация и нормирование. Законодательно регулируемая (обязательная) и законодательно нерегулируемая (добровольная) области сертификации продукции и услуг. Экономическая эффективность получения сертификата на системы менеджмента качества, продукцию и услуги. Особенности сертификации систем, продукции и услуг в различных областях. Пути и механизмы международного признания сертификатов в ЕС, деятельность Европейских организаций по аккредитации лабораторий (EAL). Тема 1.2. Нормативное обеспечение работ по оценке соответствия. Комплекс государственных стандартов «Система сертификации ГОСТ Р. Регистр систем качества»: ГОСТ Р 40.001 – Правила по проведению сертификации систем качества в Российской Федерации; ГОСТ Р 40.002 – Система сертификации ГОСТ Р. Регистр системы качества. Основные положения; ГОСТ Р 40.003 – Система сертификации ГОСТ Р. Регистр системы качества. Порядок сертификацию систем менеджмента качества на соответствие ГОСТ Р ИСО 9001 (ISO 9001); ГОСТ Р ИСО/МЭК 17021– Оценка соответствия. Требования к органам, проводящим аудит и сертификацию cистем менеджмента; ГОСТ ИСО 9000 - Системы менеджмента качества. Основные положения и словарь; ГОСТ Р ИСО 9001 - Cистемы менеджмента качества. Требования; ГОСТ Р ИСО 9004 – Руководство по достижению устойчивого развития организации; ГОСТ Р ИСО 19011- Руководящие указания по аудиту систем менеджмента. Тема 1.3. Сертификация систем менеджмента, продукции/услуг (обязательная и добровольная сертификация). Сертификация продукции и услуг на соответствие требованиям безопасности и электромагнитной совместимости (ЭМС). Сертификация продукции и услуг на соответствие требованиям Таможенного союза. Модули для оценки соответствия в системе сертификации ЕС, схемы сертификации продукции в системе ГОСТ Р, схемы сертификации в системе технических регламентов Таможенного союза. Требования к аккредитации испытательных лабораторий. Общие требования к органам по сертификации продукции. Тема 1.4. Процедура сертификации систем менеджмента качества (СМК). Порядок и правила проведения сертификации, основные цели и условия. Объекты проверки и оценки системы качества. Участники проверки: состав комиссии, принципы ее формирования. Ответственность и обязанности экспертов и председателя комиссии. Обязанности заявителя. Организация работ: предсертификационный аудит как первый шаг на пути к успешной сертификации системы менеджмента качества (вступление в договорные отношения) и три этапа сертификации: предварительная оценка системы менеджмента качества (анализ документации); проверка и оценка системы менеджмента качества в организации (на месте); представление отчета по аудиту в комиссию по сертификации и принятие решения о выдаче сертификата соответствия; инспекционный контроль сертифицированной системы менеджмента качества. Цели и основное содержание этапов. Тема 1.5. Аккредитация органов по сертификации (ОС). Система органов по сертификации, испытательные лаборатории и центры. Аккредитация органов по сертификации и требования к ним. Область и объекты аккредитации. Организация работ по аккредитации объектов. Порядок и процедуры аккредитации органов по сертификации систем менеджмента качества. Раздел 2 Аудит. Тема 2.1. Основные понятия аудита. Основные определения и понятия. Цели и задачи аудита систем менеджмента качества. Предпосылки для проведения аудита. Тема 2.2. Нормативное обеспечение аудита. Толкование требований стандарта ГОСТ Р ИСО 19011: • Область применения стандарта • Принципы аудита • Менеджмент программы аудита • Действия при аудитах Компетентность и оценка аудиторов. Тема 2.3. Виды аудитов, их планирование и подготовка. Виды аудита: внешний аудит, внутренний аудит, системный аудит, аудит процесса, аудит продукции. Аудит первой стороной, второй стороной, третьей стороной. План аудита, область аудита, частота аудита, самопроверка и предварительный аудит, предварительная проверка документации системы менеджмента качества, определение времени аудита, информирование необходимых органов / структурных подразделений, составление документации. Тема 2.4. Аудитор и группа аудиторов, компетентность аудиторов. Требования к аудитору: • знания нормативной документации (ГОСТ Р ИСО 9001, ГОСТ Р ИСО 19011, специальные стандарты по продукции) • знание структуры и организации процессов на предприятии, • опыт в составлении чек-листов, • знание продукции и процедуры аудита, • личные качества аудитора, • организаторские и профессиональные качества аудитора. Группа аудиторов: - ведущий аудитор • подготовка аудиторов к аудиту, • ответственность аудиторов, • независимость аудиторов, • функции аудиторов. Человеческие аспекты в процедуре проведения аудита: поведение при беседах, риторика, общение, анализ ситуации, ход обсуждения, техника переговоров. Чек-листы: структура, чек-лист со шкалой оценок, “шпаргалка” для аудитора. Тема 2.5. Процедура аудита и порядок её проведения. Порядок и правила проведения аудита; проверка документации системы менеджмента качества; входное совещание; сбор доказательств, наблюдения ходе аудита; заключительное совещание по проведенному аудиту. Документы аудита. Ознакомление с практикой проведения внутренних аудитов в различных отраслях по материалам периодической печати. Тема 2.6. Корректирующие действия и управление рисками как предупреждение появления несоответствий. Планирование мероприятий по исправлению и не допущения повторения выявленных несоответствий и предупреждения их появления. Ответственность за их реализацию. Проверка их выполнения и оценка их эффективности. Управление рисками как инструмент предупреждения появления несоответствий в процедуре аудита. Контроль управления рисками с целью предупреждения появления несоответствий. Заключение. Лучшие практики сертифицированных систем менеджмента качества – как инструмент эффективного управления и конкурентного преимущества, а внутренний аудит как инструмент для постоянного улучшения действующей системы менеджмента качества",
		"text_proj" : "Определение состояния автомобиля используя видео. Цель работы: определять направление движения автомобиля, его остановки и старты по видеозаписи с видеорегистратора. Приложение, используя машинное обучение (или другие алгоритмы и технологии), определяет и классифицирует состояние автомобиля по видеозаписи с видеорегистратора: стоит автомобиль или движется, направление движения автомобиля (движется по прямой, вперед или назад, повернул направо/налево). Сначала сеть обучают (на имеющихся размеченных данных) и тестируют на десктопе. На телефон устанавливается пред-обученная версия (например, \"легкая\" версия tensorflow) с готовой моделью, которая производит обработку видеосигнала. Что требуется: Провести анализ имеющихся решений (state of the art); Установить выбранный фреймворк; Изучить архитектуру и возможности выбранного фреймворка, библиотек; Реализовать алгоритм классификации (предобработка данных, модель нейронной сети); Разделить имеющийся датасет (видеозаписи с размеченными состояниями автомобиля, в котором установлен видеорегистратор) на два набора: для обучения модели и для тестирования модели; Выполнить эксперименты на размеченных данных для получения метрик и на неразмеченных данных для исследования генерализации модели; Написать отчет об исследовании, подготовить презентацию. Обязательно должен: знать: Python уметь: работать с Git, использовать Open Source фреймворки и библиотеки, искать необходимые наборы данных в открытом доступе владеть: навыками изучения программного кода, документаций. Желательно должен: знать: принципы работы машинного обучения, предобработки данных уметь: реализовывать модели нейронных сетей, собирать метрики, визуализировать данные владеть: фреймворками TensorFlow или PyTorch, библиотекой OpenCV. В результате получит: знания: технологии машинного обучения, нейронные сети умения: работать с фреймворками машинного обучения опыт: работа с нейронными сетями, проведение экспериментов, подготовка отчетов и презентаций.",
		"need_match":  false 
	},
	{
    "id_rp": "5105",
    "id_proj": "11",
    "name_rp": "Дискретная математика и теоретическая информатика",
    "name_proj": "Анализ динамики COVID-19 в России",
    "text_rp": "Разделы современной математики, имеющие приложения в сфере информационных и компьютерных технологий, являются необходимыми при подготовке специалистов инженерных специальностей. Первый из них посвящен тем аспектам теории чисел, которые лежат в основе криптографических алгоритмов и механизмов шифрования. Во втором наряду с классическими вопросами теории многочленов рассматриваются алгоритмы, важные для компьютерной математики. Третий раздел объединяет классические комбинаторные идеи и их обобщения с прикладной проблематикой, в том числе, генерированием комбинаторных объектов, кодированием. Обсуждается техника работы с производящими функциями. Последний раздел посвящен дискретной теории вероятностей.. Формирование достаточно высокой математической культуры является основной целью дисциплины. Для этого необходимо, познакомить студентов с основными понятиями, методами и алгоритмам работы с дискретными объектами, развить логическое мышление, привить навыки использования математических методов и основ математического моделирования в практической деятельности. Методы и алгоритмы работы с дискретными объектами, являясь предметом изучения дисциплины, участвуют в развитии логического мышления и формировании навыков использования математических методов и основ математического моделирования в практической деятельности. В рамках реализации цели решаются учебные задачи дисциплины: - развить логическую культуру мышления студента; - развить способность обосновывать свои суждения и выбор метода решения возникающих задач; - сформировать навыки построения моделей и проведения расчетов для дискретных структур; - научить студентов применять основные математические методы, используемые при моделировании реальных систем; - выработать у студентов методологию математического подхода к анализу естественно-научных задач и проблем из других областей; - выработать у студентов способность создать математическую модель рассматриваемого объекта и провести ее детальное исследование с анализом результатов. В результате изучения дисциплины студенты должны приобрести знания по следующей тематике: 1. Простые числа и методы факторизации. 2. Различные позиционные системы счисления ( p-ичную, факториальную, смешанную). 3. Алгоритмы работы с длинными числами в p-ичной системе счисления. 4. Алгоритм быстрого возведения в степень в кольце вычетов. 5. Алгоритм Евклида в различных формах и вариациях. 6. Конечные и бесконечные цепные дроби. Разложение иррациональности в цепную дробь 7. Китайскую теорему об остатках, свойства функции Эйлера, теорему Эйлера. 8. Понятие примитивного многочлены и теоремы о приводимости и неприводимости многочленов над полем рациональных чисел, полем вычетов. 9. Алгоритм разложения на свободные от квадратов множители. 10. Основные комбинаторные конструкции и приемы. 11. Понятие производящей функции. Однородные и неоднородные рекуррентные уравнения. В результате изучения дисциплины студенты должны приобрести следующие умения: 1. Выполнять действия в различных системах счисления и переходить от одного представления к другому. 2. Преобразовывать алгоритмы действий с длинными числами в p-ичной системе счисления в алгоритмы действий в других позиционных системах счисления. 3. Использовать алгоритм Евклида для нахождения НОД, сокращения дробей, решения диофантовых уравнений, нахождения обратного для классов вычетов, (разлагать в не-прерывную дробь). 4. Восстанавливать число по приведенной системе остатков. 5. Вычислять значения функции Эйлера. 6. Использовать теорему Эйлера для возведения в степень на классах вычетов. В результате изучения дисциплины студенты должны приобрести навыки работы с алгоритмами работы с целыми числами, классами вычетов, многочленами, кодирования (RSA, Хаффмена, полиномиальным).. В процессе обучения по дисциплине « Дискретная математика и теоретическая информатика » студент обязан выполнить Индивидуальное домашнее задание (ИДЗ). Задачи ИДЗ охватывают весь спектр тематики, рассматриваемой в семестре, и содержит задачи на: применение целочисленных алгоритмов, применение модульной арифметики; применение полиномиальных алгоритмов, построение элементарных систем шифрования, использование комбинаторики и производящих функций. Требования по оформлению ИДЗ: Формат оформления: произвольный формат (печатный или рукописный). При выборе печатного формата следует использовать редакторы  Word или Excel. При выборе рукописного формата следует оформить работу на двойных листах в клетку или листах формата А4, или в тетради (в клетку) объемом не более 12 листов. При рукописном оформлении ИДЗ следует писать аккуратно черными или синими чернилами, с обязательным использованием линейки и карандаша при выполнении чертежей. При печатном оформлении ИДЗ рекомендуется использовать шрифт Times New Roman, Calibri или Ariel; размер шрифта 12-14 пунктов, межстрочный интервал 1,15-1,5 пунктов. Каждую задачу следует оформлять на новом листе. Таблицы и рисунки следует оформлять, придерживаясь сквозного просмотра. Т.е. если в задаче предусмотрена таблица или рисунок, то они должны быть приведены внутри или в конце решаемой задачи. Общее приложение для все рисунков и таблиц не предусматривается. Объем ИДЗ зависит только от количества задач и/или заданий. каждая задача должна содержать исходные данные, решение и ответ. Количество используемых источников не ограничено. Каждое ИДЗ состоит из: титульного листа (название дисциплины, ФИО, звание преподавателя, номер группы, ФИО студента, номер варианта, дата сдачи работы) списка решенных задач и/или заданий, списка используемых источников. Формат сдачи работы зависит от общих требований Университета (при очном обучении - ИДЗ сдается преподавателю в письменном виде или печатном виде; при дистанционном обучении - в печатном или электронном виде работы размещается в Moodle или отправляются преподавателю на электронную почту). Примерный вариант ИДЗ по дисциплине \"Дискретная математика и теоретическая информатика\" 1. Решить диофантово уравнение 5658 x + 6325 y = 161  2. Найти наименьшее натуральное число x , удовлетворяющее условиям x ≡ 6 mod 36; x ≡ 5 mod 11; x ≡ 6 mod 19; x ≡ 17 mod 23;  3. Найти остаток от деления 231119 на 44.  4. По формуле Лагранжа найти многочлен p не выше 4-ой степени, удовлетворяющий условиям: p ( − 2) = 18; p ( − 3) = 32; p (2) = − 38; p ( − 4) = 10; p ( − 1) = 4; 5. Найти рациональные корни: x 4 − 5 x 3 − 6 x 2 + 7 x − 2  6. Вычислить 7 / 37 в кольце вычетов по модулю 55.  7. Найти представление рационального числа 324/247 непрерывной дробью.  8. Найти остаток от деления многочлена x \\(^5\\)  + 2 x \\(^3\\)  + x \\(^2\\)  + 2 x + 1 на x \\(^3\\)  + x \\(^2\\)  + x + 1 в кольце Z / 3Z[ x ]. 9. Среди 25 целых чисел, 6 кратно 11, 16 кратно 3, 2 кратно 121, 2 кратно 33, 1 кратно 363. Определить, сколько среди них кратно 11 или 3, но не кратно 121.  10. Все перестановки 7 чисел (1;2;3;4;5;6;7) упорядочены в лексикографическом порядке. Какой по счету идет перестановка 5274631?  11. С помощью алгоритма Хаффмана построить код Шеннона-Фэно для текстового сообщения, состоящего из символов “щ”, “ъ”, “ы”, “ю”, “ь”, “э” с частотами соответственно 43, 42, 81, 11, 94, 17.  14. а) Представьте √ 142 в виде периодической цепной дроби; б) вычислите ее с точностью до ε =  \\(10^{-4}\\).  15. Русское слово из четырех букв закодировано при помощи алгоритма RSA открытым ключом ( e = 7 , m = 33). Шифрованное сообщение имеет вид (12; 25; 13; 29). Подберите закрытую часть ключа и прочитайте исходное слово. Буквам русского алфавита соответсвуют числа в диапазоне от 2 до 32 (исключены буквы “e” и “ъ”).   .   Примерные вопросы и варианты практических заданий заданий для коллоквиумов по темам \"Основные понятия комбинаторики \" и \"Арифметика многочленов\" Вопросы по теме \" Основным понятиям комбинаторики \"   Вопросы по теме \" Арифметика многочленов \"   Практические задания по теме \" Арифметика многочленов \" 1. Пользуясь схемой Горнера, выполните деление с остатком:   2. Пользуясь схемой Горнера, разложить многочлен f (x) по степеням x - x0 :   3. Пользуясь схемой Горнера, найти кратность корня x0 многочлена f (x) :    . Министерство науки и высшего образования Российской Федерации ФГАОУ ВО «Санкт-Петербургский государственный электротехнический университет «ЛЭТИ» имени В.И. Ульянова (Ленина)» ____________________________________________________________ ЭКЗАМЕНАЦИОННЫЙ БИЛЕТ № ___ Дисциплина Дискретная математика и теоретическая информатика Задача 1. 1.1. После некоторого элементарного шага бинарного алгоритма Евклида нахождения НОД были получены два числа 1011001 и 100110001. Какими могли быть числа непосредственно перед выполнением этого шага?  1.2. N=14 M=49*1024^k+14. Сколько ‘элементарных шагов сделает бинарный алгоритм Евклида для чисел N и M в зависимости от k?. (другая версия N=3*4^n M=5*8^m) 1.3. N=1 M=3*2^k+5*2^n Сколько шагов сделает алгоритм для этих чисел? Задача 2. 2.1. Привести пример многочлена P(x), который не имеет многочленов-делителей первой степени ни над Q, ни над Z2, ни над Z3. Ответ обосновать. 2.2. Привести пример многочлена P(x), который дает разное число неприводимых множителей при разложении над Q, Z2 и Z3. Ответ обосновать. 2.3. Привести пример двух многочленов P(x) и Q(x), таких что разложение многочлена M(x)=P(x)Q(x) на свободные от квадратов множители даст другой состав множителей чем разложение P(x) и Q(x) независимо. Ответ обосновать. Задача 3. 3.1. На отрезке от 999 до 1999 найдите два разные числа с одинаковым значением функции Эйлера. 3.2. Найдите количество чисел, взаимно простых с 2000 на отрезке от 999 до 1999. 3.3. Найдите количество неотрицательных решений уравнения НОД(x; 21^20)=1, не превышающих 1999. УТВЕРЖДАЮ Заведующий кафедрой                                                  С.Н. Поздняков. Введение. История формирования дисциплины. Значение дисциплины в моделировании. Целочисленные алгоритмы. НОД, простые числа. Решето Эратосфена. Алгоритмы факторизации (метод пробных делителей и метод Ферма). Алгоритм Евклида, бинарный алгоритм. Обобщенный алгоритм Евклида. Анализ алгоритма Евклида, числа Фибоначчи. Диофантовы уравнения. Разложение числа в цепную дробь. Свойства и вычисление подходящих дробей. Бесконечные цепные дроби. Наилучшие приближения. Модульная арифметика. Арифметика и свойства сравнений. Линейные сравнения. Китайская теорема об остатках. Система остаточных классов (RNS). Функция Эйлера и ее свойства. Теорема Эйлера-Ферма. Быстрое возведение числа в степень в кольце. Система шифрования RSA. Применение теоремы Эйлера в криптографии. Система шифрования RSA. Электронная подпись. Электронные деньги. Простейшие атаки на систему RSA. Комбинаторика и производящие функции. Алгоритм Хаффмана. Лексикографический и антилексикографический порядок. Генерация k - элементных подмножеств. Перечислительная комбинаторика. Код Грея. Перечисление перестановок. Разбиения чисел. Принцип включения-исключения. Задача о беспорядках. Производящие функции. Решение однородного линейного рекуррентного уравнения. Частные решения. Решение неоднородного линейного рекуррентного уравнения. Арифметика многочленов. Арифметика многочленов. Алгоритм Евклида и китайская теорема для многочленов. Интерполяционная формула Лагранжа. Полиномиальное кодирование. Элементы дискретной теории вероятностей. Основные определения, условные вероятности и формула Байеса. Случайные величины. Математическое ожидание и дисперсия. Схема Бернулли.",
    "text_proj": "Анализ динамики COVID-19 в России. ·       Web-приложение для отображения динамики различных характеристик распространения COVID-19 в России. ·       Приложение должно отображать различные характеристики, как исходные, так и производные, вычисленные приложением. Так же иногда полезно иметь возможность наложить несколько характеристик друг на друга. ·       Примеры исходных характеристик: динамика новых случаев, динамика выздоровлений. Примеры производных характеристик: разница между новыми случаями и выздоровлениями (больше людей заболевает или больше выздоравливает - растёт или уменьшается нагрузка на систему здравоохранения). Команда Frontend разработчик Backend разработчик iOS/Android разработчик. Как таковых обязательных требований нет. Смотрите желательные. . Технологический стек Frontend Javascript / typescript; фреймворки на выбор: React + Redux, Vue, Angular. Backend Java / Kotlin; Spring framework. C#; WebAPI, EntityFramework или Dapper. Mobile (опционально) iOS/Android приложение для отображения различных графиков. В результате получит: знания: разовьете свои знания по указанным технологиям опыт: работа в команде по методологии SCRUM, распределенной разработке, общее понимание коммерческой разработки Потенциальное трудоустройство . ",
    "need_match": false
  },
  {
    "id_rp": "5059",
    "id_proj": "20",
    "name_rp": "Статистика случайных процессов",
    "name_proj": "Построение аналитического решения, включая корпоративное хранилище данных в рамках проектов по внедрению биллинговых систем и связанных с ними дополнительных систем",
    "text_rp": "Изучаются теоретические основы случайных процессов, исследуются различные типы случайных процессов. Исследуемые процессы рассматриваются как математические модели явлений, встречающихся при решении прикладных инженерных задач. Для некоторых типов процессов применяются статистические методы их обработки и исследуются алгоритмы решения инженерных задач в рамках предложенных математических моделей.. Цель дисциплины - приобретение знаний о теории случайных процессов, включая знания областей применения статистических методов к случайным процессам и освоение навыков использования принципов и основных современных методов решения задач управления в технических системах. Основные задачи дисциплины направлены на овладении статистическими понятиями, связанными со случайными процессами; формирование навыков работы со случайными моделями в прикладных задачах, применения статистических методов для оценивания характеристик случайных процессов, построения стохастических моделей и проведения соответствующих расчетов. Знания методов исследования, свойств и областей приложения основных типов случайных процессов, а также методов статистического анализа случайных процессов;. Умения применять статистические методы к математическим моделям явлений, описываемых случайными процессами, и строить вероятностные модели прикладных задач в виде определенных случайных процессов;. Навыки использования статистических методов при решении прикладных задач. . В процессе обучения по дисциплине «Статистика случайных процессов» студент обязан выполнить индивидуальные домашние задания (ИДЗ). Задачи ИДЗ охватывают весь спектр тематики, рассматриваемой в семестре, и содержит задания на: ИДЗ№1 Случайные процессы и конечномерные распределения, ИДЗ№2 Статистическое оценивание; ИДЗ№3 Стохастические дифференциальные уравнения; ИДЗ№4 Моделирование марковских последовательностей. Требования по оформлению ИДЗ: Формат оформления: произвольный печатный формат. При оформлении ИДЗ следует использовать текстовые редакторы, электронные таблицы, результаты расчетов в математическом пакете следует вставлять в отчет в виде копии экрана. При оформлении ИДЗ рекомендуется использовать стандартные шрифты редакторов (например, Times New Roman, Calibri, Ariel); размер шрифта 12-14 пунктов, межстрочный интервал 1,15-1,5 пунктов. Каждую задачу следует оформлять на новом листе. Таблицы и рисунки следует оформлять, придерживаясь сквозного просмотра. Т.е. если в задаче предусмотрена таблица или рисунок, то они должны быть приведены внутри или в конце решаемой задачи. Общее приложения для рисунков и таблиц не предусматривается. Объем ИДЗ зависит только от количества задач и/или заданий. Каждая задача должна содержать исходные данные, решение и ответ. Количество используемых источников не ограничено, решение должно производиться в одном из математических пакетов. Каждое ИДЗ состоит из: титульного листа (название дисциплины, ФИО, звание преподавателя, номер группы, ФИО студента, номер варианта, дата сдачи работы) списка решенных задач и/или заданий, списка используемых источников. Формат сдачи работы зависит от общих требований Университета (при очном обучении - ИДЗ сдается преподавателю в письменном виде или печатном виде; при дистанционном обучении - в печатном или электронном виде работы размещается в Moodle или отправляются преподавателю на электронную почту). ИДЗ должны быть решены и представлены на проверку в установленное преподавателем время. . Примерные вопросы к коллоквиуму: Тема коллоквиума: Основные модели случайных процессов и способы их описания. 1) Роль вероятностно-статистических методов в математических и естественнонаучных исследованиях.  2) История развития теории случайных процессов.  3) Задание распределения случайного процесса конечномерными распределениями. Тема коллоквиума: Методы моделирования траекторий случайных процессов. 1)  Моделирование марковских последовательностей.  2) Моделирование винеровского процесса.  3) Моделирование гауссовских стационарных процессов.  4) Моделирование процесса Пуассона.  5) Моделирование точечных пуассоновских процессов. Министерство науки и высшего образования Российской Федерации ФГАОУ ВО «Санкт-Петербургский государственный электротехнический университет «ЛЭТИ» имени В.И. Ульянова (Ленина)» ____________________________________________________________ ЭКЗАМЕНАЦИОННЫЙ БИЛЕТ № 1 Дисциплина Статистика случайных процессов  ФКТИ 1. Точечный пуассоновский процесс.  2. Замена переменной в стохастическом интеграле, формула Ито.  3. Задача. УТВЕРЖДАЮ Заведующий кафедрой                                                   С.Н.Поздняков. Введение. Теория случайных процессов. Исторический обзор. Основные модели случайных процессов и способы их описания. Роль вероятностно-статистических методов в математических и естественнонаучных исследованиях. История развития теории случайных процессов. Задание распределения случайного процесса конечномерными распределениями. Элементы спектральной теории случайных процессов с элементами оценивания характеристик процессов. Стохастический интеграл от неслучайной функции. Спектральное представление. Разложение Вольда. Экстраполяция, интерполяция, фильтрация. Статистическое оценивание среднего ковариационной функции и спектральной плотности случайного процесса. Периодограмма. Задача фильтрации в гауссовском случае, линейный фильтр Кальмана-Бьюси. Стохастический интеграл и диффузионные процессы. Общее определение стохастического интеграла по Винеровскому процессу. Определение и свойства интеграла Ито. Стохастический интеграл, как функция верхнего предела. Замена переменной в стохастическом интеграле, формула Ито. Стохастические дифференциальные уравнения. Теорема существования и единственности решения. Диффузионный процесс. Методы моделирования траекторий случайных процессов. Моделирование марковских последовательностей. Моделирование винеровского процесса. Моделирование гауссовских стационарных процессов. Моделирование процесса Пуассона. Моделирование точечных пуассоновских процессов. Заключение. Современные области применения статистических методов к случайным процессам.",
    "text_proj": "Построение аналитического решения, включая корпоративное хранилище данных в рамках проектов по внедрению биллинговых систем и связанных с ними дополнительных систем. В настоящее время компания ведет ряд крупных проектов по внедрению биллинговых систем и связанных с ними дополнительных систем. В рамках каждого из этих проектов стоит задача построения аналитического решения, включая корпоративное хранилище данных. В качестве источников данных для корпоративного хранилища помимо биллинговой системы выступают CRM-система и ЛКК (Личный кабинет клиента).  В задачи Аналитика BI включается: Анализ систем-источников, их архитектуры данных и бизнес-процессов, которые они автоматизируют. Сбор и анализ требований Заказчика, документирование требований. Проектирование предметных областей в BI-решении (Договорная работа, Финансовый учет, CRM, ЛКК) Постановка задач на разработку. Проверка реализации функциональности и передача ее Заказчику. Обучение пользователей. Задачи проекта реализуются в рамках отдела информационно-аналитических систем департамента разработки бизнес-приложений. Важно владеть: Основами баз данных. Основами проектирования баз данных. Базовыми знания SQL для анализа данных. Подходами к обследованию, сбору требований. В результате участник получит опыт участия в производственном проекте в роли аналитика BI. ",
    "need_match": false
  },
  {
    "id_rp": "4355",
    "id_proj": "34",
    "name_rp": "Базы данных",
    "name_proj": "Разработка модулей «Кафедра» и «Деканат-2» для новой платформы сервисов личного кабинета",
    "text_rp": "Дисциплина посвящена знакомству с основными понятиями баз данных (БД) и моделями данных, используемыми в системах управления базами данных (СУБД), изучению методов проектирования баз данных и реализации прикладного программного обеспечения (ПО) на базе современных СУБД. Рассматриваются основы теории реляционных баз данных и методы их проектирования. Подробно изучается язык SQL и средства разработки приложений баз данных на примере СУБД MySQL. Изучается объектно-реляционное отображение на примере фреймворка SQLAlchemy. Отдельно рассматриваются вопросы производительности безопасности реляционных СУБД. Дисциплина позволяет получить навыки и углубленные знания, необходимые для успешной деятельности в области разработки программных систем. . При изучении дисциплины студенты получают теоретические знания в области реляционных баз данных и реляционной алгебры, а также практические умения и навыки, связанных применением современных реляционных систем управления базами данных (СУБД) при разработке информационных систем. Задачами дисциплины являются: - приобретение теоретических знаний в области реляционной алгебры и принципов действия основанных на данной теории реляционных баз данных; - формирование умений и навыков применения современных реляционных СУБД в проектировании, разработке и поддержке информационных систем. Студенты получают следующие знания: - знание основных понятий реляционной модели данных; - знание способов проектирования БД с использованием нормальных форм и модели \"сущность-связь\"; - знание синтаксиса и семантики языка SQL, использования языка SQL для взаимодействия с реляционной БД; - знание основ применения объектно-реляционного отображения для взаимодействия с СУБД; - знание способов несанкционированного доступа в РСУБД и противодействия этому;. Студенты приобретают: - умение проектировать эффективную структуру БД для заданной предметной области; - умение составлять SQL-запросы в БД для реализации функциональности информационной системы; - умение использовать различные средства взаимодействия с БД, в т.ч. объектно-реляционное отображение, и выбирать подходящее средство для конкретной задачи; - умение определять и принимать меры в отношении неэффективных и небезопасных техник взаимодействия с БД;. Студенты получают навыки проектирования и разработки информационных систем в части уровня хранения и доступа к данным с учётом особенностей реляционных СУБД.. Порядок выдачи, выполнения и оценки индивидуального домашнего задания определяется методикой текущего контроля.. Контрольные проводятся в автоматизированном режиме на платформе Moodle. Набор заданий генерируется для студента индивидуально. В каждом задании ответом является код на требуемом языке программирования или номера вариантов из списка предложенных ответов. Примеры заданий: 1. Вывести информацию (автора, название) о книгах, а также рейтинг в процентах Таблицы: Название: BOOKS Столбцы (через ;): book_id; title; author; price; amount; Название: продажи_книги Столбцы (через ;): book_id; rating; domestic_sales; international_sales; Пример строки для таблицы продажи_книги 1; 7.9; 699914; 322258; Рейтинг в таблице находится в диапазоне от 0 до 10. 2. Вывести информацию об авторе (author) и суммарное количество его книг в наличии (amount) из таблицы книги Таблицы: Название: книги Столбцы (через ;): book_id; title; author; price; amount 3. Вывести автора, название книги и рейтинг, которые имеют рейтинг выше чем средний (avg) в базе Таблицы: Название: book Столбцы (через ;): book_id; title; author; price; amount; Название: book_sale Столбцы (через ;): book_id; rating; domestic_sales; international_sales; 4. Переименуйте таблицу BOOKS в BOOKS_ANOTHER_TABLE 5. Какие операторы используются для модификации записей в таблицах? Выберите один или несколько: alter convert select modify update 6. Какое минимальное количество таблиц нужно для реализации связи вида многие ко многим для двух сущностей? (Ответ записать в виде числа). . Тема 1. Введение. Основные понятия БД. Краткая характеристика дисциплины. Структура системы оценивания и взаимодействия со студентами. Понятие и свойства баз данных (БД), систем управления базами данных (СУБД). Понятие и виды модели данных. Архитектуры информационных систем, использующих БД. Тема 2. Реляционная модель. Понятие и содержимое предметной области. Концептуальная и логическая модели предметной области (МПО). Основные понятия реляционной модели: отношения, домены, кортежи, атрибуты. Схема отношения, его степень и мощность. Объектные и связные отношения. Понятия первичного, возможного и внешнего ключа. Ограничения реляционной модели. Основные операции над отношениями. Тема 3. ER-модель. Модель \"сущность-связь\" (ER-модель) и проектирование БД. Основные понятия ER-модели. Нотации ER-модели. Создание реляционной модели по ER-модели. Пример проектирования БД ER-методом. Понятие функциональной зависимости и НФБК. Тема 4. Нормализация. Нормальные формы. Необходимость использования нормальных форм. Нормальные формы: 1НФ, 2НФ, 3НФ, НФБК, 4НФ, 5НФ, 6НФ. Функциональная зависимость между атрибутами. Суперключ, потенциальный ключ, ключевой атрибут, детерминант. Отличия 3НФ и НФБК. Многозначная зависимость. Декомпозиция без потерь и зависимость соединения. Тема 5. Создание и корректировка БД. Язык SQL. Группы операторов SQL. Организация и основные элементы реляционных СУБД: БД, схемы, таблицы, правила целостности, индексы, процедуры, функции, триггеры. Типы данных. Операторы INSERT, DELETE, UPDATE, DROP. Ограничения, связанные с внешними ключами. Тема 6. Упорядочивание и поиск информации, хранящейся в БД. Варианты физического хранения данных. Вычислительная сложность операции поиска. Понятие и способы определения индекса. Создание индекса с помощью SQL. B-дерево. Кластерный индекс. Некластерные индексы. Поиск по тексту в БД и полнотекстовые индексы. Индексы на основе хэша. Тема 7. Реализация запросов (ч. 1). Диалекты SQL. Синтаксис команды SELECT: DISTINCT, вычисляемые поля, WHERE, ORDER BY, LIMIT и OFFSET, GROUP BY и HAVING, агрегация. Вложенные запросы. Синтаксис CTE. Оператор UNION. Операторы управления потоком. Тема 8. Реализация запросов (ч. 2). Использование JOIN в операторах SELECT, UPDATE, DELETE. INNER JOIN, LEFT и RIGHT JOIN, OUTER JOIN, CROSS JOIN, FULL JOIN. Комбинации JOIN. Оператор INSERT. Операторы MySQL для манипулирования JSON и XML. Тема 9. Расширенный MySQL. Представления и материализованные представления. Обновляемые представления. Хранимые процедуры и функции. Триггеры. Тема 10. ORM. Миграции. Понятия DBAL (уровня абстракции БД) и ORM (объектно-реляционное отображение). Преимущества и недостатки ORM. Технологии ORM. Использование уровня DBAL и ORM в ORM-фреймворке SQLAlchemy. Миграции БД. Использование миграций в пакете Alembic. Тема 11. Производительность БД и способы ее измерения. Производительность систем. Нагрузочное тестирование и стресс-тестирование. Мониторинг БД и связанной инфраструктуры. Варианты метрик производительности БД. Измерение времени выполнения запросов. Оператор EXPLAIN. Использование EXPLAIN для оценки планирования запросов: LIMIT, ORDER BY, запросы по индексу, WHERE. Различные алгоритмы JOIN и их производительность. Тема 12. Движки хранения данных MySQL. MySQL Storage Engine: InnoDB, MyISAM, Memory, CSV, Archive, Blackhole, MRG_MyISAM, Federated. Сравнение движков. Тема 13. Контроль доступа и транзакции. Транзакции. Понятие ACID. Явные и неявные транзакции. Проблемы конкурентного доступа к данным. Уровни изоляции транзакций. Разграничение доступа к БД. Объектные и системные привилегии, роли. Оператор GRANT. Тема 14. Безопасность реляционных БД. SQL-инъекции. Схема инъекции. Классическая SQL-инъекция, слепая инъекция, абсолютно слепая инъекция. Инструменты для неавторизованного проникновения в БД: комментарии, UNION, information_schema, представления строк, регистры. Злоумышленное использование SLEEP и BENCHMARK. Инструменты автоматизации SQL-инъекций. Защита от SQL-инъекций. Тема 15. NoSQL. Использование KV-хранилища с РСУБД. Заключение. Понятие NoSQL (нереляционные базы данных). Виды NoSQL СУБД. БД типа \"ключ-значение\". Memcached. Redis. Типы данных и основные операторы Redis. Использование Redis для хранения \"горячих\" данных. Кэширование. Стратегии кэширования: Cache-Aside, Cache-Through, Write-Through, Write-Behind. Вопросы актуальности кэша. Кэширование REST-запросов и запросов к СУБД.",
    "text_proj": "Разработка модулей «Кафедра» и «Деканат-2» для новой платформы сервисов личного кабинета. В рамках преобразования личного кабинета студентов, аспирантов и сотрудников необходимо выделить сервисы, которыми пользуются деканаты и кафедры в отдельные пользовательские интерфейсы. Новые интерфейсы должны агрегировать все возможности кафедр и деканатов в одном месте, а также реализовать новые возможности на основе имеющихся данных (например, получение списка задолженностей на выпускающей кафедре). Обязательно должен: знать: HTML, JS, CSS уметь: проектировать интерфейсы пользователя; проектировать RESTful API; писать интеграционные и юнит-тесты; документировать код; владеть: навыками анализа требований пользователя; навыками работы в команде; технологиями совместной работы: git, task-tracker. Желательно должен: знать: PHP, Node.js, Webpack, SCSS, Vue.js владеть:  навыками деловой переписки. ",
    "need_match": false
  },
  {
    "id_rp": "4769",
    "id_proj": "34",
    "name_rp": "Введение в нереляционные системы управления базами данных",
    "name_proj": "Разработка модулей «Кафедра» и «Деканат-2» для новой платформы сервисов личного кабинета",
    "text_rp": "Дисциплина знакомит с теоретическими и практическими основами использования нереляционных СУБД. Формирует представления об основных качественных характеристиках распределенных информационных систем. Демонстрирует модели данных, используемые в нереляционных СУБД. Освещает существующие рекомендации и методики по моделированию предметной области с помощью нереляционных СУБД. Иллюстрирует вопросы масштабирования и резервирования для распределенных информационных систем. Формирует навыки практического использования нереляционных СУБД для решения задач хранения, анализа и представления данных.. Целью дисциплины является получение теоретических знаний о нереляционных СУБД, ключевых отличиях между реляционными и нереляционными СУБД, а также практических навыков применения нереляционных СУБД при решении задач профессиональной деятельности. Задачами дисциплины являются приобретение знаний, умений и практических навыков по применению нереляционных СУБД для проектирования информационных систем. Получение знаний о принципах моделирования данных и их ограничений в рамках различных типов нереляционных СУБД, об основных качественных и количественных понятиях, которыми характеризуются наиболее востребованные нереляционные СУБД. Формирование умения выбирать тип нереляционных СУБД для решения практической задачи, умения моделировать предметную область в рамках нереляционной СУБД. Освоение навыков навыков применения нереляционных СУБД при разработке программного обеспечения информационных систем.. Пример задач, выдаваемых на экзаменах к билетам Общее условие задачи: представить проект нереляционной базы данных для создания сервиса в заданной предметной области.  Пример описания предметной области: требуется создать сервис для информационной поддержки работы кафе быстрого питания, позволяющий управлять продуктовыми запасами, фиксировать оплаты, осуществлять прогнозирование спроса, обеспечивать управление меню, графиком уборки помещений. Пример вопросов теста текущего контроля Тесты состоят из 20 вопросов с возможностью выбора одного или нескольких вариантов ответа.  1. Как выглядит наиболее частый компромисс прироста производительности для распределенной вычислительной системы? Прирост скорости разменивается на прирост используемой памяти;  Прирост скорости разменивается на сокращение используемой памяти;  Прирост скорости разменивается на прирост функциональности;  Прирост скорости разменивается на сокращение пропускной способности. 2. Что ограничивает горизонтальную масштабируемость системы по закону Амдала? Доля последовательных вычислений; Доля параллельных вычислений; Характер решаемой задачи; Характер запросов к системе. 3. Какое преимущество обеспечивает асинхронная репликация по сравнению с синхронной? Меньше величина задержки репликации; Более надежный контроль над согласованностью данных; Более безопасное соединение между серверами. Министерство науки и высшего образования Российской Федерации ФГАОУ ВО «Санкт-Петербургский государственный электротехнический университет «ЛЭТИ» имени В.И. Ульянова (Ленина)» ____________________________________________________________ ЭКЗАМЕНАЦИОННЫЙ БИЛЕТ № 1 Дисциплина Введение в нереляционные системы управления базами данных   ФКТИ 1. Отличия объектно-ориентированных баз данных от других NoSQL решений..  2. Аномалии в данных. Классификация сценариев использования по доле операций чтения и записи, примеры. 3. Задача. УТВЕРЖДАЮ Заведующий кафедрой                                 . Министерство науки и высшего образования Российской Федерации ФГАОУ ВО «Санкт-Петербургский государственный электротехнический университет «ЛЭТИ» имени В.И. Ульянова (Ленина)» ____________________________________________________________ ЭКЗАМЕНАЦИОННЫЙ БИЛЕТ № 1 Дисциплина Введение в нереляционные системы управления базами данных   ФКТИ 1.  Характеристика графовых баз данных. Отличия графовых баз данных от других NoSQL решений.  2. Методы повышения надежности БД. Аномалии в данных. 3. Задача. УТВЕРЖДАЮ Заведующий кафедрой                                                 . Введение. Разъяснение термина NoSQL и ключевых различий между SQL и NoSQL. Формулировка CAP теоремы и ее следствий. Основные термины для описания производительности и сценариев использования БД. Компромиссы (Tradeoff) производительности. Тема 1. Базы данных «ключ-значение». Ассоциативные массивы, кэш-память и алгоритмы вытеснения. Описание основных способов использования баз данных «ключ-значение». Особенности использования. Примеры задач, в которых используются базы данных «ключ-значение». Программные интерфейсы Memcached. Тема 2. Документо-ориентированные базы данных. Слабоструктурированные данные. JSON. Описание основных способов использования документно-ориентированных баз данных. Особенности использования. Примеры задач, в которых используются документно-ориентированные базы данных. Пример ДОСУБД - MongoDB. Программные интерфейсы для работы с MongoDB – mongoshell, pymongo. Тема 3. Графовые базы данных. Способы формализации и хранения аннотированных графов. Виды графов. Характеристика графовых баз данных. Отличия графовых баз данных от других NoSQL решений. Эффективность использования графовых баз данных в зависимости от задачи. Примеры применения графовых баз данных для реальных задач разработки ПО. Характеристика графовой СУБД Neo4j. Программные интерфейсы для работы с Neo4j. Тема 4. Объектно-ориентированные базы данных. Сериализация и десериализация. Основная проблема, решаемая объектно-ориентированными базами данных. Характеристика объектно-ориентированных баз данных. Отличия объектно-ориентированных баз данных от других NoSQL решений. Эффективность использования в зависимости от задачи. Примеры применения объектно-ориентированных баз данных для реальных задач разработки ПО. Проблемы обработки транзакций. Установка и использование DB4O. Тема 5. Базы данных BigTable. MapReduce. BigData. Версионирование. Характеристика BigTable и отличие от других типов NoSQL баз данных. Модель данных BigTable. Задачи, эффективно решаемые BigTable. Установка Apache Cassandra. Интерфейс взаимодействия с СУБД cqlsh. Виды ConsistencyLevel. Тема 6. Хранилища RDF. Семантический web и инженерия знаний. RDF – абстрактная модель данных в рамках семантической паутины. Характеристика RDF баз данных и отличие от других типов. SPARQL. Задачи, эффективно решаемые RDF хранилищами. Тема 7. Многомерные базы данных. Нормальные формы. Non-first normal form. Характеристика и отличие отдругих типов. Пример моделирования данных. Задачи, эффективно решаемые многомерными базами данных. Применение для реальных задач разработки ПО. Тема 8. Многомодельные базы данных. Виды логических моделей данных. Polyglot persistence. Миграция и конвертация данных. Отличия многомодельных баз данных от других NoSQL решений. Эффективность использования многомодельных баз данных в зависимости от задачи. Примеры применения многомодельных баз данных для реальных задач разработки ПО. Установка и настройка среды ArangoDB. Структуры данных ArangoDB. Тема 9. Репликация и согласованность. Отказоустойчивость и масштабируемость баз данных. Закон Амдала. Методы повышения надежности БД. Аномалии в данных. Классификация сценариев использования по доле операций чтения и записи, примеры. Горизонтальный и вертикальный шардинг. Репликация: синхронная и асинхронная, Master-Master и Master-Slave. Модели консистентности. Принципы ACID и BASE. Заключение. Особенности проектирования моделей данных для различных видов СУБД. Критерии для формулирования перспективных требований производительности и надежности к БД. ",
    "text_proj": "Разработка модулей «Кафедра» и «Деканат-2» для новой платформы сервисов личного кабинета. В рамках преобразования личного кабинета студентов, аспирантов и сотрудников необходимо выделить сервисы, которыми пользуются деканаты и кафедры в отдельные пользовательские интерфейсы. Новые интерфейсы должны агрегировать все возможности кафедр и деканатов в одном месте, а также реализовать новые возможности на основе имеющихся данных (например, получение списка задолженностей на выпускающей кафедре). Обязательно должен: знать: HTML, JS, CSS уметь: проектировать интерфейсы пользователя; проектировать RESTful API; писать интеграционные и юнит-тесты; документировать код; владеть: навыками анализа требований пользователя; навыками работы в команде; технологиями совместной работы: git, task-tracker. Желательно должен: знать: PHP, Node.js, Webpack, SCSS, Vue.js владеть:  навыками деловой переписки. ",
    "need_match": false
  },
  {
    "id_rp": "4401",
    "id_proj": "48",
    "name_rp": "Проектирование встроенных приложений",
    "name_proj": "Разработка рекомендательной машины ",
    "text_rp": "В настоящее время большая доля аппаратуры содержит в своем составе микропроцессор, предназначенный для управления работой систем и устройств, а также их взаимодействием с человеком и физическими объектами. В связи с чем растет потребность в разработке встроенного программного обеспечения, которое по сути определяет итоговую логику функционирования аппаратуры. В курсе изучаются одноплатные микроконтроллеры, особенности обмена по последовательным интерфейсам, программные среды ArduinoIDE и VisualStudio, программирование на языке C++, датчики физических величин и исполнительные устройства для управления объектами. Уделено внимание концепции “интернета вещей”. На основе иерархической модели сетевого взаимодействия даются понятия протоколов прикладного, транспортного и сетевой уровней. Рассматривается методология проектирования компонент встроенных приложений. . Целью дисциплины является: - изучение принципов построения встроенных систем, аппаратных платформ, архитектур микроконтроллеров, средств проектирования программ и их использование для разработки встроенных приложений; - освоение особенностей интерфейсов, протоколов и технологий для организации сетевого обмена данными; - формирование навыков использования современных программных платформ для проектирования встроенных приложений. Задачи: - использование знаний и умений для разработки встроенных приложений; - освоение программных средств и цифровых платформ для создания конечного продукта; - приобретение навыков в области средств сетевого взаимодействия. Знание концептуальных принципов проектирования встроенных систем, аппаратных платформ, архитектур микропроцессоров, сред программирования, протоколов и интерфейсов. Освоение современных программно\u00AD-аппаратных комплексов и технологий разработки конечного продукта. Использование знаний и умений для оценки тенденций развития в области средств проектирования встроенных приложений. Формирование навыков использования современных программных платформ для проектирования встроенных приложений. . Введение. Содержание курса и его задачи, основные разделы. Связь курса с другими дисциплинами. Исторические сведения о развитии техники встроенных приложений. Структура и план учебной деятельности студентов. Состав и содержание практических занятий. Формы отчетности. Обзор современных одноплатных контроллеров. Одноплатные контроллеры как аппаратурная основа для создания встроенных приложений. Архитектура микроконтроллера на примере решений EspressifSystems. Особенности архитектуры, распределение памяти, интерфейсы, порты ввода/вывода, АЦП, ШИМ, Wi-Fi. Протокол UART. Назначения, структура кадра, временные диаграммы, синхронизация, контроль ошибок, скорость передачи, схема подключения. Шина I2C. Принцип работы и подключения, структура кадра, адресация, синхронизация, скорость передачи, схема подключения. Интерфейс SPI. Структура кадра, синхронизация, скорость передачи, схемы подключения. Технология Wi-Fi. Основные характеристики технологии, диапазон частот, частотные каналы, точка доступа, скорость передачи. Программные среды для проектирования встроенных приложений. Среды программирования Arduino IDE и Visual Studio. Языки программирования для микроконтроллеров. Языки Ассемблер, С, С++. Обзор датчиков физических величин. Аналоговые и цифровые датчики. Датчики температуры, давления, освещенности, влажности, перемещения, напряжения, тока. Исполнительные устройства для управления объектами. Электрические двигатели и приводы, релейные устройства, механизмы роботов, электромеханические и электромагнитные замки, заслонки, клапаны, задвижки, электрические нагреватели, излучатели. Концепция “интернета вещей”. Общие принципы взаимодействия вещей (устройств, машин, объектов) между собой через интернет, без постоянного участия человека. которые ведут к глобальной автоматизации в современных технологических процессах. Иерархическая модель сетевого взаимодействия. Назначение уровней моделей OSI и TCP/IP. Многоуровневая модель взаимодействия открытых систем как основа стандартизации сетевого взаимодействия. Назначение уровней коммуникационного процесса. Уровень приложений и доступ к сетевым сервисам. Задачи уровня приложений. Протоколы прикладного уровня. Основные протоколы прикладного уровня. Протоколы транспортного уровня. Протоколы TCP и UDP. Сетевой уровень и IP-адресация. Объединение сетей на основе протоколов сетевого уровня, адресация на сетевом уровне. Заключение. Основные тенденции дальнейшего развития технологий встроенных приложений.",
    "text_proj": "Разработка рекомендательной машины. Рекомендательная машина необходима для помощи в выборе, который осуществляется обучающимся на всем периоде обучения, начиная от выбора направления при поступлении и выбора вакансии при трудоустройстве или смены работы. При этом выбор не ограничивается только учебными модулями. Он связан выбором проектов, преподавателей, участием в различных мероприятиях, курсов ДПО и т.п. Результаты выбора формируют цифровой след обучающегося. На правильность выбора влияет множество факторов, включая цифровой след и имеющуюся цель (например, занять ту или иную должность в компании).  Для того чтобы учесть все эти факторы разрабатывается рекомендательная машина, которая помогает обучающемуся сделать правильный выбор. В данном проекте необходимо разрабатывать модули рекомендательной машины: шину данных для работы с множеством разных источников; модуль предобработки данных для преобразования исходных данных к виду и качеству необходимому для рекомендательных моделей ядро машинного обучения для подключения разных систем машинного обучения и выполнения на них различных моделей и алгоритмов машинного обучения модуль управления, обеспечивающий как формирование рекомендаций, так и переобучение рекомендательных моделей.  . Обязательно должен: знать: принципы выполнения машинного обучения, ООП уметь: изучать open source системы владеть: языками программирования Python, Java. Желательно должен: знать: принципы работы рекомендательных машин, шин данных, движков машинного обучения уметь: строить сложные программные системы из различных компонент владеть: Apach Spark, Apach Drill, scikit-learn и др. В результате получит: знать: работу рекомендательных машин, шин данных, движков машинного обучения уметь: строить сложные программные системы из различных компонент владеть: Apach Spark, Apach Drill, scikit-learn и др. ",
    "need_match": false
  },
  {
    "id_rp": "6093",
    "id_proj": "56",
    "name_rp": "Математический анализ",
    "name_proj": "Практика в проектах по автономному транспорту от АО \"НИИАС\" РЖД",
    "text_rp": "Математический анализ - ключевой раздел высшей математики, необходимый при подготовке специалистов инженерных специальностей. В данном курсе рассматривается связь основных понятий классического математического анализа с инженерными приложениями. Основу ее составляют следующие темы: функции одной переменной (пределы и непрерывность; дифференциальное исчисление; формула Тейлора; исследование функций по производной). Интегральное исчисление (неопределенный и определенный интеграл, геометрические и физические приложения; несобственные интегралы). Числовые и степенные ряды. Исследование функций нескольких переменных. Методы решения простейших дифференциальных уравнений. . Целью изучения дисциплины являются: - приобретение знаний основных понятий и методов аналитических разделов высшей математики, используемых при изучении общетеоретических и специальных дисциплин и в инженерной практике; - формирование системы теоретических знаний и практических навыков основ математического аппарата, основных методов количественного измерения случайности действия факторов, которые влияют на любые процессы, основ математического аппарата, который используется при моделировании любых процессов жизнедеятельности человека и является базовым во всех науках, использующих формульные описание законов и процессов. Задачами изучения дисциплины является: - изучение основных понятий и методов аналитических разделов высшей математики, используемых при изучении общетеоретических и специальных дисциплин и в инженерной практике; - формирование умений применять свои знания к решению практических задач; пользоваться математической литературой для самостоятельного изучения прикладных вопросов; - освоение методов построения математических моделей для задач, возникающих в инженерной практике и решаемых методами математического анализа. В результате изучения дисциплины студенты должны приобрести знания основных понятий и методов математического анализа. В результате изучения дисциплины студенты должны приобрести умения вычислять пределы и производные, интерпретировать, полученные результаты, вычислять интегралы и использовать их для решения сопутствующих задач. Освоение основных навыков работы с понятиями математического анализа, использующимися при изучении общетеоретических и специальных дисциплин и в инженерной практике.. Цель выполнения ИДЗ - формирование умений и навыков по решению прикладных задач для дальнейшего использования в профессиональной деятельности. Примерные темы индивидуальных домашних заданий (ИДЗ): 1 семестр: ИДЗ№1 «Построение графика функции» ИДЗ№2 «Интегрирование дробно-рациональной функции» 2 семестр: ИДЗ№3 «Решение задачи Коши для линейных систем дифференциальных уравнений и линейных дифференциальных уравнений операционным методом» ИДЗ№4 «Решение задачи Коши для линейных дифференциальных уравнений со специальной правой частью» Требования по оформлению ИДЗ: Формат оформления: произвольный формат (печатный или рукописный). При выборе печатного формата следует использовать редакторы  Word или Excel. При выборе рукописного формата следует оформить работу на двойных листах в клетку или листах формата А4, или в тетради (в клетку) объемом не более 12 листов. При рукописном оформлении ИДЗ следует писать аккуратно черными или синими чернилами, с обязательным использованием линейки и карандаша при выполнении чертежей. При печатном оформлении ИДЗ рекомендуется использовать шрифт Times New Roman, Calibri или Ariel; размер шрифта 12-14 пунктов, межстрочный интервал 1,15-1,5 пунктов. Каждую задачу следует оформлять на новом листе. Таблицы и рисунки следует оформлять, придерживаясь сквозного просмотра. Т.е. если в задаче предусмотрена таблица или рисунок, то они должны приведены внутри или в конце решаемой задачи. Общее приложение для все рисунков и таблиц не предусматривается. Объем ИДЗ зависит только от количества задач и/или заданий. Каждая задача должна содержать исходные данные, решение и ответ. Количество используемых источников не ограничено. Каждое ИДЗ состоит из: титульного листа (название дисциплины, ФИО, звание преподавателя, номер группы, ФИО студента, номер варианта, дата сдачи работы) списка решенных задач и/или заданий, списка используемых источников. Формат сдачи работы зависит от общих требований Университета (при очном обучении - ИДЗ сдается преподавателю в письменном виде или печатном виде; при дистанционном обучении - в печатном или электронном виде работы размещается в Moodle или отправляются преподавателю на электронную почту). ИДЗ должны быть решены и представлены на проверку в установленное преподавателем время.  Методика оценивания ИДЗ: \"неудовлетворительно\" (или 2), если верно решено меньше 60% заданий, но более 29%;  \"удовлетворительно\" (или 3), если верно решено меньше 75% заданий, но более 59%;  \"хорошо\" (или 4), если верно решено меньше 89% заданий, но более 74%;  \"отлично\" (или 5), если верно решено более 90% заданий.  В ходе проведения семинарских и практических занятий целесообразно привлечение студентов к как можно более активному участию в дискуссиях, решении задач, обсуждениях и т. д. При этом активность студентов также может учитываться преподавателем, как один из способов текущего контроля на практических занятиях.. 1 семестр: Контрольная работа «Дифференцирование и вычисление пределов» Контрольная работа «Интегрирование».   2 семестр: Контрольная работа «Ряды и ОДУ»  . Министерство науки и высшего образования Российской Федерации ФГАОУ ВО «Санкт-Петербургский государственный электротехнический университет «ЛЭТИ» имени В.И. Ульянова (Ленина)» ЭКЗАМЕНАЦИОННЫЙ БИЛЕТ № 1 Дисциплина Математический анализ    1. Функции непрерывные на отрезке. Теоремы Вейерштрасса. 2. Вычисление площади фигуры, ограниченной параметрически заданной кривой. 3. Задача. УТВЕРЖДАЮ Заведующий кафедрой                                                  С.Н. Поздняков. Введение. История формирования дисциплины. Базовые термины и теоретико-множественные операции. Логика высказываний. Стандарты обозначений. Пределы и непрерывность. Определение и свойства пределов последовательностей и функций. Замечательные пределы. Непрерывные функции и их свойства. Основные теоремы о непрерывных функциях. Дифференциальное исчисление функций одной переменной. Производная функции. Геометрический смысл производной. Правила вычисления производных. Свойства функций, дифференцируемых на промежутке. Производные высших порядков. Формула и полином Тейлора. Исследование функций с помощью производных. Интегральное исчисление функций одной переменной. Первообразная, неопределенный интеграл и их свойства. Таблица интегралов, формулы для интегрирования функций. Интегрирование рациональных дробей. Определенный интеграл и его свойства. Интеграл с переменными пределами. Формула Ньютона-Лейбница. Геометрические приложения определенного интеграла. Численное интегрирование функций. Несобственные интегралы, признаки сходимости. Преобразование Лапласа и его свойства. Дифференциальные уравнения. Классификация ДУ. Задача Коши. Ломаные Эйлера. Теорема существования и единственности решения задачи Коши решения. Уравнения с разделяющимися переменными. Линейные уравнения. Линейные дифференциальные уравнения. Операционный метод решения ЛДУ и их систем. Дифференциальное исчисление функций многих переменных. Частные производные. Дифференциал и касательная плоскость. Градиент и производная по направлению. Формула Тейлора (2-го порядка). Исследование функций нескольких переменных. Ряды. Числовые ряды и их свойства. Признаки их сходимости положительных рядов. Знакочередующиеся ряды, теорема Лейбница. Абсолютная и условная сходимость. Степенные ряды, радиус сходимости. Свойства степенного ряда Ряд Тейлора. Заключение. Перспективы применения методов математического анализа для решения прикладных задач.",
    "text_proj": "Практика в проектах по автономному транспорту от АО \"НИИАС\" РЖД. АО “НИИАС” РЖД приглашает студентов на практику в проекты по автономному транспорту: Проекты по автоматизации управления движением беспилотных поездов. Пожелания к кандидатам: уверенное владение Linux и Bash, Qt, Python, SQL базами данных. Проект по высокоточной системе позиционирования (отдел Математического обеспечения систем управления АО “НИИАС” РЖД). Пожелания к кандидатам: знания прикладной математики, алгоритмов, моделирования, Python. Технологии проекта: SLAM, фьюзинг данных от датчиково-навигационного оборудования различного типа. Проект: Автоматизированная калибровка камер. Пожелания: Знания в области Компьютерного зрения, Проективной геометрии. На базе АО «НИИАС» РЖД можно пройти производственную практику, а также написать диплом.   Сроки практики -- 1-3 месяца. Обязательно должен: знать: основны алгоритмов и структур данных уметь: работать с методами прикладной математики, с языком программирования Python владеть: основными технологиями разработки алгоритмов и программного обеспечения. Желательно должен: знать: основы компьютерного зрения, проективной геометрии.  уметь: применять основные методы компьютерного зрения и проективной геометрии.  владеть: Linux и Bash, Qt, Python, SQL базами данных. В результате получит: знания: основ позиционирования, калибровки камер, технологий беспилотного транспорта умения: применять основные методы позиционирования, калибровки камер, беспилотного транспорта опыт: работы в реальном проекте по беспилотному транспорту, разработки систем компьютерного зрения и проективной геометрии для решения реальных задач, опыт применения технологий совместной разработки . ",
    "need_match": false
  },
  {
    "id_rp": "683",
    "id_proj": "38",
    "name_rp": "Методы осуществления компьютерных атак и вирусных воздействий",
    "name_proj": "Разработка системы звукоподводной связи на основе теории хаоса",
    "text_rp": "Дисциплина обеспечивает получение знаний о моделях безопасности информационных систем, приемах проведения атак, признаках их обнаружениях, источниках информации о существующих атаках и уязвимостях вычислительных систем; формирование практических навыков по обнаружению атак и методам организации защиты информации в вычислительных системах. Практические часть курса, нацелена на изучение примеров компьютерных атак и анализ их воздействий на компьютерную систему. . Дисциплина нацелена на приобретение способностей выявлять нарушения информационной безопасности, распознавать шаблоны проведения атак, обнаруживать вредоносное программное обеспечение, оценивать уровни критичности вредоносного программного обеспечения. Дисциплина участвует в формировании общепрофессиональных компетенций, предусмотренных федеральным государственным образовательным стандартом высшего профессионального образования. Дисциплина обеспечивает получение знаний теоретических основ компьютерной вирусологии, необходимых для защиты информации в компьютерных системах и сетях. Дисциплина вырабатывает умения исследования вредоносного программного обеспечения, выявления аномальной активности в информационной системе и/или компьютерной сети, выбора программно-аппаратных средств по обеспечению информационной безопасности компьютерных систем и сетей, самостоятельной разработки в области компьютерной вирусологии и систем обнаружения атак и антивирусного обеспечения. Результатом освоения является получение практических навыков анализа методов нарушения информационной безопасности, а так же осуществление подбора необходимых для обеспечения безопасности программно-аппаратных средств. . Указываются исходные данные к ИДЗ и основные требования, предъявляемые к нему  . Указываются исходные данные к докладу и основные требования, предъявляемые к нему  . Кратко указываются исходные данные к реферату и основные требования, предъявляемые к нему ввести более 100 символов). Указываются исходные данные к кейсу и основные требования, предъявляемые к нему  . . Министерство науки и высшего образования Российской Федерации ФГАОУ ВО «Санкт-Петербургский государственный электротехнический университет «ЛЭТИ» имени В.И. Ульянова (Ленина)» ____________________________________________________________ ЭКЗАМЕНАЦИОННЫЙ БИЛЕТ № 1 Дисциплина МЕТОДЫ ОСУЩЕСТВЛЕНИЯ КОМПЬЮТЕРНЫХ АТАК И ВИРУСНЫХ ВОЗДЕЙСТВИЙ ФКТИ 1. Модели вредоносного программного обеспечения Ф. Коэна, Л. Эдельмана, вычислительная сложность проблемы обнаружения вредоносного программного обеспечения (ВрПО). 2. Формат исполняемых файлов PE. Схемы заражения исполняемых файлов формата PE. Упаковщики. Формат pdf-файлов. Схемы заражения pdf-файлов. 3. Сигнатурные методы, эвристики, методы интеллектуального анализа данных. Динамический и статический анализ файлов УТВЕРЖДАЮ Заведующий кафедрой                                                   Е. Г.  Воробьёв. Ведение. Тема 1.Модели безопасности информационных систем. Тема 1.Модели безопасности информационных систем Понятие угрозы ИБ, несанкционированного доступа, классификация атак. Модели безопасности информационных систем. Законодательные акты в области компьютерных преступлений. Тема 2. Теоретические основы компьютерной вирусологии. Математические модели вредоносного программного обеспечения Ф. Коэна, Л. Эдельмана, вычислительная сложность проблемы обнаружения вредоносного программного обеспечения (ВрПО). Тема 3. Таксономия ВрПО. Критерии оценки уровня вирусной угрозы. Подходы к описанию и наименованию ВрПО (структурированный язык описания ВрПО MAEC). Тема 4. Схемы заражения информационной системы. Загрузочные вирусы, схемы заражения памяти, файлов. Тема 5. Основные механизмы заражения файлов. Формат исполняемых файлов PE. Схемы заражения исполняемых файлов формата PE. Упаковщики. Формат pdf-файлов. Схемы заражения pdf-файлов. Тема 6. Механизмы самозащиты ВрПО от обнаружения. Полиморфизм, стелс-технологии, механизмы устойчивости ВрПО. Тема 7. Инфраструктурные атаки. Компьютерные черви, виды DDoS-атак. Математические модели компьютерных червей и эпидемий. Тема 8. Базовые механизмы проникновения в систему. Уязвимости и открытости информационной системы. Основные ошибки программирования (с примерами). Уязвимости вида переполнения буфера, SQL-инъекция, XSS-скриптинг. Тема 9. Основные стратегии обнаружения и исследования ВрПО. Сигнатурные методы, эвристики, методы интеллектуального анализа данных. Динамический и статический анализ файлов. Тема 10. Унифицированный подход к описанию информационных угроз. Структурированные языки описания ВрПО, уязвимостей, открытостей, шаблонов атак (CWE, CVE, CAPEC), системы оценки уровня критичности уязвимостей (CVSS, CWSS). Тема 11. Основные программные средства обнаружения аномальной активности в информационной системе. Антивирусное ПО, системы обнаружения вторжений, сканеры безопасности, обманные системы, системы контроля целостности, поведенческие блокираторы. Недостатки и достоинства подходов. SIEM-системы",
    "text_proj": "Разработка системы звукоподводной связи на основе теории хаоса. Создание программного и аппаратного обеспечения системы звукоподводной связи для подводных роботов.  Разработка прототипа системы.  Полевые испытания системы на водоеме в различных условиях.  Исследования свойств сигналов различного типа при прохождении водной среды. . Навыки работы в команде, базовые навыки программирования, мотивация к труду. Инструмент выдадим, работать научим. Знания о системах передачи данных в водной среде. Базовые знания в области гидроакустики. Знания о способах модуляции и демодуляции акустических сигналов, включая широкополосные и биологически инспирированные сигналы. Навыки в области проектирования электронных систем. Опыт водной экспедиции для полевых испытаний прибора. Опыт постановки и обработки результатов эксперимента. ",
    "need_match": false
  },
  {
    "id_rp": "2163",
    "id_proj": "31",
    "name_rp": "Аудиотехника",
    "name_proj": "Определение состояния автомобиля используя видео",
    "text_rp": "Дисциплина «Аудиотехника» изучает особенности слухового аппарата человека, сигналы звукового вещания и их возможные искажения. Рассматриваются акустические характеристики открытых пространств и помещений. Особое внимание уделяется электроакустическим преобразователям и системам. Даются основные понятия в области аналоговых и цифровых методов и устройств обработки звуковых сигналов. Обсуждаются методики и аппаратура контроля и измерений в аудиотехнике.. Целью дисциплины \"Аудиотехника\" является изучение основных типов и характеристик сигналов звукового вещания, видов искажений, причин их возникновения и методов снижения в различных звеньях звукового тракта, основных законов слухового восприятия; формирование умения рассчитывать основные акустические характеристики открытых пространств и помещений, создавать оптимальные акустические условия в помещениях, определять параметры озвучания и звукоусиления; получение навыка выбора оптимальных методов и разработки программ экспериментальных исследований и испытаний, проведения измерений с выбором современных технических средств и обработкой результатов в области аудиотехники и архитектурной акустики. Дисциплина \"Аудиотехника\" направлена на решение основных задач аудиотехники и архитектурной акустики: разработка, моделирование и расчет параметров звукового тракта с учетом видов искажений, причин их возникновения и методов их снижения; разработка, моделирование и расчет характеристик электроакустической аппаратуры; определение оптимальных акустических условий в помещениях. Получение знаний об основных типах и характеристиках сигналов звукового вещания, видов искажений, причин их возникновения и методов снижения в различных звеньях звукового тракта, основных законов слухового восприятия; основных акустических характеристиках открытых пространств и помещений, способах создания оптимальных акустических условий в помещениях, способах озвучения и звукоусиления. Формирование умения применять полученные теоретические знания для выбора оптимальных методов решения практических задач расчета и моделирования в области аудиотехники и архитектурной акустики. Освоение навыков применения полученных знаний для разработки различных типов электроакустической аппаратуры и проведения экспериментальных исследований и измерений с выбором современных технических средств и обработкой результатов в области аудиотехники и архитектурной акустики.. В качестве одного из элементов текущего контроля по дисциплине предусматривается доклад по теме реферата. Доклад сопровождается презентационным материалом выполненном в формате Microsoft PowerPoint. Требования к оформлению презентационного материала - согласно ГОСТ 7.32-2017 \"Межгосударственный стандарт. Система стандартов по информации, библиотечному и издательскому делу. Отчет о научно-исследовательской работе. Структура и правила оформления\". Рекомендуемый объем - 20-25 слайдов. Рекомендуемое время доклада - 10-15 минут. . В качестве одного из элементов текущего контроля по дисциплине предусматривается подготовка реферата на заданную преподавателем или выбранную студентом самостоятельно тему. Целью написания реферата является ознакомление с широкой номенклатурой устройств аудиотехники, принципами их работы, конструктивной реализацией, а также сферами применения. Структура реферата подразумевает наличие соответствующих тематических разделов. Реферат сдается преподавателю в письменной форме в сроки, установленные графиком текущего контроля. Требования к оформлению реферата - согласно ГОСТ 7.32-2017 \"Межгосударственный стандарт. Система стандартов по информации, библиотечному и издательскому делу. Отчет о научно-исследовательской работе. Структура и правила оформления\". Рекомендуемый объем реферата - 20-30 страниц, рекомендуемое количество использованных источников - 10-15. Тема: Акустика помещений  . Министерство науки и высшего образования Российской Федерации ФГАОУ ВО «Санкт-Петербургский государственный электротехнический университет «ЛЭТИ» имени В.И. Ульянова (Ленина)» ____________________________________________________________ ЭКЗАМЕНАЦИОННЫЙ БИЛЕТ № 1 Дисциплина Аудиотехника  ФИБС 1. Вещательный сигнал как случайный процесс  2. Измерительные сигналы и аппаратура   УТВЕРЖДАЮ Заведующий кафедрой                                                   К.Е. Аббакумов. Введение. Предмет дисциплины и ее задачи. Структура, содержание дисциплины, ее связь с другими дисциплинами учебного плана. Сигналы звукового вещания. Искажения звукопередачи. Вещательный сигнал как случайный процесс. Законы распределения уровней сигналов. Усилители. Регуляторы уровня. Системы шумоподавления. Частотные корректоры. Ревербераторы. Коммутаторы. Выбросы и паузы. Спек-тральные и динамические характеристики сигналов. Линейные искажения. Не-линейные искажения. Специальные виды искажений. Слух и восприятие звука. Слуховой аппарат человека. Восприятие акустических сигналов. Громкость, высота, тембр звука и их основные физические корреляты. Маскировка, нелинейность, адаптация слуха. Системы звукопередачи. Пространственный слух. Основные форматы сигналов звуковых систем. Монофония. Стереофония. Бифония. Многоканальная стереофония. Звуковые процессоры. Электромеханические преобразователи в аудиотехнике. Классификация. Электродинамический и электромагнитный преобразователи в режиме двигателя и генератора. Электростатический с внешней поляризацией и электретный преобразователи. Громкоговорители. Классификация. Основные параметры и характеристики. Электродинамический громкоговоритель прямого излучения. Типы акустического оформления. Акустические системы. Мониторы. Звуковые колонки. Рупорные громкоговорители. Микрофоны. Классификация. Основные параметры и характеристики. Микрофон как приемник звука. Ненаправленный конденсаторный микрофон. Двунаправленный ленточный микрофон. Электродинамический и конденсаторный однонаправленный микрофоны. Комбинированные и остронаправленные системы. Измерения в аудиотехнике. Виды измерений и технического контроля. Методика измерения основных параметров качества аппаратуры тракта. Дистанционные измерения и контроль. Измерительные сигналы и аппаратура. Заключение. Основные направления развития аудиотехники",
    "text_proj": "Определение состояния автомобиля используя видео. Цель работы: определять направление движения автомобиля, его остановки и старты по видеозаписи с видеорегистратора. Приложение, используя машинное обучение (или другие алгоритмы и технологии), определяет и классифицирует состояние автомобиля по видеозаписи с видеорегистратора: стоит автомобиль или движется, направление движения автомобиля (движется по прямой, вперед или назад, повернул направо/налево). Сначала сеть обучают (на имеющихся размеченных данных) и тестируют на десктопе. На телефон устанавливается пред-обученная версия (например, \"легкая\" версия tensorflow) с готовой моделью, которая производит обработку видеосигнала. Что требуется: Провести анализ имеющихся решений (state of the art); Установить выбранный фреймворк; Изучить архитектуру и возможности выбранного фреймворка, библиотек; Реализовать алгоритм классификации (предобработка данных, модель нейронной сети); Разделить имеющийся датасет (видеозаписи с размеченными состояниями автомобиля, в котором установлен видеорегистратор) на два набора: для обучения модели и для тестирования модели; Выполнить эксперименты на размеченных данных для получения метрик и на неразмеченных данных для исследования генерализации модели; Написать отчет об исследовании, подготовить презентацию. Обязательно должен: знать: Python уметь: работать с Git, использовать Open Source фреймворки и библиотеки, искать необходимые наборы данных в открытом доступе владеть: навыками изучения программного кода, документаций. Желательно должен: знать: принципы работы машинного обучения, предобработки данных уметь: реализовывать модели нейронных сетей, собирать метрики, визуализировать данные владеть: фреймворками TensorFlow или PyTorch, библиотекой OpenCV. В результате получит: знания: технологии машинного обучения, нейронные сети умения: работать с фреймворками машинного обучения опыт: работа с нейронными сетями, проведение экспериментов, подготовка отчетов и презентаций. ",
    "need_match": false
  },
  {
    "id_rp": "3490",
    "id_proj": "57",
    "name_rp": "Спецификация, проектирование и архитектура программных систем",
    "name_proj": "Стажировка в Digital Security по аудиту защищённости ПО  ",
    "text_rp": "Дисциплина «Спецификация, проектирование и архитектура программных систем» предусматривает изучение методов выявления требований, анализа функциональных и нефункциональных требований, документирования требований и управления требованиями к программным системам, обеспечивает формирование знаний об организации архитектуры программных систем и умений по проектированию программных систем с применением современных методов и средств. Рассматриваются как проблемы общего характера, возникающие в процессе проектирование программных систем, так и конкретные методы, обеспечивающие достижение оптимального качества архитектуры системы с учетом результатов анализа требований.. Целью дисциплины является получение теоретических знаний в области спецификации, проектирования и архитектуры программных систем, а также практических навыков по применению полученных знаний для решения задач профессиональной деятельности. Задачей дисциплины является приобретение знаний, умений и навыков в области; - анализа требований с использованием стандартов и систем автоматизации разработки требований; - архитектур программных систем; - проектирования программных систем. Студенты должны приобрести знания: - формальных методов, технологий и инструментов разработки программного продукта, методов выявления требований, общих стратегий и конкретных методов проектирования программных систем; - основ моделирования и анализа программных систем, разработки, спецификации и управления требованиями; - теоретических основ архитектурной и программной организации информационных систем; - концепций и стратегий архитектурного проектирования программного продукта, видов структур и архитектур программных систем, их особенностей; - состава, форм и содержания документов, разрабатываемых при проектировании программных систем. Студенты должны приобрести умения: - разрабатывать и специфицировать требования, применять методы выявления и анализа функциональных и нефункциональных требований, использовать инструментальные средства, поддерживающие разработку и анализ требований; - конструировать программное обеспечение, разрабатывать основные программные документы, проводить структурную декомпозицию программной системы на компоненты, разрабатывать статические и динамические представления архитектуры программной системы; - использовать типовые архитектурные решения при проектировании программной системы, применять шаблоны проектирования и шаблоны интеграции. Студенты должны освоить навыки: - разработки и отладки программ на алгоритмических языках программирования, навыками разработки, анализа и документирования требований; - разработки архитектуры программной системы, методами обеспечения качества архитектуры программной системы, технологиями и средствами проектирования программных систем; - использования методов и средств разработки и оформления технической документации.. Вопрос №1 Назовите подход к проектированию автоматизированных систем, основанный на использовании единой модели предметной области  1.Структурное (функционально-модульное) проектирование  2.Объектно-ориентированный подход  3.Предметно-ориентированное проектирование  Вопрос №2 Укажите модель, на основании которой должны приниматься решения при проектировании (дизайне) автоматизированной системы  1. Модель требований  2. Дизайн системы  3. Модель реализации  4. Процессная модель  Вопрос №3 Укажите метафору, соответствующую автоматизированной системе, которая предназначена для ввода, структурированного хранения и обработки данных, оптимизированной для выполнения максимального количества транзакций за короткие промежутки времени  1.Учетная система  2.Аналитическая система  3.Потоковая система  4.Моделирующая система . Экзаменационный тест формируется из вопросов тестов текущего контроля и состоит из 54 вопросов . Министерство науки и высшего образования Российской Федерации ФГАОУ ВО «Санкт-Петербургский государственный электротехнический университет «ЛЭТИ» имени В.И. Ульянова (Ленина)» ____________________________________________________________ ЭКЗАМЕНАЦИОННЫЙ БИЛЕТ № 1 Дисциплина Спецификация, проектирование и архитектура программных систем  ФКТИ 1. Требования в контексте системного проектирования.  2. UML и современные технологии.   УТВЕРЖДАЮ Заведующий кафедрой                                                   К.В. Кринкин. Введение. Место дисциплины в ООП. Рабочая программа дисциплины. Материал, выносимый на аттестацию. Формы проведения аттестации. Тема 1. Программная инженерия. Основные понятия и определения. Программная инженерия. Система. Окружение. Миссия. Заинтересованное лицо. Системный подход. Классификация информационных систем. Нормативно-методическое обеспечение. Стандарты Российской Федерации в области разработки программного обеспечения. SWEBoK. Предметно-ориентированное проектирование. Тема 2. Разработка программного обеспечения на основе моделей. Особенности программного проекта. Причины неудач в проектах. MDD-разработка. Способы описания функциональных требований. Стоимость сложности программного продукта. Валидация и верификация моделей. Тема 3. Каноническое проектирование информационной системы. Комплекс стандартов ГОСТ 34. Стадии канонического проектирования. Тема 4. Спецификация и управление требованиями. Требования в контексте системного проектирования. Требования и качество. Требования и процесс выполнения проекта. Общий процесс разработки требований. Описание и анализ требований. Разработка требований в области проблем. Разработка требований в области решений. Тема 5. Визуальное моделирование. Структурный подход. Что такое моделирование. Структурные методы анализа и проектирования программного обеспечения. Диаграммы IDEF. Диаграммы DFD. BPwin. Тема 6. Визуальное моделирование. Унифицированный язык моделирования UML. Методология анализа, проектирования и разработки программного обеспечения. Принципы объектно-ориентированной методологии разработки программного обеспечения. UML и современные технологии. Тема 7. Архитектура программных систем. Типовые архитектурные решения. Цель проектирования. Архитектура системы. Типовые решения (паттерны). Типовые решения распределенной обработки данных. Заключение. Общие выводы по курсу.",
    "text_proj": "Стажировка в Digital Security по аудиту защищённости ПО. Summ3r 0f h4ck 2022. Обучающая программа в Digital Security Digital Security приглашает на традиционную летнюю обучающую программу «Summ3r 0f h4ck». Она пройдет c 4 по 29 июля 2022 года в нашем офисе в Санкт-Петербурге. Прием заявок продлится до 1 мая (включительно) Подробности.   https://dsec.ru/about/summerofhack/                 . Обязательно должен: знать: основы информационной безопасности уметь:  программировать на C/C++ владеть: . Желательно должен: знать:  уязвимости ПО уметь:  программировать на JS, PHP, Python владеть: . В результате получит: знания:  способы поиска уязвимостей в приложениях на С\\С++  и в веб-приложениях  ( умения:  применение методов white-box и black-box, полезные трюках при reverse engineering (IDAPython, Ghidra, DBI), премудростях фаззинга приложений (KLEE, libfuzz, AFL), пентестинг веб-приложений опыт: аудита программного обеспечения. Начало стажировки. Сбор заявок на стажировку . Завершение стажировки. Защита отчетов по выполненным работам. ",
    "need_match": false
  },
  {
    "id_rp": "5981",
    "id_proj": "26",
    "name_rp": "Риторика",
    "name_proj": "Программно-аппаратное конфигурирование сети лаборатории",
    "text_rp": "Предмет «Риторика», изучаемый в высших учебных заведениях представляет собой теоретическое и практическое освоение основ ораторского искусства, приобретение навыков устной речи и непосредственная реализация их на материале конкретных ситуаций речевого общения. Программа дисциплины предусматривает лекционные занятия, на которых изучаются исторические и теоретические аспекты риторики, и практические занятия, на которых отрабатываются навыки ораторского искусства. . При изучении дисциплины обучающиеся получают теоретические знания и практические навыки, необходимые для подготовки публичного выступления и его осуществления в профессиональной деятельности. Задачи дисциплины: Освоение методики подготовки форма и содержания публичного выступления. Освоение методики работы над голосом и дикцией. Формирование умений и навыков подготовки и осуществления публичного выступления. Освоение знаний о развитии риторических традиций в современном обществе, об основных закономерностях использования жестово-мимических средств общения; взаимосвязи риторики и пиитики. Развитие умений использовать основные языковые и интонационные средства выразительности, навыков подготовки и произнесения публичного выступления. Развитие навыков презентации публичного выступления. Развитие навыков работы с голосом и дикцией. . Цель ИДЗ - сформировать навык подготовки и осуществления публичного выступления.  Планируется выполнение 5 индивидуальных домашних заданий. Студент самостоятельно выбирает тему для публичного выступления, разрабатывает его форму и содержание. Письменный вариант выступления (доклада) 3-4 страницы. Должны быть использованы источники (3-5 шт.) Критериями оценки ИДЗ являются содержательность, композиционное единство и качество текста доклада.  Выступление с докладом на 10 минут со слайдовую презентацией (10-15 слайдов). Критерии оценивания выступления: наличие чёткой структуры выступления, содержательность, ясность, логичность, соответствие нормам литературного языка, качество презентации. Шкала оценивания:  \"отлично\" - соответствие всем критериям, \"хорошо\" - соответствие 4 из 6 критериев, \"удовлетворительно\" - соответствие 3 из 6 критериев, \"неудовлетворительно\" - несоответствие критериям.. История риторики. Риторика Древней Греции и Древнего Рима. История риторики России XVII – XIX в. Риторические традиции в нашем обществе. Психотехника в системе К.С. Станиславского. Мастерство речевого взаимодействия. Различные подходы к освоению психотехники речи. Психологические особенности выступающего. Внешняя техника речи. Теоретические основы постановки речевого голоса. Методики работы над голосом. Речевые средства выразительности (звуковой диапазон, динамический диапазон, тембр голоса, темпо-ритм речи). Логика речи. Законы построения речи (правила расстановки логических пауз и ударений). Культура речи. Соблюдение норм русского языка. Мелодика русской речи. Мелодика русской речи (основные мелодические конструкции). Дикция в звучащей речи. Основные методические приемы работы над дикцией. Языковые средства выразительности. Языковые средства выразительности (тропы и риторические фигуры). Параязык (жестов – мимические средства общения). Риторика и пиитика, как взаимопроникаемые виды искусств. Риторика и пиитика, как взаимопроникаемые виды искусств. Основы русского стихосложения. Спор, дискуссия, дебаты, полемика. Теория спора. Нормы поведения участников спора. Речевое взаимодействие участников спора. ",
    "text_proj": "Программно-аппаратное конфигурирование сети лаборатории. Видео-презентация проекта https://youtu.be/uLePbMkxzZE Цель данного проекта состоит в построении и отладке программно-аппаратной системы наблюдения и отладки решений на полигоне автономного транспорта лаборатории мобильных интеллектуальных систем.  Задачи: Настройка системы управления конфигурациями Ansible на парке машин лаборатории интеллектуальных мобильных систем Разработка решения захвата видео камеры наблюдения полигона в трансляцию конференций Zoom Тестирование онлайн-курса по GDB и Valgrind Формат работы: смешанный: заочный + очный Очно в аудитории 3501 Прототипирование при отсутствии необходимости работы с оборудованием возможно выполнять дистанционно. Ориентировочно 2-3 курс Навык работы с ОС Linux (Ubuntu) Знание языка Си, основ отладки программ Умение самостоятельно находить информацию, учиться новому Умение следовать инструкции Аккуратность  Умение пользоваться отверткой Знание английского языка на уровне чтения технической документации Понимание базовых принципов организации ЛВС. Плюсом будет любой опыт работы с библиотеками автоматизации настройки и любой опыт наладки систем видеофиксации. . В результате получит: знания о устройстве систем машинного зрения и систем автоматизированной постановки эксперимента для задач автономного транспорта, умения настройки и отладки реальных роботехнических систем, опыт участия в передовом исследовательском проекте. . Тестовое задание проекта. Составить docker-compose файл, позволяющий запустить 2 докер-контейнера, объединенные в одну локальную сеть (изолированную от сети хост-машины)   Программа-клиент, запущенная в одном контейнере должна передавать строку “docker test #K” по TCP программе-серверу, запущенной во втором контейнере. Программа-сервер должна печатать полученные данные в лог, доступный командой docker log.   #K - порядковый номер сообщения (0, 1, 2, …) Строку передавать раз в секунду   Способ реализации программ клиента и сервера может быть любым (стандартные утилиты / самостоятельно написанные программы / …)   В качестве решения прислать ссылку на репозиторий с docker-compose файлом и инструкцией по запуску. ",
    "need_match": false
  },
  {
    "id_rp": "6075",
    "id_proj": "41",
    "name_rp": "Методы оптимизации",
    "name_proj": "Разработка подводного телеуправляемого робота на гусеничном шасси",
    "text_rp": "Рассматривается классификация задач и методов оптимизации, постановка задачи оптимизации, математические модели основных классов оптимизационных задач. Изучаются классические методы отыскания экстремумов функций и численные методы минимизации функций без ограничений. Изучаются методы решения общих задач линейного программирования и транспортных задач линейного программирования по критерию стоимости. Рассматриваются усложненные постановки транспортных задач в матричной постановке, а также транспортные сети и другие основные задачи на графах. Изучаются условия оптимальности и численные методы оптимизации задач нелинейного программирования с ограничениями. Рассматриваются решения динамических оптимизационных задач методом динамического программирования.. Целью освоения дисциплины \"Методы оптимизации\" является приобретение студентами теоретических знаний в области математического аппарата формализованных оптимизационных задач и алгоритмов их решения и формирование умений и практических навыков для решения практических задач. Задачами изучения дисциплины являются: - приобретение базовых знаний по методам и алгоритмам решения оптимизационных задач; - формирование умений и практических навыков использования методов и алгоритмов решения оптимизационных задач; - освоение студентами навыков применения методов и алгоритмов оптимизации в избранной сфере деятельности. Получение студентами знаний об основных классах оптимизационных задач и методах решения экстремальных задач в нормированных пространствах, рассмотрение возможностей и путей использования методов оптимизации в избранной сфере деятельности. Развитие у студентов умений создавать математические модели для оптимизационных задач разных классов и использовать аналитические и численные методы при решении оптимизационных задач. Формирование у студентов практических навыков решения оптимизационных задач в избранной сфере деятельности.. . Министерство науки и высшего образования Российской Федерации ФГАОУ ВО «Санкт-Петербургский государственный электротехнический университет «ЛЭТИ» имени В.И. Ульянова (Ленина)» ____________________________________________________________ ЭКЗАМЕНАЦИОННЫЙ БИЛЕТ № 1 Дисциплина Методы оптимизации   ФКТИ 1. Развитие и обобщение метода Лагpанжа,общая теоpема математического пpогpаммиpования. 2. Метод Фибоначчи,метод золотого сечения. 3. Задача. УТВЕРЖДАЮ Заведующий кафедрой                                                   В.В.Цехановский. Введение. Предмет курса и его задачи. Краткий исторический обзор. Значение и роль методов оптимизации в задачах построения систем управления, а также в области совершенствования экономических процессов в народном хозяйстве. Структура и содержание курса, его связь с другими дисциплинами учебного плана и место в подготовке дипломированного специалиста. Формализованная постановка задачи оптимизации. Классификация задач и методов оптимизации. Система обозначений. Выпуклые множества. Выпуклые функции. Постановка задачи оптимизации. Математические модели основных классов оптимизационных задач. Примеры задач оптимизации. Общие методы линейного программирования. Постановка общей задачи линейного программирования. Каноническая форма задачи. Основные свойства задачи линейного программирования и области ее определения. Геометрический метод решения задач линейного программирования. Прямая и двойственная задачи. Теоремы двойственности, свойства взаимно двойственных задач, критерий оптимальности плана задачи линейного программирования. Общая схема решения задачи линейного программирования. Признак оптимальности опорного плана. Базисные и допустимые базисные решения. Модифицированные жордановы исключения. Алгебраические основы метода последовательного улучшения плана. Алгоритм метода. Вырожденность. Отыскание начальных опорных планов, метод искусственного базиса. М-метод. Двойственный метод последовательного улучшения плана. Другие методы. Сравнительная оценка методов решения общей задачи линейного программирования. Задачи линейного программирования транспортного типа. Понятие о транспортной задаче линейного программирования по критерию стоимости в матричной постановке. Циклы в транспортной матрице. Свойства транспортной задачи. Связь между переменными задачи. Распределительный метод. Метод потенциалов. Методы построения первого допустимого базисного решения транспортной задачи. Транспортные задачи с ограничениями на пропускные способности. Другие усложненные постановки транспортных задач и методы их решения, распределительные задачи. Транспортные задачи по критерию времени. Транспортные сети и другие задачи на графах. Основные понятия о графах и сетях. Сетевая модель транспортной задачи. Модель с промежуточными пунктами. Свойства потока в сети. Задача о максимальном потоке. Метод Форда-Фалкерсона. Кратчайшие цепи и потоки минимальной стоимости. Линейная сетевая задача. Методы решения сетевых задач. Классические методы отыскания экстремума функций. Минимизация одномерных и многомерных функций без ограничений. Необходимые и достаточные условия экстремума. Классическая задача условной оптимизации. Стратегические седловые точки. Численные методы минимизации функций без ограничений. Понятие о численных методах оптимизации. Методы поиска экстремума функций одной переменной: одномерный пассивный поиск; прямой последовательный поиск - методы дихотомии, Фибоначчи, золотого сечения, квадратичной аппроксимации; методы одномерной оптимизации с использованием производных. Оптимизация многомерных функций: эвристические методы прямого поиска и сопряженных направлений; градиентные методы и методы второго порядка и сопряженных градиентов. Оценка скорости сходимости различных методов. Задачи нелинейного программирования с ограничениями. Понятие о нелинейных задачах математического программирования. Условия регулярности. Теорема Куна-Таккера. Метод неопределенных множителей Лагранжа для задач с ограничениями общего вида. Общая теорема математического программирования, необходимые и достаточные условия оптимальности. Численные методы решения задач нелинейного программирования с ограничениями. Метод кусочно-линейной аппроксимации. Квадратичное программирование. Методы решения задач квадратичного программирования. Градиентные методы: метод проекции градиента, метод допустимых направлений. Методы штрафных и барьерных функций. Методы случайного поиска. Динамическое программирование. Постановка задачи оптимального управления. Многошаговые процессы, принцип оптимальности динамического программирования. Метод динамического программирования для дискретных систем. Метод динамического программирования для непрерывных систем. Решение задач распределения ресурсов методом динамического программирования. Решение комбинаторных задач методом динамического программирования. Динамическое программирование в задачах управления. Заключение. Роль вычислительной техники и специализированного программного обеспечения для решения оптимизационных задач.",
    "text_proj": "Разработка подводного телеуправляемого робота на гусеничном шасси. Разработка программного и аппаратного обеспечения подводной роботизированной системы на основе гусеничной платформы с манипулятором. Создание телеуправляемого водонепроницаемого шасси. Разработка сенсорной системы робота. Разработка подсистемы управления шасси и манипулятором. Полевые испытания робота на водоеме. Основы Arduino IDE, коммуникабельность, владение английским языком на уровне Basic, общая техническая грамотность. Знание цифровой и аналоговой схемотехники, выносливость, целеустремленность. Знания в области дизайна подводных роботизированных систем. Практические навыки проектирования комплексных объектов робототехники. Опыт разработки программно-аппаратных комплексов общего назначения Незабываемый опыт полевой экспедиции на водоемы нашей необъятной Родины с погружениями за застрявшим роботом. ",
    "need_match": false
  },
  {
    "id_rp": "5663",
    "id_proj": "47",
    "name_rp": "Тестирование и сопровождение программного обеспечения",
    "name_proj": "Анализ и обучение рекомендательных моделей для формирования образовательных траекторий",
    "text_rp": "Цели дисциплины охватывают ряд направлений, связанных с планированием тестирования, выявления рисков продукта и проекта, составления критериев входа в тестирование и выхода, управления инцидентами, разработку тестов, выбор методов тестирования, осуществление тестирования, составление итоговой отчетности по тестированию. . Цель учебной дисциплины заключается в изучении усовершенствования техники логического тестирования и отладки программ, а также применении полученных навыков в тестировании и отладке программ, формирование у студентов профессиональных компетенций, связанных с использованием теоретических знаний и практических навыков в области обеспечения качества программного обеспечения. Задачи дисциплины: 1). Изучение основных процессов и видов тестирования, моделей разработки ПО, процессов сопровождения ПО, получение знаний о методах управления процессом сопровождения, методах организации работы при решении задач сопровождения ПО. 2). Формирование умений планировать тестирование, выявлять риски продукта и проекта, составлять критерии входа в тестирование и выхода, управлять инцидентами, разрабатывать тесты, выбирать методы тестирования, осуществлять тестирование, составлять итоговую отчетность по тестированию, формулировать требования к уровням сопровождения ПО, использовать международные и отечественные стандарты в области сопровождения ПО, использовать нормативные правовые документы при сопровождении ПО. 3). Освоение навыков разработки тестов (эквивалентное разбиение, анализ граничных значений, тестирование таблицы решений, тестирование таблицы переходов, тестирование по сценариям использования), интегрированной средой разработки и различными инструментами тестирования и планирования тестирования. Знания: - об основных методах и средствах эффективного анализа функционирования программного обеспечения; - об основных видах работ на этапе сопровождения программного обеспечения; - об основных принципах контроля конфигурации и поддержки целостности конфигурации программного обеспечения; - о средствах защиты программного обеспечения в компьютерных системах. Умение: - подбирать и настраивать конфигурацию программного обеспечения компьютерных систем; - использовать методы защиты программного обеспечения компьютерных систем; - проводить инсталляцию программного обеспечения компьютерных систем; - производить настройку отдельных компонентов программного обеспечения компьютерных систем; - анализировать риски и характеристики качества программного обеспечения. Навыки: - настройки отдельных компонентов программного обеспечения компьютерных систем; - выполнения отдельных видов работ на этапе поддержки программного обеспечения компьютерной системы.. Введение. Место тестирования в жизненном цикле разработки программного обеспечения. Основные понятия дисциплины. Роль тестирования в разработке программного обеспечения, сопровождении и функционировании программного обеспечения. Планирование и управление тестированием. Анализ и проектирование тестов. Природа сопровождения. Потребность в сопровождении. Приоритет стоимости сопровождения. Категории сопровождения. Тестирование в модели ЖЦ. Уровни и Типы тестирования. Альфа тестирование, бета тестирование, компонентное тестирование. Итерационное тестирование. Системное тестирование. Приемочное тестирование. Тестирование методом черного ящика, покрытие кода, функциональное тестирование, тестирование взаимодействия, нагрузочное тестирование, тестирование восстановления, тестирование производительности. Тестирование переносимости, тестирование надежности, тестирование безопасности, стресс-тестирование, структурное тестирование, тестирование удобства использования, тестирование методом белого ящика. Анализ влияния, тестирование в период сопровождении. Формальное и неформальное рецензирование. Критерий входа, инспекция, метрика, модератор, равноправный анализ, эксперт, секретарь, технический анализ, сквозной контроль. Действия (шаги) формального рецензирования. Роли и обязанности. Типы рецензирований. Факторы успешного проведения. Компилятор, коэффициент сложности, поток управления, поток данных, статистический анализ. IEEE 1028] IEEE Std 1028 (2008) IEEE Standard for Software Reviews and Audits. Методы проектирования тестов. Жизненный цикл дефекта. Типы дефектов на разных фазах тестирования. Управление дефектами. Баг-трэкинговые системы. Тест-кейсы. Спецификация тестовых сценариев, проектирование теста, расписание выполнения тестов, спецификация процедуры тестирования, автоматизированный сценарий тестирования, трассируемость. Разработка тестов методом черного ящика, разработка тестов методом белого ящика, метод создания тестов на основе опыта, метод разработки тестов на основе спецификации, структурный метод разработки тестов. Анализ граничных значений, тестирование таблицы решений. Эквивалентное разбиение, тестирование таблицы переходов, тестирование по сценариям использования. Покрытие кода, покрытие альтернатив, покрытие операторов, тестирование на основе структуры. Исследовательское тестирование, атака (на недочеты). Выбор методов тестирования. Управление тестированием. Тестировщик, руководитель тестирования, менеджер тестирования. Организация и независимость тестирования. Подход к тестированию, стратегия тестирования. Планирование тестирования. Управление конфигурацией. Управление версиями. Риски продукта, риски проекта, ориентированное на риски тестирование. Инструмент покрытия, инструмент отладки, инструмент динамического анализа, инструмент управления инцидентами, инструмент нагрузочного тестирования, инструмент моделирования, инструмент мониторинга, инструмент тестирования производительности, эффект зондирования, инструмент управления требованиями, инструмент рецензирования, средство защиты, инструмент статистического анализа, инструмент стрессового тестирования, тестовый компанатор, инструмент подготовки тестовых данных, инструмент проектирования тестов, тестовая обвязка, инструмент выполнения тестов, инструмент управления тестированием, инструмент интегрированной среды модульного тестирования. Ключевые вопросы сопровождения программного обеспечения. Технические вопросы. Управленческие вопросы. Оценка стоимости сопровождения. Измерения в сопровождении программного обеспечения. Процессы сопровождения. Работы по сопровождению. Техники сопровождения. Реинжиниринг. Обратный инжиниринг. Введение в ITIL. Что такое ITIL, другие существующие методологии. Управление ИТ-сервисами (IT Service Management). Жизненный цикл сервиса. Ролевая модель, понятие Роли. RACI-модель. Стратегия сервиса и проектирование сервиса. Ценность управления услугами. Понятия и определения. Формирование стратегии. Оценка рисков. Управление финансами. Управление спросом. Принцип 4Р. 5 составляющих сервисного дизайна. Управление уровнем услуг. Управление каталогом услуг. Управление мощностями. Управление доступностью. Управление непрерывностью. Управление информационной безопасностью. Управление поставщиками. Преобразование сервиса и Эксплуатация сервиса. Достижение баланса. Управление инцидентами. Управление событиями. Управление запросами. Управление проблемами. Управление доступом. Функции. Сервис Деск (Service Desk). Service Desk: Роль. Service Desk: Организационная структура. Service Desk: Критерии построения. Service Desk: Возможные проблемы внедрения. Service Desk: Метрики. Техническое управление. Управление операционной деятельностью ИТ. Управление приложениями. Постоянное улучшение сервисов. Заключение. Цели CSI. Роль постоянного улучшения сервисов. Модель PDCA. Метрики. 7-ми ступенчатый процесс улучшения сервиса. Развитие задач тестирования и сопровождения ПО.",
    "text_proj": "Анализ и обучение рекомендательных моделей для формирования образовательных траекторий. Обучаемые рекомендательные модели должны формировать рекомендации выбору обучающемуся на всем периоде его обучения, начиная от выбора направления при поступлении и выбора вакансии при трудоустройстве или смены работы. При этом выбор не ограничивается только учебными модулями. Он связан выбором проектов, преподавателей, участием в различных мероприятиях, курсов ДПО и т.п. Результаты выбора формируют цифровой след обучающегося. На правильность выбора влияет множество факторов, включая цифровой след и имеющуюся цель (например, занять ту или иную должность в компании). Для того чтобы учесть все эти факторы разрабатывается рекомендательная машина, которая помогает обучающемуся сделать правильный выбор. В данном проекте требуется выполнить:  анализ имеющихся данных,  выбрать наиболее важные признаки,  выполнить предобработку данных,  выбрать модель машинного обучения для формирования рекомендаций,  обучить и оценить полученную модель повысив ее качество до необходимого предела . Обязательно должен: знать: модели и алгоритмы машинного обучения уметь: анализировать данные (выявлять зависимости между признаками, их значимость, пропущенные значения, выбросы и т.п.) владеть: инструментами машинного обучения. Желательно должен: знать: методы преобразования данных и улучшения их качества, особенности методов машинного обучения уметь: очищать данные и повышать их качество владеть: инструментами машинного обучения: scikit-learn, panda, PyTourch, TensorFlow  и др. В результате получит: знать: методы преобразования данных и улучшения их качества, особенности методов машинного обучения уметь: очищать данные и повышать их качество владеть: инструментами машинного обучения: scikit-learn, panda, PyTourch, TensorFlow  и др. Написать мотивационное письмо. Просьба описать свои знания и навыки в форме краткого резюме, а также указать почему именно вы выбрали данный проект. ",
    "need_match": false
  }
]