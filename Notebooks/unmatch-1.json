[
  {
    "id_rpd": 5105,
    "id_proj": 11,
    "name_rp": "Дискретная математика и теоретическая информатика",
    "name_proj": "Анализ динамики COVID-19 в России",
    "text_rp": "Разделы современной математики, имеющие приложения в сфере информационных и компьютерных технологий, являются необходимыми при подготовке специалистов инженерных специальностей. Первый из них посвящен тем аспектам теории чисел, которые лежат в основе криптографических алгоритмов и механизмов шифрования. Во втором наряду с классическими вопросами теории многочленов рассматриваются алгоритмы, важные для компьютерной математики. Третий раздел объединяет классические комбинаторные идеи и их обобщения с прикладной проблематикой, в том числе, генерированием комбинаторных объектов, кодированием. Обсуждается техника работы с производящими функциями. Последний раздел посвящен дискретной теории вероятностей.. Формирование достаточно высокой математической культуры является основной целью дисциплины. Для этого необходимо, познакомить студентов с основными понятиями, методами и алгоритмам работы с дискретными объектами, развить логическое мышление, привить навыки использования математических методов и основ математического моделирования в практической деятельности. Методы и алгоритмы работы с дискретными объектами, являясь предметом изучения дисциплины, участвуют в развитии логического мышления и формировании навыков использования математических методов и основ математического моделирования в практической деятельности. В рамках реализации цели решаются учебные задачи дисциплины: - развить логическую культуру мышления студента; - развить способность обосновывать свои суждения и выбор метода решения возникающих задач; - сформировать навыки построения моделей и проведения расчетов для дискретных структур; - научить студентов применять основные математические методы, используемые при моделировании реальных систем; - выработать у студентов методологию математического подхода к анализу естественно-научных задач и проблем из других областей; - выработать у студентов способность создать математическую модель рассматриваемого объекта и провести ее детальное исследование с анализом результатов. В результате изучения дисциплины студенты должны приобрести знания по следующей тематике: 1. Простые числа и методы факторизации. 2. Различные позиционные системы счисления ( p-ичную, факториальную, смешанную). 3. Алгоритмы работы с длинными числами в p-ичной системе счисления. 4. Алгоритм быстрого возведения в степень в кольце вычетов. 5. Алгоритм Евклида в различных формах и вариациях. 6. Конечные и бесконечные цепные дроби. Разложение иррациональности в цепную дробь 7. Китайскую теорему об остатках, свойства функции Эйлера, теорему Эйлера. 8. Понятие примитивного многочлены и теоремы о приводимости и неприводимости многочленов над полем рациональных чисел, полем вычетов. 9. Алгоритм разложения на свободные от квадратов множители. 10. Основные комбинаторные конструкции и приемы. 11. Понятие производящей функции. Однородные и неоднородные рекуррентные уравнения. В результате изучения дисциплины студенты должны приобрести следующие умения: 1. Выполнять действия в различных системах счисления и переходить от одного представления к другому. 2. Преобразовывать алгоритмы действий с длинными числами в p-ичной системе счисления в алгоритмы действий в других позиционных системах счисления. 3. Использовать алгоритм Евклида для нахождения НОД, сокращения дробей, решения диофантовых уравнений, нахождения обратного для классов вычетов, (разлагать в не-прерывную дробь). 4. Восстанавливать число по приведенной системе остатков. 5. Вычислять значения функции Эйлера. 6. Использовать теорему Эйлера для возведения в степень на классах вычетов. В результате изучения дисциплины студенты должны приобрести навыки работы с алгоритмами работы с целыми числами, классами вычетов, многочленами, кодирования (RSA, Хаффмена, полиномиальным).. В процессе обучения по дисциплине « Дискретная математика и теоретическая информатика » студент обязан выполнить Индивидуальное домашнее задание (ИДЗ). Задачи ИДЗ охватывают весь спектр тематики, рассматриваемой в семестре, и содержит задачи на: применение целочисленных алгоритмов, применение модульной арифметики; применение полиномиальных алгоритмов, построение элементарных систем шифрования, использование комбинаторики и производящих функций. Требования по оформлению ИДЗ: Формат оформления: произвольный формат (печатный или рукописный). При выборе печатного формата следует использовать редакторы  Word или Excel. При выборе рукописного формата следует оформить работу на двойных листах в клетку или листах формата А4, или в тетради (в клетку) объемом не более 12 листов. При рукописном оформлении ИДЗ следует писать аккуратно черными или синими чернилами, с обязательным использованием линейки и карандаша при выполнении чертежей. При печатном оформлении ИДЗ рекомендуется использовать шрифт Times New Roman, Calibri или Ariel; размер шрифта 12-14 пунктов, межстрочный интервал 1,15-1,5 пунктов. Каждую задачу следует оформлять на новом листе. Таблицы и рисунки следует оформлять, придерживаясь сквозного просмотра. Т.е. если в задаче предусмотрена таблица или рисунок, то они должны быть приведены внутри или в конце решаемой задачи. Общее приложение для все рисунков и таблиц не предусматривается. Объем ИДЗ зависит только от количества задач и/или заданий. каждая задача должна содержать исходные данные, решение и ответ. Количество используемых источников не ограничено. Каждое ИДЗ состоит из: титульного листа (название дисциплины, ФИО, звание преподавателя, номер группы, ФИО студента, номер варианта, дата сдачи работы) списка решенных задач и/или заданий, списка используемых источников. Формат сдачи работы зависит от общих требований Университета (при очном обучении - ИДЗ сдается преподавателю в письменном виде или печатном виде; при дистанционном обучении - в печатном или электронном виде работы размещается в Moodle или отправляются преподавателю на электронную почту). Примерный вариант ИДЗ по дисциплине \"Дискретная математика и теоретическая информатика\" 1. Решить диофантово уравнение 5658 x + 6325 y = 161  2. Найти наименьшее натуральное число x , удовлетворяющее условиям x ≡ 6 mod 36; x ≡ 5 mod 11; x ≡ 6 mod 19; x ≡ 17 mod 23;  3. Найти остаток от деления 231119 на 44.  4. По формуле Лагранжа найти многочлен p не выше 4-ой степени, удовлетворяющий условиям: p ( − 2) = 18; p ( − 3) = 32; p (2) = − 38; p ( − 4) = 10; p ( − 1) = 4; 5. Найти рациональные корни: x 4 − 5 x 3 − 6 x 2 + 7 x − 2  6. Вычислить 7 / 37 в кольце вычетов по модулю 55.  7. Найти представление рационального числа 324/247 непрерывной дробью.  8. Найти остаток от деления многочлена x \\(^5\\)  + 2 x \\(^3\\)  + x \\(^2\\)  + 2 x + 1 на x \\(^3\\)  + x \\(^2\\)  + x + 1 в кольце Z / 3Z[ x ]. 9. Среди 25 целых чисел, 6 кратно 11, 16 кратно 3, 2 кратно 121, 2 кратно 33, 1 кратно 363. Определить, сколько среди них кратно 11 или 3, но не кратно 121.  10. Все перестановки 7 чисел (1;2;3;4;5;6;7) упорядочены в лексикографическом порядке. Какой по счету идет перестановка 5274631?  11. С помощью алгоритма Хаффмана построить код Шеннона-Фэно для текстового сообщения, состоящего из символов “щ”, “ъ”, “ы”, “ю”, “ь”, “э” с частотами соответственно 43, 42, 81, 11, 94, 17.  14. а) Представьте √ 142 в виде периодической цепной дроби; б) вычислите ее с точностью до ε =  \\(10^{-4}\\).  15. Русское слово из четырех букв закодировано при помощи алгоритма RSA открытым ключом ( e = 7 , m = 33). Шифрованное сообщение имеет вид (12; 25; 13; 29). Подберите закрытую часть ключа и прочитайте исходное слово. Буквам русского алфавита соответсвуют числа в диапазоне от 2 до 32 (исключены буквы “e” и “ъ”).   .   Примерные вопросы и варианты практических заданий заданий для коллоквиумов по темам \"Основные понятия комбинаторики \" и \"Арифметика многочленов\" Вопросы по теме \" Основным понятиям комбинаторики \"   Вопросы по теме \" Арифметика многочленов \"   Практические задания по теме \" Арифметика многочленов \" 1. Пользуясь схемой Горнера, выполните деление с остатком:   2. Пользуясь схемой Горнера, разложить многочлен f (x) по степеням x - x0 :   3. Пользуясь схемой Горнера, найти кратность корня x0 многочлена f (x) :    . Министерство науки и высшего образования Российской Федерации ФГАОУ ВО «Санкт-Петербургский государственный электротехнический университет «ЛЭТИ» имени В.И. Ульянова (Ленина)» ____________________________________________________________ ЭКЗАМЕНАЦИОННЫЙ БИЛЕТ № ___ Дисциплина Дискретная математика и теоретическая информатика Задача 1. 1.1. После некоторого элементарного шага бинарного алгоритма Евклида нахождения НОД были получены два числа 1011001 и 100110001. Какими могли быть числа непосредственно перед выполнением этого шага?  1.2. N=14 M=49*1024^k+14. Сколько ‘элементарных шагов сделает бинарный алгоритм Евклида для чисел N и M в зависимости от k?. (другая версия N=3*4^n M=5*8^m) 1.3. N=1 M=3*2^k+5*2^n Сколько шагов сделает алгоритм для этих чисел? Задача 2. 2.1. Привести пример многочлена P(x), который не имеет многочленов-делителей первой степени ни над Q, ни над Z2, ни над Z3. Ответ обосновать. 2.2. Привести пример многочлена P(x), который дает разное число неприводимых множителей при разложении над Q, Z2 и Z3. Ответ обосновать. 2.3. Привести пример двух многочленов P(x) и Q(x), таких что разложение многочлена M(x)=P(x)Q(x) на свободные от квадратов множители даст другой состав множителей чем разложение P(x) и Q(x) независимо. Ответ обосновать. Задача 3. 3.1. На отрезке от 999 до 1999 найдите два разные числа с одинаковым значением функции Эйлера. 3.2. Найдите количество чисел, взаимно простых с 2000 на отрезке от 999 до 1999. 3.3. Найдите количество неотрицательных решений уравнения НОД(x; 21^20)=1, не превышающих 1999. УТВЕРЖДАЮ Заведующий кафедрой                                                  С.Н. Поздняков. Введение. История формирования дисциплины. Значение дисциплины в моделировании. Целочисленные алгоритмы. НОД, простые числа. Решето Эратосфена. Алгоритмы факторизации (метод пробных делителей и метод Ферма). Алгоритм Евклида, бинарный алгоритм. Обобщенный алгоритм Евклида. Анализ алгоритма Евклида, числа Фибоначчи. Диофантовы уравнения. Разложение числа в цепную дробь. Свойства и вычисление подходящих дробей. Бесконечные цепные дроби. Наилучшие приближения. Модульная арифметика. Арифметика и свойства сравнений. Линейные сравнения. Китайская теорема об остатках. Система остаточных классов (RNS). Функция Эйлера и ее свойства. Теорема Эйлера-Ферма. Быстрое возведение числа в степень в кольце. Система шифрования RSA. Применение теоремы Эйлера в криптографии. Система шифрования RSA. Электронная подпись. Электронные деньги. Простейшие атаки на систему RSA. Комбинаторика и производящие функции. Алгоритм Хаффмана. Лексикографический и антилексикографический порядок. Генерация k - элементных подмножеств. Перечислительная комбинаторика. Код Грея. Перечисление перестановок. Разбиения чисел. Принцип включения-исключения. Задача о беспорядках. Производящие функции. Решение однородного линейного рекуррентного уравнения. Частные решения. Решение неоднородного линейного рекуррентного уравнения. Арифметика многочленов. Арифметика многочленов. Алгоритм Евклида и китайская теорема для многочленов. Интерполяционная формула Лагранжа. Полиномиальное кодирование. Элементы дискретной теории вероятностей. Основные определения, условные вероятности и формула Байеса. Случайные величины. Математическое ожидание и дисперсия. Схема Бернулли.",
    "text_proj": "Анализ динамики COVID-19 в России. ·       Web-приложение для отображения динамики различных характеристик распространения COVID-19 в России. ·       Приложение должно отображать различные характеристики, как исходные, так и производные, вычисленные приложением. Так же иногда полезно иметь возможность наложить несколько характеристик друг на друга. ·       Примеры исходных характеристик: динамика новых случаев, динамика выздоровлений. Примеры производных характеристик: разница между новыми случаями и выздоровлениями (больше людей заболевает или больше выздоравливает - растёт или уменьшается нагрузка на систему здравоохранения). Команда Frontend разработчик Backend разработчик iOS/Android разработчик. Как таковых обязательных требований нет. Смотрите желательные. . Технологический стек Frontend Javascript / typescript; фреймворки на выбор: React + Redux, Vue, Angular. Backend Java / Kotlin; Spring framework. C#; WebAPI, EntityFramework или Dapper. Mobile (опционально) iOS/Android приложение для отображения различных графиков. В результате получит: знания: разовьете свои знания по указанным технологиям опыт: работа в команде по методологии SCRUM, распределенной разработке, общее понимание коммерческой разработки Потенциальное трудоустройство . ",
    "need_match": false
  },
  {
    "id_rpd": 5059,
    "id_proj": 20,
    "name_rp": "Статистика случайных процессов",
    "name_proj": "Построение аналитического решения, включая корпоративное хранилище данных в рамках проектов по внедрению биллинговых систем и связанных с ними дополнительных систем",
    "text_rp": "Изучаются теоретические основы случайных процессов, исследуются различные типы случайных процессов. Исследуемые процессы рассматриваются как математические модели явлений, встречающихся при решении прикладных инженерных задач. Для некоторых типов процессов применяются статистические методы их обработки и исследуются алгоритмы решения инженерных задач в рамках предложенных математических моделей.. Цель дисциплины - приобретение знаний о теории случайных процессов, включая знания областей применения статистических методов к случайным процессам и освоение навыков использования принципов и основных современных методов решения задач управления в технических системах. Основные задачи дисциплины направлены на овладении статистическими понятиями, связанными со случайными процессами; формирование навыков работы со случайными моделями в прикладных задачах, применения статистических методов для оценивания характеристик случайных процессов, построения стохастических моделей и проведения соответствующих расчетов. Знания методов исследования, свойств и областей приложения основных типов случайных процессов, а также методов статистического анализа случайных процессов;. Умения применять статистические методы к математическим моделям явлений, описываемых случайными процессами, и строить вероятностные модели прикладных задач в виде определенных случайных процессов;. Навыки использования статистических методов при решении прикладных задач. . В процессе обучения по дисциплине «Статистика случайных процессов» студент обязан выполнить индивидуальные домашние задания (ИДЗ). Задачи ИДЗ охватывают весь спектр тематики, рассматриваемой в семестре, и содержит задания на: ИДЗ№1 Случайные процессы и конечномерные распределения, ИДЗ№2 Статистическое оценивание; ИДЗ№3 Стохастические дифференциальные уравнения; ИДЗ№4 Моделирование марковских последовательностей. Требования по оформлению ИДЗ: Формат оформления: произвольный печатный формат. При оформлении ИДЗ следует использовать текстовые редакторы, электронные таблицы, результаты расчетов в математическом пакете следует вставлять в отчет в виде копии экрана. При оформлении ИДЗ рекомендуется использовать стандартные шрифты редакторов (например, Times New Roman, Calibri, Ariel); размер шрифта 12-14 пунктов, межстрочный интервал 1,15-1,5 пунктов. Каждую задачу следует оформлять на новом листе. Таблицы и рисунки следует оформлять, придерживаясь сквозного просмотра. Т.е. если в задаче предусмотрена таблица или рисунок, то они должны быть приведены внутри или в конце решаемой задачи. Общее приложения для рисунков и таблиц не предусматривается. Объем ИДЗ зависит только от количества задач и/или заданий. Каждая задача должна содержать исходные данные, решение и ответ. Количество используемых источников не ограничено, решение должно производиться в одном из математических пакетов. Каждое ИДЗ состоит из: титульного листа (название дисциплины, ФИО, звание преподавателя, номер группы, ФИО студента, номер варианта, дата сдачи работы) списка решенных задач и/или заданий, списка используемых источников. Формат сдачи работы зависит от общих требований Университета (при очном обучении - ИДЗ сдается преподавателю в письменном виде или печатном виде; при дистанционном обучении - в печатном или электронном виде работы размещается в Moodle или отправляются преподавателю на электронную почту). ИДЗ должны быть решены и представлены на проверку в установленное преподавателем время. . Примерные вопросы к коллоквиуму: Тема коллоквиума: Основные модели случайных процессов и способы их описания. 1) Роль вероятностно-статистических методов в математических и естественнонаучных исследованиях.  2) История развития теории случайных процессов.  3) Задание распределения случайного процесса конечномерными распределениями. Тема коллоквиума: Методы моделирования траекторий случайных процессов. 1)  Моделирование марковских последовательностей.  2) Моделирование винеровского процесса.  3) Моделирование гауссовских стационарных процессов.  4) Моделирование процесса Пуассона.  5) Моделирование точечных пуассоновских процессов. Министерство науки и высшего образования Российской Федерации ФГАОУ ВО «Санкт-Петербургский государственный электротехнический университет «ЛЭТИ» имени В.И. Ульянова (Ленина)» ____________________________________________________________ ЭКЗАМЕНАЦИОННЫЙ БИЛЕТ № 1 Дисциплина Статистика случайных процессов  ФКТИ 1. Точечный пуассоновский процесс.  2. Замена переменной в стохастическом интеграле, формула Ито.  3. Задача. УТВЕРЖДАЮ Заведующий кафедрой                                                   С.Н.Поздняков. Введение. Теория случайных процессов. Исторический обзор. Основные модели случайных процессов и способы их описания. Роль вероятностно-статистических методов в математических и естественнонаучных исследованиях. История развития теории случайных процессов. Задание распределения случайного процесса конечномерными распределениями. Элементы спектральной теории случайных процессов с элементами оценивания характеристик процессов. Стохастический интеграл от неслучайной функции. Спектральное представление. Разложение Вольда. Экстраполяция, интерполяция, фильтрация. Статистическое оценивание среднего ковариационной функции и спектральной плотности случайного процесса. Периодограмма. Задача фильтрации в гауссовском случае, линейный фильтр Кальмана-Бьюси. Стохастический интеграл и диффузионные процессы. Общее определение стохастического интеграла по Винеровскому процессу. Определение и свойства интеграла Ито. Стохастический интеграл, как функция верхнего предела. Замена переменной в стохастическом интеграле, формула Ито. Стохастические дифференциальные уравнения. Теорема существования и единственности решения. Диффузионный процесс. Методы моделирования траекторий случайных процессов. Моделирование марковских последовательностей. Моделирование винеровского процесса. Моделирование гауссовских стационарных процессов. Моделирование процесса Пуассона. Моделирование точечных пуассоновских процессов. Заключение. Современные области применения статистических методов к случайным процессам.",
    "text_proj": "Построение аналитического решения, включая корпоративное хранилище данных в рамках проектов по внедрению биллинговых систем и связанных с ними дополнительных систем. В настоящее время компания ведет ряд крупных проектов по внедрению биллинговых систем и связанных с ними дополнительных систем. В рамках каждого из этих проектов стоит задача построения аналитического решения, включая корпоративное хранилище данных. В качестве источников данных для корпоративного хранилища помимо биллинговой системы выступают CRM-система и ЛКК (Личный кабинет клиента).  В задачи Аналитика BI включается: Анализ систем-источников, их архитектуры данных и бизнес-процессов, которые они автоматизируют. Сбор и анализ требований Заказчика, документирование требований. Проектирование предметных областей в BI-решении (Договорная работа, Финансовый учет, CRM, ЛКК) Постановка задач на разработку. Проверка реализации функциональности и передача ее Заказчику. Обучение пользователей. Задачи проекта реализуются в рамках отдела информационно-аналитических систем департамента разработки бизнес-приложений. Важно владеть: Основами баз данных. Основами проектирования баз данных. Базовыми знания SQL для анализа данных. Подходами к обследованию, сбору требований. В результате участник получит опыт участия в производственном проекте в роли аналитика BI. ",
    "need_match": false
  },
  {
    "id_rpd": 4355,
    "id_proj": 34,
    "name_rp": "Базы данных",
    "name_proj": "Разработка модулей «Кафедра» и «Деканат-2» для новой платформы сервисов личного кабинета",
    "text_rp": "Дисциплина посвящена знакомству с основными понятиями баз данных (БД) и моделями данных, используемыми в системах управления базами данных (СУБД), изучению методов проектирования баз данных и реализации прикладного программного обеспечения (ПО) на базе современных СУБД. Рассматриваются основы теории реляционных баз данных и методы их проектирования. Подробно изучается язык SQL и средства разработки приложений баз данных на примере СУБД MySQL. Изучается объектно-реляционное отображение на примере фреймворка SQLAlchemy. Отдельно рассматриваются вопросы производительности безопасности реляционных СУБД. Дисциплина позволяет получить навыки и углубленные знания, необходимые для успешной деятельности в области разработки программных систем. . При изучении дисциплины студенты получают теоретические знания в области реляционных баз данных и реляционной алгебры, а также практические умения и навыки, связанных применением современных реляционных систем управления базами данных (СУБД) при разработке информационных систем. Задачами дисциплины являются: - приобретение теоретических знаний в области реляционной алгебры и принципов действия основанных на данной теории реляционных баз данных; - формирование умений и навыков применения современных реляционных СУБД в проектировании, разработке и поддержке информационных систем. Студенты получают следующие знания: - знание основных понятий реляционной модели данных; - знание способов проектирования БД с использованием нормальных форм и модели \"сущность-связь\"; - знание синтаксиса и семантики языка SQL, использования языка SQL для взаимодействия с реляционной БД; - знание основ применения объектно-реляционного отображения для взаимодействия с СУБД; - знание способов несанкционированного доступа в РСУБД и противодействия этому;. Студенты приобретают: - умение проектировать эффективную структуру БД для заданной предметной области; - умение составлять SQL-запросы в БД для реализации функциональности информационной системы; - умение использовать различные средства взаимодействия с БД, в т.ч. объектно-реляционное отображение, и выбирать подходящее средство для конкретной задачи; - умение определять и принимать меры в отношении неэффективных и небезопасных техник взаимодействия с БД;. Студенты получают навыки проектирования и разработки информационных систем в части уровня хранения и доступа к данным с учётом особенностей реляционных СУБД.. Порядок выдачи, выполнения и оценки индивидуального домашнего задания определяется методикой текущего контроля.. Контрольные проводятся в автоматизированном режиме на платформе Moodle. Набор заданий генерируется для студента индивидуально. В каждом задании ответом является код на требуемом языке программирования или номера вариантов из списка предложенных ответов. Примеры заданий: 1. Вывести информацию (автора, название) о книгах, а также рейтинг в процентах Таблицы: Название: BOOKS Столбцы (через ;): book_id; title; author; price; amount; Название: продажи_книги Столбцы (через ;): book_id; rating; domestic_sales; international_sales; Пример строки для таблицы продажи_книги 1; 7.9; 699914; 322258; Рейтинг в таблице находится в диапазоне от 0 до 10. 2. Вывести информацию об авторе (author) и суммарное количество его книг в наличии (amount) из таблицы книги Таблицы: Название: книги Столбцы (через ;): book_id; title; author; price; amount 3. Вывести автора, название книги и рейтинг, которые имеют рейтинг выше чем средний (avg) в базе Таблицы: Название: book Столбцы (через ;): book_id; title; author; price; amount; Название: book_sale Столбцы (через ;): book_id; rating; domestic_sales; international_sales; 4. Переименуйте таблицу BOOKS в BOOKS_ANOTHER_TABLE 5. Какие операторы используются для модификации записей в таблицах? Выберите один или несколько: alter convert select modify update 6. Какое минимальное количество таблиц нужно для реализации связи вида многие ко многим для двух сущностей? (Ответ записать в виде числа). . Тема 1. Введение. Основные понятия БД. Краткая характеристика дисциплины. Структура системы оценивания и взаимодействия со студентами. Понятие и свойства баз данных (БД), систем управления базами данных (СУБД). Понятие и виды модели данных. Архитектуры информационных систем, использующих БД. Тема 2. Реляционная модель. Понятие и содержимое предметной области. Концептуальная и логическая модели предметной области (МПО). Основные понятия реляционной модели: отношения, домены, кортежи, атрибуты. Схема отношения, его степень и мощность. Объектные и связные отношения. Понятия первичного, возможного и внешнего ключа. Ограничения реляционной модели. Основные операции над отношениями. Тема 3. ER-модель. Модель \"сущность-связь\" (ER-модель) и проектирование БД. Основные понятия ER-модели. Нотации ER-модели. Создание реляционной модели по ER-модели. Пример проектирования БД ER-методом. Понятие функциональной зависимости и НФБК. Тема 4. Нормализация. Нормальные формы. Необходимость использования нормальных форм. Нормальные формы: 1НФ, 2НФ, 3НФ, НФБК, 4НФ, 5НФ, 6НФ. Функциональная зависимость между атрибутами. Суперключ, потенциальный ключ, ключевой атрибут, детерминант. Отличия 3НФ и НФБК. Многозначная зависимость. Декомпозиция без потерь и зависимость соединения. Тема 5. Создание и корректировка БД. Язык SQL. Группы операторов SQL. Организация и основные элементы реляционных СУБД: БД, схемы, таблицы, правила целостности, индексы, процедуры, функции, триггеры. Типы данных. Операторы INSERT, DELETE, UPDATE, DROP. Ограничения, связанные с внешними ключами. Тема 6. Упорядочивание и поиск информации, хранящейся в БД. Варианты физического хранения данных. Вычислительная сложность операции поиска. Понятие и способы определения индекса. Создание индекса с помощью SQL. B-дерево. Кластерный индекс. Некластерные индексы. Поиск по тексту в БД и полнотекстовые индексы. Индексы на основе хэша. Тема 7. Реализация запросов (ч. 1). Диалекты SQL. Синтаксис команды SELECT: DISTINCT, вычисляемые поля, WHERE, ORDER BY, LIMIT и OFFSET, GROUP BY и HAVING, агрегация. Вложенные запросы. Синтаксис CTE. Оператор UNION. Операторы управления потоком. Тема 8. Реализация запросов (ч. 2). Использование JOIN в операторах SELECT, UPDATE, DELETE. INNER JOIN, LEFT и RIGHT JOIN, OUTER JOIN, CROSS JOIN, FULL JOIN. Комбинации JOIN. Оператор INSERT. Операторы MySQL для манипулирования JSON и XML. Тема 9. Расширенный MySQL. Представления и материализованные представления. Обновляемые представления. Хранимые процедуры и функции. Триггеры. Тема 10. ORM. Миграции. Понятия DBAL (уровня абстракции БД) и ORM (объектно-реляционное отображение). Преимущества и недостатки ORM. Технологии ORM. Использование уровня DBAL и ORM в ORM-фреймворке SQLAlchemy. Миграции БД. Использование миграций в пакете Alembic. Тема 11. Производительность БД и способы ее измерения. Производительность систем. Нагрузочное тестирование и стресс-тестирование. Мониторинг БД и связанной инфраструктуры. Варианты метрик производительности БД. Измерение времени выполнения запросов. Оператор EXPLAIN. Использование EXPLAIN для оценки планирования запросов: LIMIT, ORDER BY, запросы по индексу, WHERE. Различные алгоритмы JOIN и их производительность. Тема 12. Движки хранения данных MySQL. MySQL Storage Engine: InnoDB, MyISAM, Memory, CSV, Archive, Blackhole, MRG_MyISAM, Federated. Сравнение движков. Тема 13. Контроль доступа и транзакции. Транзакции. Понятие ACID. Явные и неявные транзакции. Проблемы конкурентного доступа к данным. Уровни изоляции транзакций. Разграничение доступа к БД. Объектные и системные привилегии, роли. Оператор GRANT. Тема 14. Безопасность реляционных БД. SQL-инъекции. Схема инъекции. Классическая SQL-инъекция, слепая инъекция, абсолютно слепая инъекция. Инструменты для неавторизованного проникновения в БД: комментарии, UNION, information_schema, представления строк, регистры. Злоумышленное использование SLEEP и BENCHMARK. Инструменты автоматизации SQL-инъекций. Защита от SQL-инъекций. Тема 15. NoSQL. Использование KV-хранилища с РСУБД. Заключение. Понятие NoSQL (нереляционные базы данных). Виды NoSQL СУБД. БД типа \"ключ-значение\". Memcached. Redis. Типы данных и основные операторы Redis. Использование Redis для хранения \"горячих\" данных. Кэширование. Стратегии кэширования: Cache-Aside, Cache-Through, Write-Through, Write-Behind. Вопросы актуальности кэша. Кэширование REST-запросов и запросов к СУБД.",
    "text_proj": "Разработка модулей «Кафедра» и «Деканат-2» для новой платформы сервисов личного кабинета. В рамках преобразования личного кабинета студентов, аспирантов и сотрудников необходимо выделить сервисы, которыми пользуются деканаты и кафедры в отдельные пользовательские интерфейсы. Новые интерфейсы должны агрегировать все возможности кафедр и деканатов в одном месте, а также реализовать новые возможности на основе имеющихся данных (например, получение списка задолженностей на выпускающей кафедре). Обязательно должен: знать: HTML, JS, CSS уметь: проектировать интерфейсы пользователя; проектировать RESTful API; писать интеграционные и юнит-тесты; документировать код; владеть: навыками анализа требований пользователя; навыками работы в команде; технологиями совместной работы: git, task-tracker. Желательно должен: знать: PHP, Node.js, Webpack, SCSS, Vue.js владеть:  навыками деловой переписки. ",
    "need_match": false
  },
  {
    "id_rpd": 4769,
    "id_proj": 34,
    "name_rp": "Введение в нереляционные системы управления базами данных",
    "name_proj": "Разработка модулей «Кафедра» и «Деканат-2» для новой платформы сервисов личного кабинета",
    "text_rp": "Дисциплина знакомит с теоретическими и практическими основами использования нереляционных СУБД. Формирует представления об основных качественных характеристиках распределенных информационных систем. Демонстрирует модели данных, используемые в нереляционных СУБД. Освещает существующие рекомендации и методики по моделированию предметной области с помощью нереляционных СУБД. Иллюстрирует вопросы масштабирования и резервирования для распределенных информационных систем. Формирует навыки практического использования нереляционных СУБД для решения задач хранения, анализа и представления данных.. Целью дисциплины является получение теоретических знаний о нереляционных СУБД, ключевых отличиях между реляционными и нереляционными СУБД, а также практических навыков применения нереляционных СУБД при решении задач профессиональной деятельности. Задачами дисциплины являются приобретение знаний, умений и практических навыков по применению нереляционных СУБД для проектирования информационных систем. Получение знаний о принципах моделирования данных и их ограничений в рамках различных типов нереляционных СУБД, об основных качественных и количественных понятиях, которыми характеризуются наиболее востребованные нереляционные СУБД. Формирование умения выбирать тип нереляционных СУБД для решения практической задачи, умения моделировать предметную область в рамках нереляционной СУБД. Освоение навыков навыков применения нереляционных СУБД при разработке программного обеспечения информационных систем.. Пример задач, выдаваемых на экзаменах к билетам Общее условие задачи: представить проект нереляционной базы данных для создания сервиса в заданной предметной области.  Пример описания предметной области: требуется создать сервис для информационной поддержки работы кафе быстрого питания, позволяющий управлять продуктовыми запасами, фиксировать оплаты, осуществлять прогнозирование спроса, обеспечивать управление меню, графиком уборки помещений. Пример вопросов теста текущего контроля Тесты состоят из 20 вопросов с возможностью выбора одного или нескольких вариантов ответа.  1. Как выглядит наиболее частый компромисс прироста производительности для распределенной вычислительной системы? Прирост скорости разменивается на прирост используемой памяти;  Прирост скорости разменивается на сокращение используемой памяти;  Прирост скорости разменивается на прирост функциональности;  Прирост скорости разменивается на сокращение пропускной способности. 2. Что ограничивает горизонтальную масштабируемость системы по закону Амдала? Доля последовательных вычислений; Доля параллельных вычислений; Характер решаемой задачи; Характер запросов к системе. 3. Какое преимущество обеспечивает асинхронная репликация по сравнению с синхронной? Меньше величина задержки репликации; Более надежный контроль над согласованностью данных; Более безопасное соединение между серверами. Министерство науки и высшего образования Российской Федерации ФГАОУ ВО «Санкт-Петербургский государственный электротехнический университет «ЛЭТИ» имени В.И. Ульянова (Ленина)» ____________________________________________________________ ЭКЗАМЕНАЦИОННЫЙ БИЛЕТ № 1 Дисциплина Введение в нереляционные системы управления базами данных   ФКТИ 1. Отличия объектно-ориентированных баз данных от других NoSQL решений..  2. Аномалии в данных. Классификация сценариев использования по доле операций чтения и записи, примеры. 3. Задача. УТВЕРЖДАЮ Заведующий кафедрой                                 . Министерство науки и высшего образования Российской Федерации ФГАОУ ВО «Санкт-Петербургский государственный электротехнический университет «ЛЭТИ» имени В.И. Ульянова (Ленина)» ____________________________________________________________ ЭКЗАМЕНАЦИОННЫЙ БИЛЕТ № 1 Дисциплина Введение в нереляционные системы управления базами данных   ФКТИ 1.  Характеристика графовых баз данных. Отличия графовых баз данных от других NoSQL решений.  2. Методы повышения надежности БД. Аномалии в данных. 3. Задача. УТВЕРЖДАЮ Заведующий кафедрой                                                 . Введение. Разъяснение термина NoSQL и ключевых различий между SQL и NoSQL. Формулировка CAP теоремы и ее следствий. Основные термины для описания производительности и сценариев использования БД. Компромиссы (Tradeoff) производительности. Тема 1. Базы данных «ключ-значение». Ассоциативные массивы, кэш-память и алгоритмы вытеснения. Описание основных способов использования баз данных «ключ-значение». Особенности использования. Примеры задач, в которых используются базы данных «ключ-значение». Программные интерфейсы Memcached. Тема 2. Документо-ориентированные базы данных. Слабоструктурированные данные. JSON. Описание основных способов использования документно-ориентированных баз данных. Особенности использования. Примеры задач, в которых используются документно-ориентированные базы данных. Пример ДОСУБД - MongoDB. Программные интерфейсы для работы с MongoDB – mongoshell, pymongo. Тема 3. Графовые базы данных. Способы формализации и хранения аннотированных графов. Виды графов. Характеристика графовых баз данных. Отличия графовых баз данных от других NoSQL решений. Эффективность использования графовых баз данных в зависимости от задачи. Примеры применения графовых баз данных для реальных задач разработки ПО. Характеристика графовой СУБД Neo4j. Программные интерфейсы для работы с Neo4j. Тема 4. Объектно-ориентированные базы данных. Сериализация и десериализация. Основная проблема, решаемая объектно-ориентированными базами данных. Характеристика объектно-ориентированных баз данных. Отличия объектно-ориентированных баз данных от других NoSQL решений. Эффективность использования в зависимости от задачи. Примеры применения объектно-ориентированных баз данных для реальных задач разработки ПО. Проблемы обработки транзакций. Установка и использование DB4O. Тема 5. Базы данных BigTable. MapReduce. BigData. Версионирование. Характеристика BigTable и отличие от других типов NoSQL баз данных. Модель данных BigTable. Задачи, эффективно решаемые BigTable. Установка Apache Cassandra. Интерфейс взаимодействия с СУБД cqlsh. Виды ConsistencyLevel. Тема 6. Хранилища RDF. Семантический web и инженерия знаний. RDF – абстрактная модель данных в рамках семантической паутины. Характеристика RDF баз данных и отличие от других типов. SPARQL. Задачи, эффективно решаемые RDF хранилищами. Тема 7. Многомерные базы данных. Нормальные формы. Non-first normal form. Характеристика и отличие отдругих типов. Пример моделирования данных. Задачи, эффективно решаемые многомерными базами данных. Применение для реальных задач разработки ПО. Тема 8. Многомодельные базы данных. Виды логических моделей данных. Polyglot persistence. Миграция и конвертация данных. Отличия многомодельных баз данных от других NoSQL решений. Эффективность использования многомодельных баз данных в зависимости от задачи. Примеры применения многомодельных баз данных для реальных задач разработки ПО. Установка и настройка среды ArangoDB. Структуры данных ArangoDB. Тема 9. Репликация и согласованность. Отказоустойчивость и масштабируемость баз данных. Закон Амдала. Методы повышения надежности БД. Аномалии в данных. Классификация сценариев использования по доле операций чтения и записи, примеры. Горизонтальный и вертикальный шардинг. Репликация: синхронная и асинхронная, Master-Master и Master-Slave. Модели консистентности. Принципы ACID и BASE. Заключение. Особенности проектирования моделей данных для различных видов СУБД. Критерии для формулирования перспективных требований производительности и надежности к БД. ",
    "text_proj": "Разработка модулей «Кафедра» и «Деканат-2» для новой платформы сервисов личного кабинета. В рамках преобразования личного кабинета студентов, аспирантов и сотрудников необходимо выделить сервисы, которыми пользуются деканаты и кафедры в отдельные пользовательские интерфейсы. Новые интерфейсы должны агрегировать все возможности кафедр и деканатов в одном месте, а также реализовать новые возможности на основе имеющихся данных (например, получение списка задолженностей на выпускающей кафедре). Обязательно должен: знать: HTML, JS, CSS уметь: проектировать интерфейсы пользователя; проектировать RESTful API; писать интеграционные и юнит-тесты; документировать код; владеть: навыками анализа требований пользователя; навыками работы в команде; технологиями совместной работы: git, task-tracker. Желательно должен: знать: PHP, Node.js, Webpack, SCSS, Vue.js владеть:  навыками деловой переписки. ",
    "need_match": false
  },
  {
    "id_rpd": 4401,
    "id_proj": 48,
    "name_rp": "Проектирование встроенных приложений",
    "name_proj": "Разработка рекомендательной машины ",
    "text_rp": "В настоящее время большая доля аппаратуры содержит в своем составе микропроцессор, предназначенный для управления работой систем и устройств, а также их взаимодействием с человеком и физическими объектами. В связи с чем растет потребность в разработке встроенного программного обеспечения, которое по сути определяет итоговую логику функционирования аппаратуры. В курсе изучаются одноплатные микроконтроллеры, особенности обмена по последовательным интерфейсам, программные среды ArduinoIDE и VisualStudio, программирование на языке C++, датчики физических величин и исполнительные устройства для управления объектами. Уделено внимание концепции “интернета вещей”. На основе иерархической модели сетевого взаимодействия даются понятия протоколов прикладного, транспортного и сетевой уровней. Рассматривается методология проектирования компонент встроенных приложений. . Целью дисциплины является: - изучение принципов построения встроенных систем, аппаратных платформ, архитектур микроконтроллеров, средств проектирования программ и их использование для разработки встроенных приложений; - освоение особенностей интерфейсов, протоколов и технологий для организации сетевого обмена данными; - формирование навыков использования современных программных платформ для проектирования встроенных приложений. Задачи: - использование знаний и умений для разработки встроенных приложений; - освоение программных средств и цифровых платформ для создания конечного продукта; - приобретение навыков в области средств сетевого взаимодействия. Знание концептуальных принципов проектирования встроенных систем, аппаратных платформ, архитектур микропроцессоров, сред программирования, протоколов и интерфейсов. Освоение современных программно\u00AD-аппаратных комплексов и технологий разработки конечного продукта. Использование знаний и умений для оценки тенденций развития в области средств проектирования встроенных приложений. Формирование навыков использования современных программных платформ для проектирования встроенных приложений. . Введение. Содержание курса и его задачи, основные разделы. Связь курса с другими дисциплинами. Исторические сведения о развитии техники встроенных приложений. Структура и план учебной деятельности студентов. Состав и содержание практических занятий. Формы отчетности. Обзор современных одноплатных контроллеров. Одноплатные контроллеры как аппаратурная основа для создания встроенных приложений. Архитектура микроконтроллера на примере решений EspressifSystems. Особенности архитектуры, распределение памяти, интерфейсы, порты ввода/вывода, АЦП, ШИМ, Wi-Fi. Протокол UART. Назначения, структура кадра, временные диаграммы, синхронизация, контроль ошибок, скорость передачи, схема подключения. Шина I2C. Принцип работы и подключения, структура кадра, адресация, синхронизация, скорость передачи, схема подключения. Интерфейс SPI. Структура кадра, синхронизация, скорость передачи, схемы подключения. Технология Wi-Fi. Основные характеристики технологии, диапазон частот, частотные каналы, точка доступа, скорость передачи. Программные среды для проектирования встроенных приложений. Среды программирования Arduino IDE и Visual Studio. Языки программирования для микроконтроллеров. Языки Ассемблер, С, С++. Обзор датчиков физических величин. Аналоговые и цифровые датчики. Датчики температуры, давления, освещенности, влажности, перемещения, напряжения, тока. Исполнительные устройства для управления объектами. Электрические двигатели и приводы, релейные устройства, механизмы роботов, электромеханические и электромагнитные замки, заслонки, клапаны, задвижки, электрические нагреватели, излучатели. Концепция “интернета вещей”. Общие принципы взаимодействия вещей (устройств, машин, объектов) между собой через интернет, без постоянного участия человека. которые ведут к глобальной автоматизации в современных технологических процессах. Иерархическая модель сетевого взаимодействия. Назначение уровней моделей OSI и TCP/IP. Многоуровневая модель взаимодействия открытых систем как основа стандартизации сетевого взаимодействия. Назначение уровней коммуникационного процесса. Уровень приложений и доступ к сетевым сервисам. Задачи уровня приложений. Протоколы прикладного уровня. Основные протоколы прикладного уровня. Протоколы транспортного уровня. Протоколы TCP и UDP. Сетевой уровень и IP-адресация. Объединение сетей на основе протоколов сетевого уровня, адресация на сетевом уровне. Заключение. Основные тенденции дальнейшего развития технологий встроенных приложений.",
    "text_proj": "Разработка рекомендательной машины. Рекомендательная машина необходима для помощи в выборе, который осуществляется обучающимся на всем периоде обучения, начиная от выбора направления при поступлении и выбора вакансии при трудоустройстве или смены работы. При этом выбор не ограничивается только учебными модулями. Он связан выбором проектов, преподавателей, участием в различных мероприятиях, курсов ДПО и т.п. Результаты выбора формируют цифровой след обучающегося. На правильность выбора влияет множество факторов, включая цифровой след и имеющуюся цель (например, занять ту или иную должность в компании).  Для того чтобы учесть все эти факторы разрабатывается рекомендательная машина, которая помогает обучающемуся сделать правильный выбор. В данном проекте необходимо разрабатывать модули рекомендательной машины: шину данных для работы с множеством разных источников; модуль предобработки данных для преобразования исходных данных к виду и качеству необходимому для рекомендательных моделей ядро машинного обучения для подключения разных систем машинного обучения и выполнения на них различных моделей и алгоритмов машинного обучения модуль управления, обеспечивающий как формирование рекомендаций, так и переобучение рекомендательных моделей.  . Обязательно должен: знать: принципы выполнения машинного обучения, ООП уметь: изучать open source системы владеть: языками программирования Python, Java. Желательно должен: знать: принципы работы рекомендательных машин, шин данных, движков машинного обучения уметь: строить сложные программные системы из различных компонент владеть: Apach Spark, Apach Drill, scikit-learn и др. В результате получит: знать: работу рекомендательных машин, шин данных, движков машинного обучения уметь: строить сложные программные системы из различных компонент владеть: Apach Spark, Apach Drill, scikit-learn и др. ",
    "need_match": false
  },
  {
    "id_rpd": 6093,
    "id_proj": 56,
    "name_rp": "Математический анализ",
    "name_proj": "Практика в проектах по автономному транспорту от АО \"НИИАС\" РЖД",
    "text_rp": "Математический анализ - ключевой раздел высшей математики, необходимый при подготовке специалистов инженерных специальностей. В данном курсе рассматривается связь основных понятий классического математического анализа с инженерными приложениями. Основу ее составляют следующие темы: функции одной переменной (пределы и непрерывность; дифференциальное исчисление; формула Тейлора; исследование функций по производной). Интегральное исчисление (неопределенный и определенный интеграл, геометрические и физические приложения; несобственные интегралы). Числовые и степенные ряды. Исследование функций нескольких переменных. Методы решения простейших дифференциальных уравнений. . Целью изучения дисциплины являются: - приобретение знаний основных понятий и методов аналитических разделов высшей математики, используемых при изучении общетеоретических и специальных дисциплин и в инженерной практике; - формирование системы теоретических знаний и практических навыков основ математического аппарата, основных методов количественного измерения случайности действия факторов, которые влияют на любые процессы, основ математического аппарата, который используется при моделировании любых процессов жизнедеятельности человека и является базовым во всех науках, использующих формульные описание законов и процессов. Задачами изучения дисциплины является: - изучение основных понятий и методов аналитических разделов высшей математики, используемых при изучении общетеоретических и специальных дисциплин и в инженерной практике; - формирование умений применять свои знания к решению практических задач; пользоваться математической литературой для самостоятельного изучения прикладных вопросов; - освоение методов построения математических моделей для задач, возникающих в инженерной практике и решаемых методами математического анализа. В результате изучения дисциплины студенты должны приобрести знания основных понятий и методов математического анализа. В результате изучения дисциплины студенты должны приобрести умения вычислять пределы и производные, интерпретировать, полученные результаты, вычислять интегралы и использовать их для решения сопутствующих задач. Освоение основных навыков работы с понятиями математического анализа, использующимися при изучении общетеоретических и специальных дисциплин и в инженерной практике.. Цель выполнения ИДЗ - формирование умений и навыков по решению прикладных задач для дальнейшего использования в профессиональной деятельности. Примерные темы индивидуальных домашних заданий (ИДЗ): 1 семестр: ИДЗ№1 «Построение графика функции» ИДЗ№2 «Интегрирование дробно-рациональной функции» 2 семестр: ИДЗ№3 «Решение задачи Коши для линейных систем дифференциальных уравнений и линейных дифференциальных уравнений операционным методом» ИДЗ№4 «Решение задачи Коши для линейных дифференциальных уравнений со специальной правой частью» Требования по оформлению ИДЗ: Формат оформления: произвольный формат (печатный или рукописный). При выборе печатного формата следует использовать редакторы  Word или Excel. При выборе рукописного формата следует оформить работу на двойных листах в клетку или листах формата А4, или в тетради (в клетку) объемом не более 12 листов. При рукописном оформлении ИДЗ следует писать аккуратно черными или синими чернилами, с обязательным использованием линейки и карандаша при выполнении чертежей. При печатном оформлении ИДЗ рекомендуется использовать шрифт Times New Roman, Calibri или Ariel; размер шрифта 12-14 пунктов, межстрочный интервал 1,15-1,5 пунктов. Каждую задачу следует оформлять на новом листе. Таблицы и рисунки следует оформлять, придерживаясь сквозного просмотра. Т.е. если в задаче предусмотрена таблица или рисунок, то они должны приведены внутри или в конце решаемой задачи. Общее приложение для все рисунков и таблиц не предусматривается. Объем ИДЗ зависит только от количества задач и/или заданий. Каждая задача должна содержать исходные данные, решение и ответ. Количество используемых источников не ограничено. Каждое ИДЗ состоит из: титульного листа (название дисциплины, ФИО, звание преподавателя, номер группы, ФИО студента, номер варианта, дата сдачи работы) списка решенных задач и/или заданий, списка используемых источников. Формат сдачи работы зависит от общих требований Университета (при очном обучении - ИДЗ сдается преподавателю в письменном виде или печатном виде; при дистанционном обучении - в печатном или электронном виде работы размещается в Moodle или отправляются преподавателю на электронную почту). ИДЗ должны быть решены и представлены на проверку в установленное преподавателем время.  Методика оценивания ИДЗ: \"неудовлетворительно\" (или 2), если верно решено меньше 60% заданий, но более 29%;  \"удовлетворительно\" (или 3), если верно решено меньше 75% заданий, но более 59%;  \"хорошо\" (или 4), если верно решено меньше 89% заданий, но более 74%;  \"отлично\" (или 5), если верно решено более 90% заданий.  В ходе проведения семинарских и практических занятий целесообразно привлечение студентов к как можно более активному участию в дискуссиях, решении задач, обсуждениях и т. д. При этом активность студентов также может учитываться преподавателем, как один из способов текущего контроля на практических занятиях.. 1 семестр: Контрольная работа «Дифференцирование и вычисление пределов» Контрольная работа «Интегрирование».   2 семестр: Контрольная работа «Ряды и ОДУ»  . Министерство науки и высшего образования Российской Федерации ФГАОУ ВО «Санкт-Петербургский государственный электротехнический университет «ЛЭТИ» имени В.И. Ульянова (Ленина)» ЭКЗАМЕНАЦИОННЫЙ БИЛЕТ № 1 Дисциплина Математический анализ    1. Функции непрерывные на отрезке. Теоремы Вейерштрасса. 2. Вычисление площади фигуры, ограниченной параметрически заданной кривой. 3. Задача. УТВЕРЖДАЮ Заведующий кафедрой                                                  С.Н. Поздняков. Введение. История формирования дисциплины. Базовые термины и теоретико-множественные операции. Логика высказываний. Стандарты обозначений. Пределы и непрерывность. Определение и свойства пределов последовательностей и функций. Замечательные пределы. Непрерывные функции и их свойства. Основные теоремы о непрерывных функциях. Дифференциальное исчисление функций одной переменной. Производная функции. Геометрический смысл производной. Правила вычисления производных. Свойства функций, дифференцируемых на промежутке. Производные высших порядков. Формула и полином Тейлора. Исследование функций с помощью производных. Интегральное исчисление функций одной переменной. Первообразная, неопределенный интеграл и их свойства. Таблица интегралов, формулы для интегрирования функций. Интегрирование рациональных дробей. Определенный интеграл и его свойства. Интеграл с переменными пределами. Формула Ньютона-Лейбница. Геометрические приложения определенного интеграла. Численное интегрирование функций. Несобственные интегралы, признаки сходимости. Преобразование Лапласа и его свойства. Дифференциальные уравнения. Классификация ДУ. Задача Коши. Ломаные Эйлера. Теорема существования и единственности решения задачи Коши решения. Уравнения с разделяющимися переменными. Линейные уравнения. Линейные дифференциальные уравнения. Операционный метод решения ЛДУ и их систем. Дифференциальное исчисление функций многих переменных. Частные производные. Дифференциал и касательная плоскость. Градиент и производная по направлению. Формула Тейлора (2-го порядка). Исследование функций нескольких переменных. Ряды. Числовые ряды и их свойства. Признаки их сходимости положительных рядов. Знакочередующиеся ряды, теорема Лейбница. Абсолютная и условная сходимость. Степенные ряды, радиус сходимости. Свойства степенного ряда Ряд Тейлора. Заключение. Перспективы применения методов математического анализа для решения прикладных задач.",
    "text_proj": "Практика в проектах по автономному транспорту от АО \"НИИАС\" РЖД. АО “НИИАС” РЖД приглашает студентов на практику в проекты по автономному транспорту: Проекты по автоматизации управления движением беспилотных поездов. Пожелания к кандидатам: уверенное владение Linux и Bash, Qt, Python, SQL базами данных. Проект по высокоточной системе позиционирования (отдел Математического обеспечения систем управления АО “НИИАС” РЖД). Пожелания к кандидатам: знания прикладной математики, алгоритмов, моделирования, Python. Технологии проекта: SLAM, фьюзинг данных от датчиково-навигационного оборудования различного типа. Проект: Автоматизированная калибровка камер. Пожелания: Знания в области Компьютерного зрения, Проективной геометрии. На базе АО «НИИАС» РЖД можно пройти производственную практику, а также написать диплом.   Сроки практики -- 1-3 месяца. Обязательно должен: знать: основны алгоритмов и структур данных уметь: работать с методами прикладной математики, с языком программирования Python владеть: основными технологиями разработки алгоритмов и программного обеспечения. Желательно должен: знать: основы компьютерного зрения, проективной геометрии.  уметь: применять основные методы компьютерного зрения и проективной геометрии.  владеть: Linux и Bash, Qt, Python, SQL базами данных. В результате получит: знания: основ позиционирования, калибровки камер, технологий беспилотного транспорта умения: применять основные методы позиционирования, калибровки камер, беспилотного транспорта опыт: работы в реальном проекте по беспилотному транспорту, разработки систем компьютерного зрения и проективной геометрии для решения реальных задач, опыт применения технологий совместной разработки . ",
    "need_match": false
  },
  {
    "id_rpd": 683,
    "id_proj": 38,
    "name_rp": "Методы осуществления компьютерных атак и вирусных воздействий",
    "name_proj": "Разработка системы звукоподводной связи на основе теории хаоса",
    "text_rp": "Дисциплина обеспечивает получение знаний о моделях безопасности информационных систем, приемах проведения атак, признаках их обнаружениях, источниках информации о существующих атаках и уязвимостях вычислительных систем; формирование практических навыков по обнаружению атак и методам организации защиты информации в вычислительных системах. Практические часть курса, нацелена на изучение примеров компьютерных атак и анализ их воздействий на компьютерную систему. . Дисциплина нацелена на приобретение способностей выявлять нарушения информационной безопасности, распознавать шаблоны проведения атак, обнаруживать вредоносное программное обеспечение, оценивать уровни критичности вредоносного программного обеспечения. Дисциплина участвует в формировании общепрофессиональных компетенций, предусмотренных федеральным государственным образовательным стандартом высшего профессионального образования. Дисциплина обеспечивает получение знаний теоретических основ компьютерной вирусологии, необходимых для защиты информации в компьютерных системах и сетях. Дисциплина вырабатывает умения исследования вредоносного программного обеспечения, выявления аномальной активности в информационной системе и/или компьютерной сети, выбора программно-аппаратных средств по обеспечению информационной безопасности компьютерных систем и сетей, самостоятельной разработки в области компьютерной вирусологии и систем обнаружения атак и антивирусного обеспечения. Результатом освоения является получение практических навыков анализа методов нарушения информационной безопасности, а так же осуществление подбора необходимых для обеспечения безопасности программно-аппаратных средств. . Указываются исходные данные к ИДЗ и основные требования, предъявляемые к нему  . Указываются исходные данные к докладу и основные требования, предъявляемые к нему  . Кратко указываются исходные данные к реферату и основные требования, предъявляемые к нему ввести более 100 символов). Указываются исходные данные к кейсу и основные требования, предъявляемые к нему  . . Министерство науки и высшего образования Российской Федерации ФГАОУ ВО «Санкт-Петербургский государственный электротехнический университет «ЛЭТИ» имени В.И. Ульянова (Ленина)» ____________________________________________________________ ЭКЗАМЕНАЦИОННЫЙ БИЛЕТ № 1 Дисциплина МЕТОДЫ ОСУЩЕСТВЛЕНИЯ КОМПЬЮТЕРНЫХ АТАК И ВИРУСНЫХ ВОЗДЕЙСТВИЙ ФКТИ 1. Модели вредоносного программного обеспечения Ф. Коэна, Л. Эдельмана, вычислительная сложность проблемы обнаружения вредоносного программного обеспечения (ВрПО). 2. Формат исполняемых файлов PE. Схемы заражения исполняемых файлов формата PE. Упаковщики. Формат pdf-файлов. Схемы заражения pdf-файлов. 3. Сигнатурные методы, эвристики, методы интеллектуального анализа данных. Динамический и статический анализ файлов УТВЕРЖДАЮ Заведующий кафедрой                                                   Е. Г.  Воробьёв. Ведение. Тема 1.Модели безопасности информационных систем. Тема 1.Модели безопасности информационных систем Понятие угрозы ИБ, несанкционированного доступа, классификация атак. Модели безопасности информационных систем. Законодательные акты в области компьютерных преступлений. Тема 2. Теоретические основы компьютерной вирусологии. Математические модели вредоносного программного обеспечения Ф. Коэна, Л. Эдельмана, вычислительная сложность проблемы обнаружения вредоносного программного обеспечения (ВрПО). Тема 3. Таксономия ВрПО. Критерии оценки уровня вирусной угрозы. Подходы к описанию и наименованию ВрПО (структурированный язык описания ВрПО MAEC). Тема 4. Схемы заражения информационной системы. Загрузочные вирусы, схемы заражения памяти, файлов. Тема 5. Основные механизмы заражения файлов. Формат исполняемых файлов PE. Схемы заражения исполняемых файлов формата PE. Упаковщики. Формат pdf-файлов. Схемы заражения pdf-файлов. Тема 6. Механизмы самозащиты ВрПО от обнаружения. Полиморфизм, стелс-технологии, механизмы устойчивости ВрПО. Тема 7. Инфраструктурные атаки. Компьютерные черви, виды DDoS-атак. Математические модели компьютерных червей и эпидемий. Тема 8. Базовые механизмы проникновения в систему. Уязвимости и открытости информационной системы. Основные ошибки программирования (с примерами). Уязвимости вида переполнения буфера, SQL-инъекция, XSS-скриптинг. Тема 9. Основные стратегии обнаружения и исследования ВрПО. Сигнатурные методы, эвристики, методы интеллектуального анализа данных. Динамический и статический анализ файлов. Тема 10. Унифицированный подход к описанию информационных угроз. Структурированные языки описания ВрПО, уязвимостей, открытостей, шаблонов атак (CWE, CVE, CAPEC), системы оценки уровня критичности уязвимостей (CVSS, CWSS). Тема 11. Основные программные средства обнаружения аномальной активности в информационной системе. Антивирусное ПО, системы обнаружения вторжений, сканеры безопасности, обманные системы, системы контроля целостности, поведенческие блокираторы. Недостатки и достоинства подходов. SIEM-системы",
    "text_proj": "Разработка системы звукоподводной связи на основе теории хаоса. Создание программного и аппаратного обеспечения системы звукоподводной связи для подводных роботов.  Разработка прототипа системы.  Полевые испытания системы на водоеме в различных условиях.  Исследования свойств сигналов различного типа при прохождении водной среды. . Навыки работы в команде, базовые навыки программирования, мотивация к труду. Инструмент выдадим, работать научим. Знания о системах передачи данных в водной среде. Базовые знания в области гидроакустики. Знания о способах модуляции и демодуляции акустических сигналов, включая широкополосные и биологически инспирированные сигналы. Навыки в области проектирования электронных систем. Опыт водной экспедиции для полевых испытаний прибора. Опыт постановки и обработки результатов эксперимента. ",
    "need_match": false
  },
  {
    "id_rpd": 2163,
    "id_proj": 31,
    "name_rp": "Аудиотехника",
    "name_proj": "Определение состояния автомобиля используя видео",
    "text_rp": "Дисциплина «Аудиотехника» изучает особенности слухового аппарата человека, сигналы звукового вещания и их возможные искажения. Рассматриваются акустические характеристики открытых пространств и помещений. Особое внимание уделяется электроакустическим преобразователям и системам. Даются основные понятия в области аналоговых и цифровых методов и устройств обработки звуковых сигналов. Обсуждаются методики и аппаратура контроля и измерений в аудиотехнике.. Целью дисциплины \"Аудиотехника\" является изучение основных типов и характеристик сигналов звукового вещания, видов искажений, причин их возникновения и методов снижения в различных звеньях звукового тракта, основных законов слухового восприятия; формирование умения рассчитывать основные акустические характеристики открытых пространств и помещений, создавать оптимальные акустические условия в помещениях, определять параметры озвучания и звукоусиления; получение навыка выбора оптимальных методов и разработки программ экспериментальных исследований и испытаний, проведения измерений с выбором современных технических средств и обработкой результатов в области аудиотехники и архитектурной акустики. Дисциплина \"Аудиотехника\" направлена на решение основных задач аудиотехники и архитектурной акустики: разработка, моделирование и расчет параметров звукового тракта с учетом видов искажений, причин их возникновения и методов их снижения; разработка, моделирование и расчет характеристик электроакустической аппаратуры; определение оптимальных акустических условий в помещениях. Получение знаний об основных типах и характеристиках сигналов звукового вещания, видов искажений, причин их возникновения и методов снижения в различных звеньях звукового тракта, основных законов слухового восприятия; основных акустических характеристиках открытых пространств и помещений, способах создания оптимальных акустических условий в помещениях, способах озвучения и звукоусиления. Формирование умения применять полученные теоретические знания для выбора оптимальных методов решения практических задач расчета и моделирования в области аудиотехники и архитектурной акустики. Освоение навыков применения полученных знаний для разработки различных типов электроакустической аппаратуры и проведения экспериментальных исследований и измерений с выбором современных технических средств и обработкой результатов в области аудиотехники и архитектурной акустики.. В качестве одного из элементов текущего контроля по дисциплине предусматривается доклад по теме реферата. Доклад сопровождается презентационным материалом выполненном в формате Microsoft PowerPoint. Требования к оформлению презентационного материала - согласно ГОСТ 7.32-2017 \"Межгосударственный стандарт. Система стандартов по информации, библиотечному и издательскому делу. Отчет о научно-исследовательской работе. Структура и правила оформления\". Рекомендуемый объем - 20-25 слайдов. Рекомендуемое время доклада - 10-15 минут. . В качестве одного из элементов текущего контроля по дисциплине предусматривается подготовка реферата на заданную преподавателем или выбранную студентом самостоятельно тему. Целью написания реферата является ознакомление с широкой номенклатурой устройств аудиотехники, принципами их работы, конструктивной реализацией, а также сферами применения. Структура реферата подразумевает наличие соответствующих тематических разделов. Реферат сдается преподавателю в письменной форме в сроки, установленные графиком текущего контроля. Требования к оформлению реферата - согласно ГОСТ 7.32-2017 \"Межгосударственный стандарт. Система стандартов по информации, библиотечному и издательскому делу. Отчет о научно-исследовательской работе. Структура и правила оформления\". Рекомендуемый объем реферата - 20-30 страниц, рекомендуемое количество использованных источников - 10-15. Тема: Акустика помещений  . Министерство науки и высшего образования Российской Федерации ФГАОУ ВО «Санкт-Петербургский государственный электротехнический университет «ЛЭТИ» имени В.И. Ульянова (Ленина)» ____________________________________________________________ ЭКЗАМЕНАЦИОННЫЙ БИЛЕТ № 1 Дисциплина Аудиотехника  ФИБС 1. Вещательный сигнал как случайный процесс  2. Измерительные сигналы и аппаратура   УТВЕРЖДАЮ Заведующий кафедрой                                                   К.Е. Аббакумов. Введение. Предмет дисциплины и ее задачи. Структура, содержание дисциплины, ее связь с другими дисциплинами учебного плана. Сигналы звукового вещания. Искажения звукопередачи. Вещательный сигнал как случайный процесс. Законы распределения уровней сигналов. Усилители. Регуляторы уровня. Системы шумоподавления. Частотные корректоры. Ревербераторы. Коммутаторы. Выбросы и паузы. Спек-тральные и динамические характеристики сигналов. Линейные искажения. Не-линейные искажения. Специальные виды искажений. Слух и восприятие звука. Слуховой аппарат человека. Восприятие акустических сигналов. Громкость, высота, тембр звука и их основные физические корреляты. Маскировка, нелинейность, адаптация слуха. Системы звукопередачи. Пространственный слух. Основные форматы сигналов звуковых систем. Монофония. Стереофония. Бифония. Многоканальная стереофония. Звуковые процессоры. Электромеханические преобразователи в аудиотехнике. Классификация. Электродинамический и электромагнитный преобразователи в режиме двигателя и генератора. Электростатический с внешней поляризацией и электретный преобразователи. Громкоговорители. Классификация. Основные параметры и характеристики. Электродинамический громкоговоритель прямого излучения. Типы акустического оформления. Акустические системы. Мониторы. Звуковые колонки. Рупорные громкоговорители. Микрофоны. Классификация. Основные параметры и характеристики. Микрофон как приемник звука. Ненаправленный конденсаторный микрофон. Двунаправленный ленточный микрофон. Электродинамический и конденсаторный однонаправленный микрофоны. Комбинированные и остронаправленные системы. Измерения в аудиотехнике. Виды измерений и технического контроля. Методика измерения основных параметров качества аппаратуры тракта. Дистанционные измерения и контроль. Измерительные сигналы и аппаратура. Заключение. Основные направления развития аудиотехники",
    "text_proj": "Определение состояния автомобиля используя видео. Цель работы: определять направление движения автомобиля, его остановки и старты по видеозаписи с видеорегистратора. Приложение, используя машинное обучение (или другие алгоритмы и технологии), определяет и классифицирует состояние автомобиля по видеозаписи с видеорегистратора: стоит автомобиль или движется, направление движения автомобиля (движется по прямой, вперед или назад, повернул направо/налево). Сначала сеть обучают (на имеющихся размеченных данных) и тестируют на десктопе. На телефон устанавливается пред-обученная версия (например, \"легкая\" версия tensorflow) с готовой моделью, которая производит обработку видеосигнала. Что требуется: Провести анализ имеющихся решений (state of the art); Установить выбранный фреймворк; Изучить архитектуру и возможности выбранного фреймворка, библиотек; Реализовать алгоритм классификации (предобработка данных, модель нейронной сети); Разделить имеющийся датасет (видеозаписи с размеченными состояниями автомобиля, в котором установлен видеорегистратор) на два набора: для обучения модели и для тестирования модели; Выполнить эксперименты на размеченных данных для получения метрик и на неразмеченных данных для исследования генерализации модели; Написать отчет об исследовании, подготовить презентацию. Обязательно должен: знать: Python уметь: работать с Git, использовать Open Source фреймворки и библиотеки, искать необходимые наборы данных в открытом доступе владеть: навыками изучения программного кода, документаций. Желательно должен: знать: принципы работы машинного обучения, предобработки данных уметь: реализовывать модели нейронных сетей, собирать метрики, визуализировать данные владеть: фреймворками TensorFlow или PyTorch, библиотекой OpenCV. В результате получит: знания: технологии машинного обучения, нейронные сети умения: работать с фреймворками машинного обучения опыт: работа с нейронными сетями, проведение экспериментов, подготовка отчетов и презентаций. ",
    "need_match": false
  },
  {
    "id_rpd": 3490,
    "id_proj": 57,
    "name_rp": "Спецификация, проектирование и архитектура программных систем",
    "name_proj": "Стажировка в Digital Security по аудиту защищённости ПО  ",
    "text_rp": "Дисциплина «Спецификация, проектирование и архитектура программных систем» предусматривает изучение методов выявления требований, анализа функциональных и нефункциональных требований, документирования требований и управления требованиями к программным системам, обеспечивает формирование знаний об организации архитектуры программных систем и умений по проектированию программных систем с применением современных методов и средств. Рассматриваются как проблемы общего характера, возникающие в процессе проектирование программных систем, так и конкретные методы, обеспечивающие достижение оптимального качества архитектуры системы с учетом результатов анализа требований.. Целью дисциплины является получение теоретических знаний в области спецификации, проектирования и архитектуры программных систем, а также практических навыков по применению полученных знаний для решения задач профессиональной деятельности. Задачей дисциплины является приобретение знаний, умений и навыков в области; - анализа требований с использованием стандартов и систем автоматизации разработки требований; - архитектур программных систем; - проектирования программных систем. Студенты должны приобрести знания: - формальных методов, технологий и инструментов разработки программного продукта, методов выявления требований, общих стратегий и конкретных методов проектирования программных систем; - основ моделирования и анализа программных систем, разработки, спецификации и управления требованиями; - теоретических основ архитектурной и программной организации информационных систем; - концепций и стратегий архитектурного проектирования программного продукта, видов структур и архитектур программных систем, их особенностей; - состава, форм и содержания документов, разрабатываемых при проектировании программных систем. Студенты должны приобрести умения: - разрабатывать и специфицировать требования, применять методы выявления и анализа функциональных и нефункциональных требований, использовать инструментальные средства, поддерживающие разработку и анализ требований; - конструировать программное обеспечение, разрабатывать основные программные документы, проводить структурную декомпозицию программной системы на компоненты, разрабатывать статические и динамические представления архитектуры программной системы; - использовать типовые архитектурные решения при проектировании программной системы, применять шаблоны проектирования и шаблоны интеграции. Студенты должны освоить навыки: - разработки и отладки программ на алгоритмических языках программирования, навыками разработки, анализа и документирования требований; - разработки архитектуры программной системы, методами обеспечения качества архитектуры программной системы, технологиями и средствами проектирования программных систем; - использования методов и средств разработки и оформления технической документации.. Вопрос №1 Назовите подход к проектированию автоматизированных систем, основанный на использовании единой модели предметной области  1.Структурное (функционально-модульное) проектирование  2.Объектно-ориентированный подход  3.Предметно-ориентированное проектирование  Вопрос №2 Укажите модель, на основании которой должны приниматься решения при проектировании (дизайне) автоматизированной системы  1. Модель требований  2. Дизайн системы  3. Модель реализации  4. Процессная модель  Вопрос №3 Укажите метафору, соответствующую автоматизированной системе, которая предназначена для ввода, структурированного хранения и обработки данных, оптимизированной для выполнения максимального количества транзакций за короткие промежутки времени  1.Учетная система  2.Аналитическая система  3.Потоковая система  4.Моделирующая система . Экзаменационный тест формируется из вопросов тестов текущего контроля и состоит из 54 вопросов . Министерство науки и высшего образования Российской Федерации ФГАОУ ВО «Санкт-Петербургский государственный электротехнический университет «ЛЭТИ» имени В.И. Ульянова (Ленина)» ____________________________________________________________ ЭКЗАМЕНАЦИОННЫЙ БИЛЕТ № 1 Дисциплина Спецификация, проектирование и архитектура программных систем  ФКТИ 1. Требования в контексте системного проектирования.  2. UML и современные технологии.   УТВЕРЖДАЮ Заведующий кафедрой                                                   К.В. Кринкин. Введение. Место дисциплины в ООП. Рабочая программа дисциплины. Материал, выносимый на аттестацию. Формы проведения аттестации. Тема 1. Программная инженерия. Основные понятия и определения. Программная инженерия. Система. Окружение. Миссия. Заинтересованное лицо. Системный подход. Классификация информационных систем. Нормативно-методическое обеспечение. Стандарты Российской Федерации в области разработки программного обеспечения. SWEBoK. Предметно-ориентированное проектирование. Тема 2. Разработка программного обеспечения на основе моделей. Особенности программного проекта. Причины неудач в проектах. MDD-разработка. Способы описания функциональных требований. Стоимость сложности программного продукта. Валидация и верификация моделей. Тема 3. Каноническое проектирование информационной системы. Комплекс стандартов ГОСТ 34. Стадии канонического проектирования. Тема 4. Спецификация и управление требованиями. Требования в контексте системного проектирования. Требования и качество. Требования и процесс выполнения проекта. Общий процесс разработки требований. Описание и анализ требований. Разработка требований в области проблем. Разработка требований в области решений. Тема 5. Визуальное моделирование. Структурный подход. Что такое моделирование. Структурные методы анализа и проектирования программного обеспечения. Диаграммы IDEF. Диаграммы DFD. BPwin. Тема 6. Визуальное моделирование. Унифицированный язык моделирования UML. Методология анализа, проектирования и разработки программного обеспечения. Принципы объектно-ориентированной методологии разработки программного обеспечения. UML и современные технологии. Тема 7. Архитектура программных систем. Типовые архитектурные решения. Цель проектирования. Архитектура системы. Типовые решения (паттерны). Типовые решения распределенной обработки данных. Заключение. Общие выводы по курсу.",
    "text_proj": "Стажировка в Digital Security по аудиту защищённости ПО. Summ3r 0f h4ck 2022. Обучающая программа в Digital Security Digital Security приглашает на традиционную летнюю обучающую программу «Summ3r 0f h4ck». Она пройдет c 4 по 29 июля 2022 года в нашем офисе в Санкт-Петербурге. Прием заявок продлится до 1 мая (включительно) Подробности.   https://dsec.ru/about/summerofhack/                 . Обязательно должен: знать: основы информационной безопасности уметь:  программировать на C/C++ владеть: . Желательно должен: знать:  уязвимости ПО уметь:  программировать на JS, PHP, Python владеть: . В результате получит: знания:  способы поиска уязвимостей в приложениях на С\\С++  и в веб-приложениях  ( умения:  применение методов white-box и black-box, полезные трюках при reverse engineering (IDAPython, Ghidra, DBI), премудростях фаззинга приложений (KLEE, libfuzz, AFL), пентестинг веб-приложений опыт: аудита программного обеспечения. Начало стажировки. Сбор заявок на стажировку . Завершение стажировки. Защита отчетов по выполненным работам. ",
    "need_match": false
  },
  {
    "id_rpd": 5981,
    "id_proj": 26,
    "name_rp": "Риторика",
    "name_proj": "Программно-аппаратное конфигурирование сети лаборатории",
    "text_rp": "Предмет «Риторика», изучаемый в высших учебных заведениях представляет собой теоретическое и практическое освоение основ ораторского искусства, приобретение навыков устной речи и непосредственная реализация их на материале конкретных ситуаций речевого общения. Программа дисциплины предусматривает лекционные занятия, на которых изучаются исторические и теоретические аспекты риторики, и практические занятия, на которых отрабатываются навыки ораторского искусства. . При изучении дисциплины обучающиеся получают теоретические знания и практические навыки, необходимые для подготовки публичного выступления и его осуществления в профессиональной деятельности. Задачи дисциплины: Освоение методики подготовки форма и содержания публичного выступления. Освоение методики работы над голосом и дикцией. Формирование умений и навыков подготовки и осуществления публичного выступления. Освоение знаний о развитии риторических традиций в современном обществе, об основных закономерностях использования жестово-мимических средств общения; взаимосвязи риторики и пиитики. Развитие умений использовать основные языковые и интонационные средства выразительности, навыков подготовки и произнесения публичного выступления. Развитие навыков презентации публичного выступления. Развитие навыков работы с голосом и дикцией. . Цель ИДЗ - сформировать навык подготовки и осуществления публичного выступления.  Планируется выполнение 5 индивидуальных домашних заданий. Студент самостоятельно выбирает тему для публичного выступления, разрабатывает его форму и содержание. Письменный вариант выступления (доклада) 3-4 страницы. Должны быть использованы источники (3-5 шт.) Критериями оценки ИДЗ являются содержательность, композиционное единство и качество текста доклада.  Выступление с докладом на 10 минут со слайдовую презентацией (10-15 слайдов). Критерии оценивания выступления: наличие чёткой структуры выступления, содержательность, ясность, логичность, соответствие нормам литературного языка, качество презентации. Шкала оценивания:  \"отлично\" - соответствие всем критериям, \"хорошо\" - соответствие 4 из 6 критериев, \"удовлетворительно\" - соответствие 3 из 6 критериев, \"неудовлетворительно\" - несоответствие критериям.. История риторики. Риторика Древней Греции и Древнего Рима. История риторики России XVII – XIX в. Риторические традиции в нашем обществе. Психотехника в системе К.С. Станиславского. Мастерство речевого взаимодействия. Различные подходы к освоению психотехники речи. Психологические особенности выступающего. Внешняя техника речи. Теоретические основы постановки речевого голоса. Методики работы над голосом. Речевые средства выразительности (звуковой диапазон, динамический диапазон, тембр голоса, темпо-ритм речи). Логика речи. Законы построения речи (правила расстановки логических пауз и ударений). Культура речи. Соблюдение норм русского языка. Мелодика русской речи. Мелодика русской речи (основные мелодические конструкции). Дикция в звучащей речи. Основные методические приемы работы над дикцией. Языковые средства выразительности. Языковые средства выразительности (тропы и риторические фигуры). Параязык (жестов – мимические средства общения). Риторика и пиитика, как взаимопроникаемые виды искусств. Риторика и пиитика, как взаимопроникаемые виды искусств. Основы русского стихосложения. Спор, дискуссия, дебаты, полемика. Теория спора. Нормы поведения участников спора. Речевое взаимодействие участников спора. ",
    "text_proj": "Программно-аппаратное конфигурирование сети лаборатории. Видео-презентация проекта https://youtu.be/uLePbMkxzZE Цель данного проекта состоит в построении и отладке программно-аппаратной системы наблюдения и отладки решений на полигоне автономного транспорта лаборатории мобильных интеллектуальных систем.  Задачи: Настройка системы управления конфигурациями Ansible на парке машин лаборатории интеллектуальных мобильных систем Разработка решения захвата видео камеры наблюдения полигона в трансляцию конференций Zoom Тестирование онлайн-курса по GDB и Valgrind Формат работы: смешанный: заочный + очный Очно в аудитории 3501 Прототипирование при отсутствии необходимости работы с оборудованием возможно выполнять дистанционно. Ориентировочно 2-3 курс Навык работы с ОС Linux (Ubuntu) Знание языка Си, основ отладки программ Умение самостоятельно находить информацию, учиться новому Умение следовать инструкции Аккуратность  Умение пользоваться отверткой Знание английского языка на уровне чтения технической документации Понимание базовых принципов организации ЛВС. Плюсом будет любой опыт работы с библиотеками автоматизации настройки и любой опыт наладки систем видеофиксации. . В результате получит: знания о устройстве систем машинного зрения и систем автоматизированной постановки эксперимента для задач автономного транспорта, умения настройки и отладки реальных роботехнических систем, опыт участия в передовом исследовательском проекте. . Тестовое задание проекта. Составить docker-compose файл, позволяющий запустить 2 докер-контейнера, объединенные в одну локальную сеть (изолированную от сети хост-машины)   Программа-клиент, запущенная в одном контейнере должна передавать строку “docker test #K” по TCP программе-серверу, запущенной во втором контейнере. Программа-сервер должна печатать полученные данные в лог, доступный командой docker log.   #K - порядковый номер сообщения (0, 1, 2, …) Строку передавать раз в секунду   Способ реализации программ клиента и сервера может быть любым (стандартные утилиты / самостоятельно написанные программы / …)   В качестве решения прислать ссылку на репозиторий с docker-compose файлом и инструкцией по запуску. ",
    "need_match": false
  },
  {
    "id_rpd": 6075,
    "id_proj": 41,
    "name_rp": "Методы оптимизации",
    "name_proj": "Разработка подводного телеуправляемого робота на гусеничном шасси",
    "text_rp": "Рассматривается классификация задач и методов оптимизации, постановка задачи оптимизации, математические модели основных классов оптимизационных задач. Изучаются классические методы отыскания экстремумов функций и численные методы минимизации функций без ограничений. Изучаются методы решения общих задач линейного программирования и транспортных задач линейного программирования по критерию стоимости. Рассматриваются усложненные постановки транспортных задач в матричной постановке, а также транспортные сети и другие основные задачи на графах. Изучаются условия оптимальности и численные методы оптимизации задач нелинейного программирования с ограничениями. Рассматриваются решения динамических оптимизационных задач методом динамического программирования.. Целью освоения дисциплины \"Методы оптимизации\" является приобретение студентами теоретических знаний в области математического аппарата формализованных оптимизационных задач и алгоритмов их решения и формирование умений и практических навыков для решения практических задач. Задачами изучения дисциплины являются: - приобретение базовых знаний по методам и алгоритмам решения оптимизационных задач; - формирование умений и практических навыков использования методов и алгоритмов решения оптимизационных задач; - освоение студентами навыков применения методов и алгоритмов оптимизации в избранной сфере деятельности. Получение студентами знаний об основных классах оптимизационных задач и методах решения экстремальных задач в нормированных пространствах, рассмотрение возможностей и путей использования методов оптимизации в избранной сфере деятельности. Развитие у студентов умений создавать математические модели для оптимизационных задач разных классов и использовать аналитические и численные методы при решении оптимизационных задач. Формирование у студентов практических навыков решения оптимизационных задач в избранной сфере деятельности.. . Министерство науки и высшего образования Российской Федерации ФГАОУ ВО «Санкт-Петербургский государственный электротехнический университет «ЛЭТИ» имени В.И. Ульянова (Ленина)» ____________________________________________________________ ЭКЗАМЕНАЦИОННЫЙ БИЛЕТ № 1 Дисциплина Методы оптимизации   ФКТИ 1. Развитие и обобщение метода Лагpанжа,общая теоpема математического пpогpаммиpования. 2. Метод Фибоначчи,метод золотого сечения. 3. Задача. УТВЕРЖДАЮ Заведующий кафедрой                                                   В.В.Цехановский. Введение. Предмет курса и его задачи. Краткий исторический обзор. Значение и роль методов оптимизации в задачах построения систем управления, а также в области совершенствования экономических процессов в народном хозяйстве. Структура и содержание курса, его связь с другими дисциплинами учебного плана и место в подготовке дипломированного специалиста. Формализованная постановка задачи оптимизации. Классификация задач и методов оптимизации. Система обозначений. Выпуклые множества. Выпуклые функции. Постановка задачи оптимизации. Математические модели основных классов оптимизационных задач. Примеры задач оптимизации. Общие методы линейного программирования. Постановка общей задачи линейного программирования. Каноническая форма задачи. Основные свойства задачи линейного программирования и области ее определения. Геометрический метод решения задач линейного программирования. Прямая и двойственная задачи. Теоремы двойственности, свойства взаимно двойственных задач, критерий оптимальности плана задачи линейного программирования. Общая схема решения задачи линейного программирования. Признак оптимальности опорного плана. Базисные и допустимые базисные решения. Модифицированные жордановы исключения. Алгебраические основы метода последовательного улучшения плана. Алгоритм метода. Вырожденность. Отыскание начальных опорных планов, метод искусственного базиса. М-метод. Двойственный метод последовательного улучшения плана. Другие методы. Сравнительная оценка методов решения общей задачи линейного программирования. Задачи линейного программирования транспортного типа. Понятие о транспортной задаче линейного программирования по критерию стоимости в матричной постановке. Циклы в транспортной матрице. Свойства транспортной задачи. Связь между переменными задачи. Распределительный метод. Метод потенциалов. Методы построения первого допустимого базисного решения транспортной задачи. Транспортные задачи с ограничениями на пропускные способности. Другие усложненные постановки транспортных задач и методы их решения, распределительные задачи. Транспортные задачи по критерию времени. Транспортные сети и другие задачи на графах. Основные понятия о графах и сетях. Сетевая модель транспортной задачи. Модель с промежуточными пунктами. Свойства потока в сети. Задача о максимальном потоке. Метод Форда-Фалкерсона. Кратчайшие цепи и потоки минимальной стоимости. Линейная сетевая задача. Методы решения сетевых задач. Классические методы отыскания экстремума функций. Минимизация одномерных и многомерных функций без ограничений. Необходимые и достаточные условия экстремума. Классическая задача условной оптимизации. Стратегические седловые точки. Численные методы минимизации функций без ограничений. Понятие о численных методах оптимизации. Методы поиска экстремума функций одной переменной: одномерный пассивный поиск; прямой последовательный поиск - методы дихотомии, Фибоначчи, золотого сечения, квадратичной аппроксимации; методы одномерной оптимизации с использованием производных. Оптимизация многомерных функций: эвристические методы прямого поиска и сопряженных направлений; градиентные методы и методы второго порядка и сопряженных градиентов. Оценка скорости сходимости различных методов. Задачи нелинейного программирования с ограничениями. Понятие о нелинейных задачах математического программирования. Условия регулярности. Теорема Куна-Таккера. Метод неопределенных множителей Лагранжа для задач с ограничениями общего вида. Общая теорема математического программирования, необходимые и достаточные условия оптимальности. Численные методы решения задач нелинейного программирования с ограничениями. Метод кусочно-линейной аппроксимации. Квадратичное программирование. Методы решения задач квадратичного программирования. Градиентные методы: метод проекции градиента, метод допустимых направлений. Методы штрафных и барьерных функций. Методы случайного поиска. Динамическое программирование. Постановка задачи оптимального управления. Многошаговые процессы, принцип оптимальности динамического программирования. Метод динамического программирования для дискретных систем. Метод динамического программирования для непрерывных систем. Решение задач распределения ресурсов методом динамического программирования. Решение комбинаторных задач методом динамического программирования. Динамическое программирование в задачах управления. Заключение. Роль вычислительной техники и специализированного программного обеспечения для решения оптимизационных задач.",
    "text_proj": "Разработка подводного телеуправляемого робота на гусеничном шасси. Разработка программного и аппаратного обеспечения подводной роботизированной системы на основе гусеничной платформы с манипулятором. Создание телеуправляемого водонепроницаемого шасси. Разработка сенсорной системы робота. Разработка подсистемы управления шасси и манипулятором. Полевые испытания робота на водоеме. Основы Arduino IDE, коммуникабельность, владение английским языком на уровне Basic, общая техническая грамотность. Знание цифровой и аналоговой схемотехники, выносливость, целеустремленность. Знания в области дизайна подводных роботизированных систем. Практические навыки проектирования комплексных объектов робототехники. Опыт разработки программно-аппаратных комплексов общего назначения Незабываемый опыт полевой экспедиции на водоемы нашей необъятной Родины с погружениями за застрявшим роботом. ",
    "need_match": false
  },
  {
    "id_rpd": 5663,
    "id_proj": 47,
    "name_rp": "Тестирование и сопровождение программного обеспечения",
    "name_proj": "Анализ и обучение рекомендательных моделей для формирования образовательных траекторий",
    "text_rp": "Цели дисциплины охватывают ряд направлений, связанных с планированием тестирования, выявления рисков продукта и проекта, составления критериев входа в тестирование и выхода, управления инцидентами, разработку тестов, выбор методов тестирования, осуществление тестирования, составление итоговой отчетности по тестированию. . Цель учебной дисциплины заключается в изучении усовершенствования техники логического тестирования и отладки программ, а также применении полученных навыков в тестировании и отладке программ, формирование у студентов профессиональных компетенций, связанных с использованием теоретических знаний и практических навыков в области обеспечения качества программного обеспечения. Задачи дисциплины: 1). Изучение основных процессов и видов тестирования, моделей разработки ПО, процессов сопровождения ПО, получение знаний о методах управления процессом сопровождения, методах организации работы при решении задач сопровождения ПО. 2). Формирование умений планировать тестирование, выявлять риски продукта и проекта, составлять критерии входа в тестирование и выхода, управлять инцидентами, разрабатывать тесты, выбирать методы тестирования, осуществлять тестирование, составлять итоговую отчетность по тестированию, формулировать требования к уровням сопровождения ПО, использовать международные и отечественные стандарты в области сопровождения ПО, использовать нормативные правовые документы при сопровождении ПО. 3). Освоение навыков разработки тестов (эквивалентное разбиение, анализ граничных значений, тестирование таблицы решений, тестирование таблицы переходов, тестирование по сценариям использования), интегрированной средой разработки и различными инструментами тестирования и планирования тестирования. Знания: - об основных методах и средствах эффективного анализа функционирования программного обеспечения; - об основных видах работ на этапе сопровождения программного обеспечения; - об основных принципах контроля конфигурации и поддержки целостности конфигурации программного обеспечения; - о средствах защиты программного обеспечения в компьютерных системах. Умение: - подбирать и настраивать конфигурацию программного обеспечения компьютерных систем; - использовать методы защиты программного обеспечения компьютерных систем; - проводить инсталляцию программного обеспечения компьютерных систем; - производить настройку отдельных компонентов программного обеспечения компьютерных систем; - анализировать риски и характеристики качества программного обеспечения. Навыки: - настройки отдельных компонентов программного обеспечения компьютерных систем; - выполнения отдельных видов работ на этапе поддержки программного обеспечения компьютерной системы.. Введение. Место тестирования в жизненном цикле разработки программного обеспечения. Основные понятия дисциплины. Роль тестирования в разработке программного обеспечения, сопровождении и функционировании программного обеспечения. Планирование и управление тестированием. Анализ и проектирование тестов. Природа сопровождения. Потребность в сопровождении. Приоритет стоимости сопровождения. Категории сопровождения. Тестирование в модели ЖЦ. Уровни и Типы тестирования. Альфа тестирование, бета тестирование, компонентное тестирование. Итерационное тестирование. Системное тестирование. Приемочное тестирование. Тестирование методом черного ящика, покрытие кода, функциональное тестирование, тестирование взаимодействия, нагрузочное тестирование, тестирование восстановления, тестирование производительности. Тестирование переносимости, тестирование надежности, тестирование безопасности, стресс-тестирование, структурное тестирование, тестирование удобства использования, тестирование методом белого ящика. Анализ влияния, тестирование в период сопровождении. Формальное и неформальное рецензирование. Критерий входа, инспекция, метрика, модератор, равноправный анализ, эксперт, секретарь, технический анализ, сквозной контроль. Действия (шаги) формального рецензирования. Роли и обязанности. Типы рецензирований. Факторы успешного проведения. Компилятор, коэффициент сложности, поток управления, поток данных, статистический анализ. IEEE 1028] IEEE Std 1028 (2008) IEEE Standard for Software Reviews and Audits. Методы проектирования тестов. Жизненный цикл дефекта. Типы дефектов на разных фазах тестирования. Управление дефектами. Баг-трэкинговые системы. Тест-кейсы. Спецификация тестовых сценариев, проектирование теста, расписание выполнения тестов, спецификация процедуры тестирования, автоматизированный сценарий тестирования, трассируемость. Разработка тестов методом черного ящика, разработка тестов методом белого ящика, метод создания тестов на основе опыта, метод разработки тестов на основе спецификации, структурный метод разработки тестов. Анализ граничных значений, тестирование таблицы решений. Эквивалентное разбиение, тестирование таблицы переходов, тестирование по сценариям использования. Покрытие кода, покрытие альтернатив, покрытие операторов, тестирование на основе структуры. Исследовательское тестирование, атака (на недочеты). Выбор методов тестирования. Управление тестированием. Тестировщик, руководитель тестирования, менеджер тестирования. Организация и независимость тестирования. Подход к тестированию, стратегия тестирования. Планирование тестирования. Управление конфигурацией. Управление версиями. Риски продукта, риски проекта, ориентированное на риски тестирование. Инструмент покрытия, инструмент отладки, инструмент динамического анализа, инструмент управления инцидентами, инструмент нагрузочного тестирования, инструмент моделирования, инструмент мониторинга, инструмент тестирования производительности, эффект зондирования, инструмент управления требованиями, инструмент рецензирования, средство защиты, инструмент статистического анализа, инструмент стрессового тестирования, тестовый компанатор, инструмент подготовки тестовых данных, инструмент проектирования тестов, тестовая обвязка, инструмент выполнения тестов, инструмент управления тестированием, инструмент интегрированной среды модульного тестирования. Ключевые вопросы сопровождения программного обеспечения. Технические вопросы. Управленческие вопросы. Оценка стоимости сопровождения. Измерения в сопровождении программного обеспечения. Процессы сопровождения. Работы по сопровождению. Техники сопровождения. Реинжиниринг. Обратный инжиниринг. Введение в ITIL. Что такое ITIL, другие существующие методологии. Управление ИТ-сервисами (IT Service Management). Жизненный цикл сервиса. Ролевая модель, понятие Роли. RACI-модель. Стратегия сервиса и проектирование сервиса. Ценность управления услугами. Понятия и определения. Формирование стратегии. Оценка рисков. Управление финансами. Управление спросом. Принцип 4Р. 5 составляющих сервисного дизайна. Управление уровнем услуг. Управление каталогом услуг. Управление мощностями. Управление доступностью. Управление непрерывностью. Управление информационной безопасностью. Управление поставщиками. Преобразование сервиса и Эксплуатация сервиса. Достижение баланса. Управление инцидентами. Управление событиями. Управление запросами. Управление проблемами. Управление доступом. Функции. Сервис Деск (Service Desk). Service Desk: Роль. Service Desk: Организационная структура. Service Desk: Критерии построения. Service Desk: Возможные проблемы внедрения. Service Desk: Метрики. Техническое управление. Управление операционной деятельностью ИТ. Управление приложениями. Постоянное улучшение сервисов. Заключение. Цели CSI. Роль постоянного улучшения сервисов. Модель PDCA. Метрики. 7-ми ступенчатый процесс улучшения сервиса. Развитие задач тестирования и сопровождения ПО.",
    "text_proj": "Анализ и обучение рекомендательных моделей для формирования образовательных траекторий. Обучаемые рекомендательные модели должны формировать рекомендации выбору обучающемуся на всем периоде его обучения, начиная от выбора направления при поступлении и выбора вакансии при трудоустройстве или смены работы. При этом выбор не ограничивается только учебными модулями. Он связан выбором проектов, преподавателей, участием в различных мероприятиях, курсов ДПО и т.п. Результаты выбора формируют цифровой след обучающегося. На правильность выбора влияет множество факторов, включая цифровой след и имеющуюся цель (например, занять ту или иную должность в компании). Для того чтобы учесть все эти факторы разрабатывается рекомендательная машина, которая помогает обучающемуся сделать правильный выбор. В данном проекте требуется выполнить:  анализ имеющихся данных,  выбрать наиболее важные признаки,  выполнить предобработку данных,  выбрать модель машинного обучения для формирования рекомендаций,  обучить и оценить полученную модель повысив ее качество до необходимого предела . Обязательно должен: знать: модели и алгоритмы машинного обучения уметь: анализировать данные (выявлять зависимости между признаками, их значимость, пропущенные значения, выбросы и т.п.) владеть: инструментами машинного обучения. Желательно должен: знать: методы преобразования данных и улучшения их качества, особенности методов машинного обучения уметь: очищать данные и повышать их качество владеть: инструментами машинного обучения: scikit-learn, panda, PyTourch, TensorFlow  и др. В результате получит: знать: методы преобразования данных и улучшения их качества, особенности методов машинного обучения уметь: очищать данные и повышать их качество владеть: инструментами машинного обучения: scikit-learn, panda, PyTourch, TensorFlow  и др. Написать мотивационное письмо. Просьба описать свои знания и навыки в форме краткого резюме, а также указать почему именно вы выбрали данный проект. ",
    "need_match": false
  }
]