[
	{
		"id_rp": "1000",
		"id_proj": "15",
		"name_rp": "АЛГОРИТМЫ БЕСПИЛОТНОГО ТРАНСПОРТА",
		"name_proj": "Разработка системы движения роя дронов в пространстве",
        "text_rp": "Данный курс знакомит слушателей с основами управления беспилотными автомобилями. Рассматриваются основные компоненты таких сиcтем: модели и методы восприятия информации при помощи сенсоров или человеко-машинного интерфейса; методы определения собственного положения на известной и неизвестной карте; методы планирования пути (в том числе на графах и не на графах); фреймворк, подходящий для разработки собственных решений для беспилотных транспортных средств. Данный курс знакомит с уровнями автономности беспилотных средств, с основами машинного обучения, в том числе при помощи нейросетей, операционной системой Robot Operating System, являющейся де-факто стандартным решением для многих роботов, в том числе бепилотных автомобилей. Курс позволяет освоить основные приёмы программирования в ROS, алгоритмов локализации и построения карты (SLAM), алгоритмов машинного зрения . Сформировать у обучающихся знания, умения и навыки обоснованного и результативного применения существующих методов, моделей, а также алгоритмов для управления беспилотными автомобилями и другими автономными интеллектуальными системами. Обучить применению существующих, а также освоению новых методов и моделей беспилотного транспорта. Дать знания о существующих методах и алгоритмах беспилотного транспорта, а также методологии построения систем беспилотного транспорта. Дать умения разрабатывать алгоритмы для беспилотного транспорта и применять методы компьютерного зрения и машинного обучения для решения задач беспилотного транспорта. Привить навыки разработки и анализа алгоритмов автономного движения, наблюдения окружающего мира, фильтрации данных. ИДЗ  заключается в аналитическом поиске необходимой информации для решения поставленной задачи, решении и развернутом описании решения. Источниками информации являются лекции, основная и дополнительная литература, интернет-источники. Задание на ИДЗ выдается в начале семестра. Отчеты по ИДЗ оформляются в соответствии с требованиями к отчету по лабораторной работе, приведенными на сайте СПбГЭТУ \"ЛЭТИ\" в разделе \"Шаблоны оформления студенческих работ\". Объем отчета не менее 5 страниц формата А4, отчет представляется в электронном виде. Примерные темы ИДЗ: Разработайте приложение, основанное на применении ROS, обрабатывающее данные лазерного дальномера Разработайте или модифицируйте алгоритм SLAM для решения задачи одновременной локализации и построения карты Разработайте или модифицируйте алгоритм семантической сегментации изображений при помощи нейросетей Разработайте алгоритм движения беспилотного автомобиля в симуляторе. . ЭКЗАМЕНАЦИОННЫЙ БИЛЕТ № 1 Дисциплина Алгоритмы беспилотного транспорта 1. Локализация на известной карте. Структуры данных для хранения карты в памяти. 2. Скан матчер на основе стохастического поиска. Достоинства, недостатки и область применения УТВЕРЖДАЮ Заведующий кафедрой . Введение. Общие сведения об автономных и интеллектуальных системах. Беспилотные автомобили. Задачи, решаемые беспилотными автомобилями. Уровни автоматизации беспилотных автомобилей. Датчики и сенсоры. Стек алгоритмов, выполняемых беспилотными автомобилями. Введение в Robot Operating System. Назначение ROS. Место ROS в беспилотных автомобилях. Программная единица в ROS. Методы взаимодействия между программными единицами. Разработка собственного приложения, использующего ROS. Программирование с использованием ROS. Подготовка CMake файлов, xml-файлов с параметрами. Запуск готовых приложений. Компиляция и сборка приложений ROS. Структура рабочего каталога. Разработка, запуск и логгирование собственных приложений. Использование пакетов, поставляемых с ROS. Визуализация графа взаимодействий программных модулей ROS. Назначение и применение пакетов ROS для упрощения разработки. Назначение и применение пакета TF. Использование сгенерированного исходного кода. Инструменты для визуализации и отладки приложений, использующих ROS. Пакет RVIZ, семейство пакетов rqt, пакет Rqt_graph, пакет Gazebo. Настройка файлов логов. Отладка средствами ROS. Многопоточность в ROS. Введение в машинное обучение. Обучение с учителем. Задача классификации и регрессии. Обучение без учителя. Кластеризация. Нейронные сети. Понятие нейрона, перцептрона и простейшая нейронная сеть. Слои в нейронных сетях. Применение нейронных сетей. Нейронные сети прямого распределения. Перцепторны. Полносвязные сети. Нейронная сеть Хопфилда. Свёрточные нейронные сети. Развёртывающие нейронные сети. Классификация и кластеризация изображений при помощи нейронных сетей. Нейросеть Кохонена. Функционирование сети. Современные модификации свёрточных нейросетей для задачи кластеризации. Недостатки. Ускорение работы. Синтетические данные для обучения. Задача фильтрации данных. Постановка задачи фильтрации. Рекурсивный фильтр. Модель. Комплексирование. Априорная и апостериорная оценка. Расширенный фильтр Калмана. Матричная линеаризация. Фильтр Калмана со старением. Задача одновременной локализации и построения карты SLAM. Постановка задачи SLAM. Решение на базе фильтра Калмана. Фильтр частиц. FastSLAM. Gmappnig. Scan matching. Графовые подходы. Методы оценки качества SLAM алгоритмов. Применение SLAM к задаче беспилотных автомобилей. Методы представления и хранения карты. Карта в EKF SLAM. Сетка занятости. Детали реализации графовых алгоритмов SLAM. Определение и замыкание циклов в графе. Методы визуализации карты в ROS. Методы оценки качества построенной карты. Задача построения пути. Задача поиска пути на графе. Алгоритм Дейкстры. А*. Методы построения пути на неизвестной карте. Локальный планировщик пути. PID-регулятор. Синергия глобального и локального планировщика. Duckietown как модель города с беспилотными автомобилями. Назначение Duckietown. Описание составных частей. Робот Duckiebot. Компоненты робота. Автомат состояний Ducketown. Применение Duckietown в качестве модели беспилотного транспорта. Автоматизация движения по проложенному маршруту в симуляторе Duckietown. Датчики Duckiebot. Применение алгоритмов SLAM к Duckietown. Построение маршрута в Duckietown. Симулятор Duckitown. Запуск всех компонентов беспилотного автомобиля в симуляторе. Заключение. Обсуждение состояния прикладной технологии автопилотируемых транспортных средств на ближайшие годы.",
		"text_proj": "Разработка системы движения роя дронов в пространстве. Объект исследования: движения роя Предмет исследования: безопасность движения каждого участника роя в штатных и экстренных случаях Цель : обеспечить безопасность каждому участнику роя дронов во время выполнения манёвров и иных задач, для выполнения которых предполагается привлечение несколько дронов. Проблема: обеспечивать каждого дрона самостоятельной системой избегания препятствий дорого и неэффективно Формулировка задачи: необходимо сформулировать аппаратную и программную конфигурацию роя дронов так, чтобы в процессе выполнения полётной задачи с привлечением роя, обеспечивалась безопасность каждого участника роя индивидуально или в групповом взаимодйствии. Формулирование аппаратной части подразумевает ответ на вопрос, сколько дронов в рою и какими датчиками должны быть оснащены для достижения тех или иных показателей эффективности. Формирование программной конфигурации подразумевает реализацию алгоритма действий в штатной и нештатных ситуаций для обеспечения безопасности уастников роя. Обязательно должен: знать: язык программирования (С++ или Java или Python); уметь: работать в команде. Желательно должен: знать: математические сновы теории графов (алгоритм Дейкстры, А*.); владеть: английским языком достаточным для чтения статей. В результате получит: знания: математические основы движения дронов обособленно и в рое, алгоритмы машинного обучения; умения: проведение научного исследования, прикладное создание программного фреймворка; опыт: работы на предприятии в условиях проекта, близкого к реальному. Сформировать список методов безопасного роевого движения. 1.Сформировать список методов безопасного роевого движения. Создать framework, позволяющий решать задачу идентификации несколькими методами. 1.Создать framework, позволяющий решать задачу идентификации несколькими методами. Сформировать критерии сравнения алгоритмов. 1.Сформировать критерии сравнения алгоритмов. Сравнить запрограммированные алгоритмы по выбранным критериям. 1.Сравнить запрограммированные алгоритмы по выбранным критериям.",
		"need_match": true
	},
	{
		"id_rp": "1005",
		"id_proj": "40",
		"name_rp": "АНАЛИЗ ДАННЫХ В ИСКУССТВЕННОМ ИНТЕЛЛЕКТЕ",
		"name_proj": "Роботизированная система машинного творчества ARTCYBE",
		"text_rp": "Освещаемые в курсе теоретические и прикладные вопросы полезны для студентов, специализирующихся в области управления и информационных технологий в технических системах, компьютерного и математического моделирования. В курсе даются основы Data Science, включающие вопросы сбора, хранения и подготовки данных (выявление аномалий в сырых данных, очистка данных от шума, дополнение данных, заполнение (удаление) пропущенных значений), классификации и кластеризации, поиска ассоциативных правил, интерполяции, экстраполяции и аппроксимации, корреляционного и регрессионного анализа, искусственного интеллекта и машинного обучения, нейронных сетей, сверточных нейронных сетей. Кроме того, в курсе рассматривается современная вычислительная база в контексте решения задач Data Science (CUDA, GPU, FPGA, SoC). Уделяется внимание решению практических задач с использованием современных программно\u00ADаппаратных средств (MATLAB, Python, R, GPU).. Цель дисциплины - изучение математических моделей, методов и алгоритмов анализа данных и искусственного интеллекта и приобретения навыков их применения в профессиональной деятельности и навыков выбирать и применять методы сбора и извлечения знаний. Формирование знаний и умений, необходимых для решения задач в области анализа данных и искусственного интеллекта с использованием современной вычислительной базы. Приобретение теоретических знаний в области анализа данных и искусственного интеллекта. Умение использования современной вычислительной базы для решения задач в области анализа данных и искусственного интеллекта. Выбирать и разрабатывать программные компоненты систем искусственного интеллекта и ставить задачи по разработке или совершенствованию методов и алгоритмов для решения комплекса задач предметной области. Получение практических навыков использования современной вычислительной базы для решения задач в области искусственного интеллекта.. Контрольная работа проводится в виде тестирования. Сигнал, определенный в фиксированные (заданные) моменты времени и являющийся непрерывным по состоянию, называется: 1.     Дискретным сигналом 2.     Аналоговым сигналом 3.     Цифровым сигналом Реакция системы на цифровой единичный импульс при нулевых начальных условиях называется: 1.     Переходной характеристикой 2.     Импульсной характеристикой 3.     Амплитудно-частотной характеристикой Растекание спектра – это: 1.     Появление дополнительных составляющих в спектральном составе последовательности при вычислении ДПФ 2.     Повышение частоты следования спектральных линий (уменьшение периода дискретизации по частоте) за счет дополнения последовательности нулями 3.     Расширение спектра за счет умножения сигнала на специальную расширяющую последовательность Фильтр, пропускающий спектральные составляющие сигнала в заданной полосе частот и подавляющий спектральные составляющие сигнала за пределами данной полосы, называется: 1.     Фильтр нижних частот 2.     Полосно-пропускающий (полосовой) фильтр 3.     Полосно-задерживающий (режекторный) фильтр Укажите, какая из нижеприведенных задач решается с использованием обратной идентификации и адаптивных фильтров: 1.     Оценивание импульсной характеристики неизвестной системы 2.     Очистка сигнала от шума 3.     Компенсация искажений, вносимых неизвестной системой Сигнал, определенный в фиксированные (заданные) моменты времени и являющийся квантованным по состоянию, называется:        1.       Дискретным сигналом        2.       Аналоговым сигналом        3.       Цифровым сигналом Реакция системы на цифровой единичный скачок при нулевых начальных условиях называется:        1.       Переходной характеристикой        2.       Импульсной характеристикой        3.       Амплитудно-частотной характеристикой Фильтр, подавляющий спектральные составляющие сигнала в заданной полосе частот и пропускающий спектральные составляющие сигнала за пределами данной полосы, называется:        1.       Фильтр верхних частот        2.       Полосно-пропускающий (полосовой) фильтр        3.       Полосно-задерживающий (режекторный) фильтр Изменение частоты дискретизации сигнала в нецелое число раз называется:        1.       Интерполяцией        2.       Децимацией        3.       Передискретизацией Сигнал, непрерывный по времени и по состоянию называется:        1.       Дискретным сигналом        2.       Аналоговым сигналом        3.       Цифровым сигналом     ASIC – это 1.     Класс ПЛИС 2.     Фирма-изготовитель ПЛИС 3.     Заказная микросхема на основе программируемой логики       Открытым стандартом для написания программ для GPU в настоящее время является 1.     OpenCL 2.     C++ 3.     JAVA Именно эти две фирмы являются мировыми лидерами в производстве ПЛИС 1.     Intel FPGA (Altera), Atmel 2.     Intel FPGA (Altera), Xilinx 3.     Xilinx, Atmel          Именно это семейство ПЛИС фирмы Intel FPGA (Altera) относится к SOC 1.     CycloneV 2.     ArriaII 3.     MaxV          К семействам ПЛИС фирмы Intel FPGA (Altera) не относится следующее 1.     Cyclone 2.     Virtex 3.     Arria       Такую разрядность имеют DSP блоки в FPGA фирмы Intel FPGA (Altera) 1.     9x9 2.     18x18 3.     20x20       Помимо фирмы Nvidia технология распределённых вычислений на графических процессорах есть у фирмы 1.     Intel 2.     AMD 3.     Apple        Барьер для группы процессов или потоков означает, что 1.     Каждый поток (процесс) должен остановиться в этой точке и подождать достижения барьера всеми потоками (процессами) группы 2.     Выполнение программы дальше невозможно 3.     Все потоки после барьера объединяются       IDE среда фирмы Intel FPGA (Altera) для проектирования на ПЛИС называется 1.     QuartusII 2.     Vivaldo 3.     AVR-studio         Утилита в среде QuartusII для отладки в реальном времени называется 1.     SignalTap 2.     SignalProbe 3.     ChipPlanner. Билет содержит 2 теоретических вопроса из списка (из каждой группы \u00AD 1 вопрос). . Введение. Искусственный интеллект. Машинное обучение. Общая постановка задачи обучения по прецедентам. Типология обучения задач по прецедентам. Бустинг. Бэггинг. Области применения ИИ. Искусственный интеллект и машинное обучение. Как подготовить данные к моделированию: 5 операций Data Preparation. Почему нужно готовить данные к моделированию. Как Data Scientist готовит данные: методы и средства Data Preparation. Отберем то, что нужно Data Mining: как сформировать датасет для машинного обучения. Что такое датасет для Data Mining и из чего он состоит. Где искать датасеты. Каким бывает dataset: типы выборок. Как сформировать выборку для Data Mining. Зачем нужна очистка данных для Data Mining: 10 главных проблем подготовки датасета и способы их решения. Что такое очистка данных для Data Mining. От чего надо чистить большие данные. Как Data Scientist чистит данные: детали фазы Data Preparation Это не баг, а фича: генерация признаков для Data Mining. Признаки для Data Mining: определение и виды. Как проходит генерация признаков: 3 задачи этого этапа Data Mining и способы их решения.Data Preparation: полет нормальный – что такое нормализация данных и зачем она нужна. Сбор, хранение и подготовка данных. Дополнение данных, заполнение (удаление) пропущенных значений. Сырые данные. Выбросы. Причины выбросов. Определение выбросов. Критериии выбросов I. Гистограмма. Ящик с усами. Критерий Шовене. Критерий Граббса. Критерий Пирса. Критерий Диксона. Правило 3 сигм. Критерии выбросов II. Статистические тесты. Модельные тесты. Итерационные методы. Метрические методы. Методы подмены задачи. Методы машинного обучения. Ансамбли алгоритмов. ROC\u00ADанализ. Алгоритмы очистки сигналов от шума. Преобразование Фурье. Вейвлет\u00ADпреобразование. Фильтр Винера. Алгоритмы Empirical Mode Decomposition и Intrinsic Time\u00ADScale Decomposition. Алгоритмы очистки изображений от шума. Типовые шумы. Виды шумов: аналоговый, цифровой. Методы шумоподавления: пространственные, временные, пространственно\u00ADвременные. Качество шумоподавления. Метрики качества: PSNR и SSIM. Усредняющий фильтр. Медианный фильтр. Гауссовский фильтр. Билатеральный фильтр. Алгоритм NLM. Подготовка данных. Выявление аномалий в сырых данных, очистка данных от шума. Задача классификации. Типы входных данных. Типы классов. Области применения. Формальная постановка задачи. Алгоритмы классификации. Метод ближайших соседей. Байесовский классификатор. Деревья решений. Классификация. Задача кластеризации. Типы входных данных. Цели кластеризации. Функции расстояния. Формальная постановка задачи. Алгоритмы кластеризации. Метод kсредних. Метод c\u00ADсредних. Генетический алгоритм. Кластеризация. Задача поиска ассоциативных правил. Формальная постановка задачи. Концепции. Процесс построения ассоциативных правил. Алгоритмы поиска ассоциативных правил. Поиск ассоциативных правил. Аппроксимация. Постановка задачи. Метод наименьших квадратов. Линейная аппроксимация. Логарифмическая аппроксимация. Экспоненциальная аппроксимация. Степенная аппроксимация. Интерполяция. Постановка задачи. Локальная и глобальная интерполяция. Интерполяционный многочлен Лагранжа. Интерполяционный многочлен Ньютона. Экстраполяция. Временные ряды. Компоненты временных рядов. Объединение компонентов временного ряда. Оценка тренда. Виды функциональных зависимостей. Выделение тренда. Метод скользящего среднего. Метод экспоненциального сглаживания. Прогнозирование. Двойное экспоненциальное сглаживание. Метод Хольт\u00ADВинтерса. Качество прогнозирования. Аппроксимация, интерполяция и экстраполяция. Временные ряды: тренд, сезонность, шум. Прогнозирование. Аппроксимация. Постановка задачи. Метод наименьших квадратов. Линейная аппроксимация. Логарифмическая аппроксимация. Экспоненциальная аппроксимация. Степенная аппроксимация. Интерполяция. Постановка задачи. Локальная и глобальная интерполяция. Интерполяционный многочлен Лагранжа. Интерполяционный многочлен Ньютона. Экстраполяция. Временные ряды. Компоненты временных рядов. Объединение компонентов временного ряда. Оценка тренда. Виды функциональных зависимостей. Выделение тренда. Метод скользящего среднего. Метод экспоненциального сглаживания. Прогнозирование. Двойное экспоненциальное сглаживание. Метод Хольт\u00ADВинтерса. Качество прогнозирования. Корреляционный анализ. Регрессия и регрессионный анализ. Линейная регрессия. Нелинейная регрессия. Регрессионнный анализ. Что такое нейронная сеть (НС)? Хронология. Классификация НС. Этапы решения задачи. Области применения НС. Структура нейрона. Синапс. Принципы работы НС. Функция активации. Обучение, валидация, тестирование. Итерация. Эпоха. Ошибка. Нейрон смещения. Обучение НС. Градиентный спуск. Метод обратного распространения (МОР). Гиперпараметры. Cходимость. Переобучение. Нейронные сети. Сверточные нейронные сети (СНС). Архитектура СНС. Слой свертки. Слой активации. Пулинг или субдискретизирующий слой. Полносвязная НС. Обучение СНС. Преимущества СНС. Недостатки СНС. Сверточные нейронные сети. Цифровые процессоры обработки сигналов (ЦПОС). Графические процессоры (GPU). Программируемые логические интегральные схемы (ПЛИС). Технология CUDA.Системы на кристалле (SoC). Языки математических и научных расчетов: MATLAB, Python, R.",
		"text_proj": "Роботизированная система машинного творчества ARTCYBE. Комплексный проект в области робототехники и искусственного интеллекта.  Исследования в области компьютерного творчества (Computer Creativity). Генерация художественных изображений с помощью GAN-сетей по введенным растровым, свободная генерация изображений в заданном художественном стиле, переход от растровых изображений к векторным картам. Исследования в области машинного зрения. Разработка системы обратной связи для робота-живописца. Разработка конструкции художественных роботов различной архитектуры. Проведение художественного теста Тьюринга в формате выставки картин. Базовые знания программирования на MATLAB, коммуникабельность, высокая социализация. Знать основы аналоговой и цифровой схемотехники, методы обработки изображений, навыки слесарной работы, монтажа. Навыки работы с генеративными нейронными сетями, знания в области современной робототехники и аддитивных технологий, знания в области алгоритмов цифровой обработки изображений, опыт проектирования аддитивных установок.",
		"need_match": true
	},
	{
		"id_rp": "1009",
		"id_proj": "4",
		"name_rp": "РАЗРАБОТКА ПРИЛОЖЕНИЙ В РАСПРЕДЕЛЕННОЙ СРЕДЕ",
		"name_proj": "Разработка модулей обработки данных для библиотеки алгоритмов федеративного обучения FL4J ",
        "text_rp": "Дисциплина посвящена изучению основных принципов распределённых систем. В теоретической части курса рассматриваются вопросы о взаимодействии и синхронизации процессов, достижении непротиворечивости реплицируемых данных, обеспечении отказоустойчивости в распределенных системах. В процессе освоения дисциплины формируются практические навыки разработки распределенных приложений на объектно-ориентированном языке программирования Java с использованием различных моделей взаимодействия процессов. . Целью дисциплины является изучение принципов распределённых систем и формирование практических навыков разработки распределенных приложений с использованием различных моделей взаимодействия процессов. Получение теоретических знаний в области взаимодействия и синхронизации процессов, достижения непротиворечивости реплицируемых данных, обеспечения отказоустойчивости в распределенных системах. Формирование практических навыков разработки распределенных приложений на объектно-ориентированном языке программирования Java. Освоение подходов к построению архитектуры распределенного приложения. Знания принципов построения распределенных систем; методов и инструментальных средств систем искусственного интеллекта, критериев их выбора и методов комплексирования; основных критериев эффективности и качества функционирования системы искусственного интеллекта; методов, языков и программных средств разработки программных компонентов систем искусственного интеллекта. Умения разрабатывать распределенные приложения; выбирать, применять и интегрировать методы и инструментальные средства систем искусственного интеллекта, критерии их выбора и методы комплексирования; выбирать, адаптировать, разрабатывать и интегрировать программные компоненты систем искусственного интеллекта с учетом основных критериев эффективности и качества функционирования. Навыки использования интегрированной среды разработки в процессе создания распределенных приложений.. Введение. Предмет дисциплины и ее задачи. Историческая справка о развитии распределенных систем. Значение развития этого направления для искусственного интеллекта. Структура содержания дисциплины. Характеристика литературных источников. Модели взаимодействия процессов в распределенных системах. Потоки и процессы. Модели взаимодействия процессов - удаленное обращение к методам, системы очередей сообщений. Примеры использования удаленного обращения к методам на практике. Типы процессов в распределенных системах. Внутренняя организация процессов. Многопоточные технологии. Модель клиент-сервер и ее организация. Варианты миграции программ и процессов с машины на машину. Способы использования имен в распределенных системах. Имя и сущность. Организация доступа к сущности. Пространства имен. Разрешение имени. Реализация системы именования. Серверы имен. Примеры существующих реализаций пространств имен. Мобильные сущности. Подходы к их локализации. Организация имен. Взаимодействие сущностей именования и локализации. Механизмы автоматического удаления сущностей. Синхронизация процессов в распределенных системах. Синхронизация на основе реального времени. Синхронизация с одним относительным параметром упорядочивания. Определение распределенного глобального состояния и его запись в процессе синхронизации. Алгоритмы голосования. Распределенные взаимные исключения. Распределенные транзакции, их классификация и реализация. Реплицируемые данные в распределенных системах. Понятие репликации данных. Реплицируемые объекты. Непротиворечивость реплицируемых данных. Способы достижения непротиворечивости данных в распределенных системах. Модели непротиворечивости данных в распределенных системах с разделяемой памятью. Реализации моделей непротиворечивости - распространение обновлений и поддержание непротиворечивости реплик. Заключение. Основные направления дальнейшего развития и практического использования распределенных систем и технологий в искусственном интеллекте. ",
		"text_proj": "Разработка модулей обработки данных для библиотеки алгоритмов федеративного обучения FL4J.   Разработка фреймворка для алгоритмов федеративного обучения предназначенных для выполнения анализа данных (машинного обучения) на распределенных источниках данных без их передачи в центр обработки.  Технология предложена  в 2017 году Google Inc и предназначена для обучения на Больших данных в условиях когда данные не могут передаваться в облако по причине плохой связи или приватности данных. В настоящее время технология активно развивается и появляется множество библиотек на языке Python (FATE, PaddleFL, TensorFlow Federate и др.).     Разработанная в СПбГЭТУ \"ЛЭТИ\" библиотека FL4J (Federated Learning for Java) написана на языке Java. Она позволяет как реализовать алгоритмы машинного обучения для выполнения в федеративном режиме, так и подключать другие библиотеки, например, библиотеку DL4J для алгоритмов глубокого обучения.  В данном проекте требуется разработка: разработка модулей для чтения данных разных форматов; доработка модулей обработки данных (нормализации, пропущенных значений и т.п.); модулей преобразования наборов данных.  . Обязательно должен: знать: принципы ООП, язык программирования Java уметь: программировать на Java. Желательно должен: знать: работу с файлами и БД уметь: работать с файлами разных форматов Excel, Json и др. опыт: использования Unit тестов (JUnit). В результате получит: знания: работу с файлами и БД, методы преобразования и обработки данных умения: обрабатывать данные для машинного обучения опыт: программирование на языке Java, использования Unit тестов (JUnit). Резюме о навыках. Требуется написать кратко что Вы умеете и чем хотели бы заниматься (работа с изображениями, БД, иные форматы данных, улучшение производительности доступа к данным и др).",
		"need_match": true
	},
	{
		"id_rp": "1011",
		"id_proj": "14",
		"name_rp": "Тестирование и сопровождение программного обеспечения",
		"name_proj": "Тестирование и документирование стенда виртуальных рабочих мест (VDI) под российским ПО виртуализации",
		"text_rp": "Цели дисциплины охватывают ряд направлений, связанных с планированием тестирования, выявления рисков продукта и проекта, составления критериев входа в тестирование и выхода, управления инцидентами, разработку тестов, выбор методов тестирования, осуществление тестирования, составление итоговой отчетности по тестированию. . Цель учебной дисциплины заключается в усовершенствовании техники логического тестирования и отладки программ, а также применении полученных навыков в тестировании и отладке программ, формирование у студентов профессиональных компетенций, связанных с использованием теоретических знаний и практических навыков в области обеспечения качества программного обеспечения. Задачи дисциплины: 1). Изучение основных процессов и видов тестирования, моделей разработки ПО, процессов сопровождения ПО, получение знаний о методах управления процессом сопровождения, методах организации работы при решении задач сопровождения ПО. 2). Формирование умений планировать тестирование, выявлять риски продукта и проекта, составлять критерии входа в тестирование и выхода, управлять инцидентами, разрабатывать тесты, выбирать методы тестирования, осуществлять тестирование, составлять итоговую отчетность по тестированию, формулировать требования к уровням сопровождения ПО, использовать международные и отечественные стандарты в области сопровождения ПО, использовать нормативные правовые документы при сопровождении ПО. 3). Освоение навыков разработки тестов (эквивалентное разбиение, анализ граничных значений, тестирование таблицы решений, тестирование таблицы переходов, тестирование по сценариям использования), интегрированной средой разработки и различными инструментами тестирования и планирования тестирования. Знания: - об основных методах и средствах эффективного анализа функционирования программного обеспечения; - об основных видах работ на этапе сопровождения программного обеспечения; - об основных принципах контроля конфигурации и поддержки целостности конфигурации программного обеспечения; - о средствах защиты программного обеспечения в компьютерных системах. Умение: - подбирать и настраивать конфигурацию программного обеспечения компьютерных систем; - использовать методы защиты программного обеспечения компьютерных систем; - проводить инсталляцию программного обеспечения компьютерных систем; - производить настройку отдельных компонентов программного обеспечения компьютерных систем; - анализировать риски и характеристики качества программного обеспечения. Навыки: - настройки отдельных компонентов программного обеспечения компьютерных систем; - выполнения отдельных видов работ на этапе поддержки программного обеспечения компьютерной системы.. Введение. Место тестирования в жизненном цикле разработки программного обеспечения. Основные понятия дисциплины. Роль тестирования в разработке программного обеспечения, сопровождении и функционировании программного обеспечения. Планирование и управление тестированием. Анализ и проектирование тестов. Природа сопровождения. Потребность в сопровождении. Приоритет стоимости сопровождения. Категории сопровождения. Тестирование в модели ЖЦ. Уровни и Типы тестирования. Альфа тестирование, бета тестирование, компонентное тестирование. Итерационное тестирование. Системное тестирование. Приемочное тестирование. Тестирование методом черного ящика, покрытие кода, функциональное тестирование, тестирование взаимодействия, нагрузочное тестирование, тестирование восстановления, тестирование производительности. Тестирование переносимости, тестирование надежности, тестирование безопасности, стресс-тестирование, структурное тестирование, тестирование удобства использования, тестирование методом белого ящика. Анализ влияния, тестирование в период сопровождении. Формальное и неформальное рецензирование. Критерий входа, инспекция, метрика, модератор, равноправный анализ, эксперт, секретарь, технический анализ, сквозной контроль. Действия (шаги) формального рецензирования. Роли и обязанности. Типы рецензирований. Факторы успешного проведения. Компилятор, коэффициент сложности, поток управления, поток данных, статистический анализ. IEEE 1028] IEEE Std 1028 (2008) IEEE Standard for Software Reviews and Audits. Методы проектирования тестов. Жизненный цикл дефекта. Типы дефектов на разных фазах тестирования. Управление дефектами. Баг-трэкинговые системы. Тест-кейсы. Спецификация тестовых сценариев, проектирование теста, расписание выполнения тестов, спецификация процедуры тестирования, автоматизированный сценарий тестирования, трассируемость. Разработка тестов методом черного ящика, разработка тестов методом белого ящика, метод создания тестов на основе опыта, метод разработки тестов на основе спецификации, структурный метод разработки тестов. Анализ граничных значений, тестирование таблицы решений. Эквивалентное разбиение, тестирование таблицы переходов, тестирование по сценариям использования. Покрытие кода, покрытие альтернатив, покрытие операторов, тестирование на основе структуры. Исследовательское тестирование, атака (на недочеты). Выбор методов тестирования. Управление тестированием. Тестировщик, руководитель тестирования, менеджер тестирования. Организация и независимость тестирования. Подход к тестированию, стратегия тестирования. Планирование тестирования. Управление конфигурацией. Управление версиями. Риски продукта, риски проекта, ориентированное на риски тестирование. Инструмент покрытия, инструмент отладки, инструмент динамического анализа, инструмент управления инцидентами, инструмент нагрузочного тестирования, инструмент моделирования, инструмент мониторинга, инструмент тестирования производительности, эффект зондирования, инструмент управления требованиями, инструмент рецензирования, средство защиты, инструмент статистического анализа, инструмент стрессового тестирования, тестовый компанатор, инструмент подготовки тестовых данных, инструмент проектирования тестов, тестовая обвязка, инструмент выполнения тестов, инструмент управления тестированием, инструмент интегрированной среды модульного тестирования. Ключевые вопросы сопровождения программного обеспечения. Технические вопросы. Управленческие вопросы. Оценка стоимости сопровождения. Измерения в сопровождении программного обеспечения. Процессы сопровождения. Работы по сопровождению. Техники сопровождения. Реинжиниринг. Обратный инжиниринг. Введение в ITIL. Что такое ITIL, другие существующие методологии. Управление ИТ-сервисами (IT Service Management). Жизненный цикл сервиса. Ролевая модель, понятие Роли. RACI-модель. Стратегия сервиса и проектирование сервиса. Ценность управления услугами. Понятия и определения. Формирование стратегии. Оценка рисков. Управление финансами. Управление спросом. Принцип 4Р. 5 составляющих сервисного дизайна. Управление уровнем услуг. Управление каталогом услуг. Управление мощностями. Управление доступностью. Управление непрерывностью. Управление информационной безопасностью. Управление поставщиками. Преобразование сервиса и Эксплуатация сервиса. Достижение баланса. Управление инцидентами. Управление событиями. Управление запросами. Управление проблемами. Управление доступом. Функции. Сервис Деск (Service Desk). Service Desk: Роль. Service Desk: Организационная структура. Service Desk: Критерии построения. Service Desk: Возможные проблемы внедрения. Service Desk: Метрики. Техническое управление. Управление операционной деятельностью ИТ. Управление приложениями. Постоянное улучшение сервисов. Заключение. Цели CSI. Роль постоянного улучшения сервисов. Модель PDCA. Метрики. 7-ми ступенчатый процесс улучшения сервиса. Развитие задач тестирования и сопровождения ПО.",
		"text_proj": "Тестирование и документирование стенда виртуальных рабочих мест (VDI) под российским ПО виртуализации. Тестирование стенда VDI под российским ПО виртуализации, разработка технической документации по результатам тестирования. Обязательно должен: знать:. уметь:. владеть:. Желательно должен: знать:. уметь:. владеть:. В результате получит: знания: Современных аппаратных и программных средств виртуализации, знание ГОСТ. умения: Использования современных программных средств виртуализации. опыт: Тестирования и разработки технической документации.",
		"need_match": true
	},
	{
		"id_rp": "1016",
		"id_proj": "46",
		"name_rp": "Интеллектуальные системы",
		"name_proj": "Разработка интеллектуальных модулей обработки данных на FPGA",
		"text_rp": "Рассматриваются основные понятия теории интеллектуальных систем; средства языка логического программирования для разработки интеллектуальных систем: рекурсивные программы, решение логических задач с использованием структур данных – списков и деревьев; интерактивная визуальная среда логического программирования Visual Prolog; основы построения и использования экспертных систем; методы планирования действий в интеллектуальных системах; теоретические и практические основы организации обучения в интеллектуальных системах; методы поиска в условиях противодействия. Лабораторные работы ориентированы на изучение языка логического программирования в среде Visual Prolog, программирование с использованием структур данных списки и деревья, разработку экспертной системы на языке логического программирования, исследование моделей планирования в интеллектуальных системах.. Изучение теоретических основ, методов и средств построения интеллектуальных систем на основе знания мировых тенденций развития вычислительной техники и информационных технологий и приобретение навыков построения интеллектуальных систем. Формирование представления о перспективах развития интеллектуальных систем как инновационной области информационных технологий, о парадигме логического программирования и ее применении при разработке интеллектуальных и экспертных систем. Понятие об интеллектуальных системах, как системах, основанных на знаниях, об особенностях знаний как формы представления информации, методов решения задач планирования и обучения в интеллектуальных системах. Студент должен показать умение анализировать профессиональную информацию, выделять в ней главное, структурировать, оформлять и программировать в рамках декларативной парадигмы, способен разрабатывать алгоритмы и программные средства для решения задач в области создания и применения искусственного интеллекта. Освоение способов формализации интеллектуальных задач с помощью языков искусственного интеллекта, практических навыков логического и продукционного программирования, выбор, разработка и проведение экспериментальной проверки работоспособности программных компонентов систем искусственного интеллекта по обеспечению требуемых критериев эффективности и качества функционирования.. Контрольная работа № 1 по темам 1-8 1.       В чем состоит основное отличие знаний от данных? 1)    В структурности данных и активности знаний. 2)    В структурности и активности знаний. 3)    В структурности или активности знаний. 4)    В активности данных и структурности знаний. 2.       На какие типы условно может быть разделено знание, которое одно человеческое поколение передает другому (в теории интеллектуальных систем)? 1)    На общедоступные (факты и теории) и  индивидуальные (эвристики). 2)    На актуальные, неактуальные и фоновые. 3)    На первичные и вторичные. 3.       Что такое внутренняя интерпретируемость знаний (или данных)? 1)    Наличие системы имен информационной единицы знаний (или данных). 2)    Возможность интерпретации знаний или данных изнутри БД или БЗ. 3)    Сопоставление знаний или данных с функциями, позволяющими их интерпретировать. 4.       Что такое структурированность знаний? 1)    Наличие у знаний внутренней структуры. 2)    Свойство знаний, выражаемое связями типа «род-вид», «часть-целое». 3)    Способность знаний к самоорганизации на уровне структуры. 5.       Что такое парадигма программирования? 1)    Подход к программированию, содержащий описание инструментальных средств. 2)    Правила эффективного программирования и отладки программ. 3)    Набор идей и рекомендаций, определяющих стиль написания программ. 6.       Назовите 2 способа интерпретации правила Пролога. 1)    Выполнение действия и формулирование условия. 2)    Логическое высказывание и вызов процедуры. 3)    Вычисление функции и определение отношений между термами. 7.       Какое выражение допустимо на языке Пролог для увеличения значения переменной на константу 5? 1)    Y=X+5 2)    X=X+5 3)    X+5 4)    +5Х 8.       Почему правило Modus Ponens можно рассматривать как частный случай правила резолюций (экземпляр резолюции)? 1)    Потому, что при замене формулы A ð B на A Ù ØB в правиле Modus Ponens оно становится экземпляром резолюции. 2)    Потому, что при замене формулы A ð B на ØA Ù B в правиле Modus Ponens оно становится экземпляром резолюции. 3)    Потому, что при замене формулы A ð B на A Ú ØB в правиле Modus Ponens оно становится экземпляром резолюции. 4)    Потому, что при замене формулы A ð B на ØA Ú B в правиле Modus Ponens оно становится экземпляром резолюции. 9.       Какое определение операции редукции является правильным? 1)    Операция,  связанная с заменой цели G заголовком того примера правила,  из программы P , тело которого совпадает с данной целью. 2)    Операция,  связанная с заменой цели G телом того примера правила,  из программы P , заголовок которого совпадает с данной целью. 3)    Операция,  связанная с заменой цели G телом того правила,  из программы P , заголовок которого совпадает с данной целью. 4)    Операция,  связанная с заменой цели G телом того примера правила,  из программы P , тело которого совпадает с данной целью. 10. Цель G следует из программы P тогда и только тогда, когда: 1)    в P найдется правило с основным примером A :- B1,  B2 ,.,  Bn , где n > 0, таким, что B1 , B2 ,., Bn являются логическими следствиями P и A является примером G. 2)    G может быть выведена из P с помощью конечного числа применений обобщенного правила modus ponens. 3)    G может быть выведена из P с помощью конечного числа применений правила де-Моргана. 11. Что называется стандартной стратегией выбора цели в процессе редукции? 1)    Правило выбора, согласно  которому  в качестве очередной цели берется всегда самая правая цель резольвенты. 2)    Правило выбора, согласно  которому  в качестве очередной цели берется произвольная цель резольвенты. 3)    Правило выбора, согласно  которому  в качестве очередной цели берется всегда самая левая цель резольвенты. 12. Что называется стандартной стратегией поиска в процессе редукции? 1)    Поиск в программе P правила Ci , функтор в заголовке которого совпадает с функтором цели Gi, в порядке, обратном написанию правил в программе. 2)    Поиск в программе P правила Ci , функтор в заголовке которого совпадает с функтором цели Gi, в порядке написания правил в программе. 3)    Поиск в программе P правила Ci , функтор в заголовке которого совпадает с функтором цели Gi, в произвольном порядке. 13. Что позволяет остановить рекурсивный процесс? 1)    Указание копии задачи, не допускающей дальнейшее выделение подзадач. 2)    Граничное условие. 3)    Указание копии задачи, допускающей дальнейшее выделение подзадач. 4)    Граничное условие копии подзадачи. 14.  Как работает управление механизмом возврата в Прологе с использованием специальной цели, обозначаемой символом “!”? 1)     Доказательство этой цели заканчивается неуспешно, после чего отключается механизм возврата и все цели, расположенные в тексте правила до цели-отсечения (включая и головную цель правила) не доказываются повторно. 2)     Доказательство этой цели заканчивается успешно, после чего отключается механизм возврата и все цели, расположенные в тексте правила до цели-отсечения (включая и головную цель правила) не доказываются повторно. 3)    Доказательство этой цели заканчивается успешно, после чего отключается механизм возврата и все цели, расположенные в тексте правила после цели-отсечения (включая и головную цель правила) не доказываются повторно. 4)    Доказательство этой цели заканчивается успешно, после чего отключается механизм возврата и все цели, расположенные в тексте правила до цели-отсечения не доказываются повторно. 15.  Выбрать правильные реализации отношения отрицания not произвольной цели на языке Пролог: 1)    not(X) :– fail, !, X.      not(X). 2)    not(X) :– !, Х, fail.      not(X). 3)    not(X) :– X, !, fail.      not(X). 4)    not(X) :– X, fail, !.      not(X). 16. Почему рекурсия, используемая при работе с бинарными деревьями на Прологе, не является хвостовой? 1)    Рекурсивный вызов находится в головной части правила вывода. 2)    Рекурсивный вызов не является только последней целью в хвостовой части правила вывода. 3)    Приходится обрабатывать левое и правое поддеревья, что дает две рекурсивные цели в одном предложении. 17.  В каких случаях применяется прямая стратегия логического вывода при реализации на языке Пролог экспертной системы?. Министерство науки и высшего образования Российской Федерации ФГАОУ ВО «Санкт-Петербургский государственный электротехнический университет «ЛЭТИ» имени В.И. Ульянова (Ленина)» ____________________________________________________________ ЭКЗАМЕНАЦИОННЫЙ БИЛЕТ № 1 Дисциплина Интеллектуальные системы ,  кафедра Вычислительной техники 1. Интеллектуальные системы – системы, основанные на знаниях.  2. Приложения Пролога – экспертные системы. Архитектура экспертных систем. 3. Задача. УТВЕРЖДАЮ Заведующий кафедрой                                                   М.С. Куприянов. Введение. Интеллектуальные системы – основные понятия. Предмет дисциплины, её объём, содержание. Обзор литературы по курсу. Интеллектуальные системы – системы, основанные на знаниях. Место интеллектуальных систем на множестве компьютерных систем. Особенности знаний как формы представления информации. Два типа знаний. Проблема представления знаний. Язык логического программирования как средство разработки интеллектуальных систем. Логические модели и логическое программирование. Разработка интеллектуальных и экспертных систем на языке логического программирования. Язык логического программирования Пролог. Интерактивная визуальная среда программирования Visual Prolog. Рекурсивные программы. Решение логических задач с использованием списков. Решение логических задач с использованием структур данных типа «дерево». Приложения языка Пролог. Экспертные системы. Решение задачи планирования действий в интеллектуальных системах. Задача планирования. Язык описания состояний и действий. Планирование на основе поиска в пространстве состояний. Планирование с помощью пропозициональной логики. Планирование действий в реальном мире. Решение задачи обучения в интеллектуальных системах. Формы обучения. Обучение на основе наблюдений. Индуктивное обучение. Построение деревьев решений. Обучение с использованием знаний. Логическая формулировка задачи обучения. Статистические методы обучения. Обучение с полными данными. Метод максимального правдоподобия. Пассивное и активное обучение с подкреплением. Поиск в условиях противодействия. Заключение. Альфа-бета-отсечение. Архитектура доски объявлений. Перспективы развития интеллектуальных систем как инновационной области информационных технологий.",
		"text_proj": "Разработка интеллектуальных модулей обработки данных на FPGA. Цель проекта – разработка интеллектуальных технологий обработки данных для встроенных систем.  Для достижения цели исследования необходимо решить следующие задачи: 1. Разработка новых моделей и методов и снижения размерности данных, коррекции систем без переобучения.  2. Разработка интеллектуальных методов и алгоритмов обработки данных в режиме реального времени. 3. Аппаратная реализация встроенных систем. Партнёры: Huawei, Siemens. . Обязательно должен: знать: основы программирования. уметь: работать с \"железом\". владеть: одним из языков высокого уровня. Желательно должен: знать: основы проектирования на FPGA. уметь: моделировать на Matlab или Python; владеть: языками VHDL или Verilog. . В результате получит: знания: в области архитектуры встроенных систем; умения: проектирования для FPGA; опыт: проектирования и реализации аппаратно-ориентированных интеллектуальных модулей обработки данных.",
		"need_match": true
	},
	{
		"id_rp": "105",
		"id_proj": "41",
		"name_rp": "Системы управления манипуляторными роботами",
		"name_proj": "Разработка подводного телеуправляемого робота на гусеничном шасси.",
        "text_rp": "Дисциплина включает изложение основ теории манипуляционных роботов и методов управления ими. Рассматриваются основные сведения о динамике манипуляционных механизмов, математические модели движения и методика их анализа. Подробно рассматриваются способы и алгоритмы кинематического управления манипуляторами. Дисциплина поддерживается большим числом практических и лабораторных занятий, а также самостоятельной работой студентов по основным разделам программы. . Изучение основ теории манипуляционных роботов и методов управления ими. Овладение: знаниями об основных кинематических соотношениях; умениями формулировать прямую и обратную задачи позиционные задачи и прямую и обратную задачи о скорости звеньев манипулятора; навыками построения алгоритма управления манипулятором. Формирование общего представления о динамике манипуляционных механизмов, математических моделях движения и методиках их анализа. Овладение: знаниями о показателях динамических свойств манипулятора; умениями составлять алгоритм вычисления сил и моментов реакции звеньев манипулятора; навыками составления дифференциальных уравнений движения манипулятора относительно обобщенных координат. Освоение навыков практических методов исследования и расчетов исполнительной системы манипуляционного робота. Овладение: знаниями о средствах автоматизированного синтеза мехатронных систем; умениями разрабатывать системы управления для мехатронных и роботизированных технологических комплексов; навыками моделирования мехатронных и роботизированных технологических комплексов.. Примерные вопросы к коллоквиуму: 1. Запишите уравнение статического равновесия трехзвенного манипулятора, содержащего только поступательные кинематические пары 2. Запишите уравнение статического равновесия трехзвенного манипулятора, содержащего только поступательные пары вращения 3. Запишите уравнение статического равновесия для шестизвенного манипулятора типа PUMA-560, у которого первые три пары вращательные , а три последующие – поступательные. 4. Напишите соотношение, определяющее силу реакции и момент реакции опоры манипулятора имеющего три вращательные пары. 5. Объясните, почему для вычисления сил и моментов, действующих на звенья манипулятора, целесообразно применять метод обратной рекурсии. 6. Составьте алгоритм вычисления сил и моментов реакции звеньев манипулятора, имеющего плоскую трехзвенную конструкцию с вращательными парами, если заданы значения обобщенных координат. 7. Составьте алгоритм вычисления эллипсов развиваемых сил для плоского двухзвенного манипулятора. 8. Поясните, для решения каких практических задач можно использовать эллипсоиды развиваемых манипулятором сил. 9. Что характеризуют главные оси эллипсоида сил: их величины или направления? 10. Сформулируйте первую и вторую задачи динамики применительно к манипуляционному механизму. . Введение. Предмет дисциплины и ее задачи. Структура и содержание дисциплины, ее связь с другими дисциплинами учебного плана. Тема 1. Основные кинематические соотношения. Манипулятор как механическая система. Преобразования координат, однородные координаты и преобразования. Определение положения и ориентации звеньев манипулятора, специальные системы координат. Тема 2. Положение манипулятора в рабочем пространстве. Прямая и обратная позиционные задачи. Геометрия рабочего пространства манипулятора. Тема 3. Скорости и ускорения звенев манипулятора. Вращение твердого тела. Скорости и ускорения звенев манипулятора. Прямая и обратная задача о скорости. Кинематические свойства манипуляторов. Тема 4. Кинематическое управление манипулятором. Планирование траекторий в пространстве обобщенных координат. Управление манипулятором в пространстве координат схвата. Тема 5. Уравнение кинетостатики манипулятора. Статика манипуляционных механизмов. Анализ рабочих сил и моментов. Показатели динамических свойств манипулятора. Тема 6. Система управления исполнительного уровня. Математическая модель исполнительной системы, исследование линеаризованной модели. Автоматизированный синтез исполнительной системы. Тема 7. Методы динамического управления манипуляторами. Методы, основанные на решении обратных задач динамики. Декомпозиция управления, силовая обратная связь и динамическое планирование. Тема 8. Логическое управление сложной робототехнической системой. Понятие сложной системы, построение моделей подсистем, сетевой автомат, сеть автоматов. Метод управления сложной робототехнической системой. Заключение. Перспективы развития мехатронных и робототехнических систем.",
		"text_proj": "Разработка подводного телеуправляемого робота на гусеничном шасси. Разработка программного и аппаратного обеспечения подводной роботизированной системы на основе гусеничной платформы с манипулятором. Создание телеуправляемого водонепроницаемого шасси. Разработка сенсорной системы робота. Разработка подсистемы управления шасси и манипулятором. Полевые испытания робота на водоеме. Основы Arduino IDE, коммуникабельность, владение английским языком на уровне Basic, общая техническая грамотность. Знание цифровой и аналоговой схемотехники, выносливость, целеустремленность. Знания в области дизайна подводных роботизированных систем. Практические навыки проектирования комплексных объектов робототехники. Опыт разработки программно-аппаратных комплексов общего назначения Незабываемый опыт полевой экспедиции на водоемы нашей необъятной Родины с погружениями за застрявшим роботом.",
		"need_match": true
	},
	{
		"id_rp": "1040",
		"id_proj": "26",
		"name_rp": "Управление и информатика в технических системах",
		"name_proj": "Программно-аппаратное конфигурирование сети лаборатории.",
		"text_rp": "В рамках данной дисциплины рассматриваются основные положения общей теории систем, технологий и методов проектирования программных систем, изучаются особенности современных методов и средств проектирования информационных систем, основанных на использовании CASE­технологий. История и тенденции развития технологий программирования. Проблемы разработки сложных программных систем. Основные понятия общей теории систем. Жизненный цикл и этапы разработки программного обеспечения. Оценка качества процессов создания программного обеспечения. Приемы обеспечения технологичности программных продуктов. Определение требований к программному обеспечению и исходных данных для его проектирования. Проектирование программного обеспечения. Тестирование, верификация и отладка программных систем. Составление программной документации.",
		"text_proj": "Программно-аппаратное конфигурирование сети лаборатории. Видео-презентация проекта https://youtu.be/uLePbMkxzZE Цель данного проекта состоит в построении и отладке программно-аппаратной системы наблюдения и отладки решений на полигоне автономного транспорта лаборатории мобильных интеллектуальных систем.  Задачи: Настройка системы управления конфигурациями Ansible на парке машин лаборатории интеллектуальных мобильных систем Разработка решения захвата видео камеры наблюдения полигона в трансляцию конференций Zoom Тестирование онлайн-курса по GDB и Valgrind Формат работы: смешанный: заочный + очный Очно в аудитории 3501 Прототипирование при отсутствии необходимости работы с оборудованием возможно выполнять дистанционно. Ориентировочно 2-3 курс Навык работы с ОС Linux (Ubuntu) Знание языка Си, основ отладки программ Умение самостоятельно находить информацию, учиться новому Умение следовать инструкции Аккуратность  Умение пользоваться отверткой Знание английского языка на уровне чтения технической документации Понимание базовых принципов организации ЛВС. Плюсом будет любой опыт работы с библиотеками автоматизации настройки и любой опыт наладки систем видеофиксации. . В результате получит: знания о устройстве систем машинного зрения и систем автоматизированной постановки эксперимента для задач автономного транспорта, умения настройки и отладки реальных роботехнических систем, опыт участия в передовом исследовательском проекте. . Тестовое задание проекта. Составить docker-compose файл, позволяющий запустить 2 докер-контейнера, объединенные в одну локальную сеть (изолированную от сети хост-машины)   Программа-клиент, запущенная в одном контейнере должна передавать строку “docker test #K” по TCP программе-серверу, запущенной во втором контейнере. Программа-сервер должна печатать полученные данные в лог, доступный командой docker log.   #K - порядковый номер сообщения (0, 1, 2, …) Строку передавать раз в секунду   Способ реализации программ клиента и сервера может быть любым (стандартные утилиты / самостоятельно написанные программы / …)   В качестве решения прислать ссылку на репозиторий с docker-compose файлом и инструкцией по запуску.",
		"need_match": true
	},
	{
		"id_rp": "1278",
		"id_proj": "9",
		"name_rp": "Тестирование программного обеспечения",
		"name_proj": "Тестирование конфигураций на платформах: Supermicro c AMD+Astra Linux+МДЗ (модуль доверенной загрузки) Соболь; Supermicro/Intel + видеокарта AMD (в разных режимах) +Astra Linux+МДЗ Cоболь",
		"text_rp": "Дисциплина посвящена изучению теоретических основ и методов тестирования программного обеспечения. Рассматриваются основные понятия процесса тестирования, уровни тестирования, виды и методы тестирования. Определяются критерии завершения процесса тестирования. Особое внимание уделяется вопросам документирования процесса тестирования. Рассматриваются инструментальные средства тестирования.. Изучение: основных понятий, связанных с функциональным и нефункциональным тестированием программного обеспечения, получение базовых знаний дисциплины;– возможностей использования в решении практических задач методов тестирования «чёрного ящика» и знание границы их применения. Формирование: умения применять базовые методы нефункционального тестирования. Изучение: основных понятий, связанных с функциональным и нефункциональным тестированием программного обеспечения, получение базовых знаний дисциплины;– возможностей использования в решении практических задач методов тестирования «чёрного ящика» и знание границы их применения. Формирование: умения применять базовые методы нефункционального тестирования. Освоение: навыков применения методик тестирования «чёрного ящика», написания тестов и тестовых сценариев, составления отчетов об ошибках, применения средств автоматизации тестирования.. Перечень примерных вопросов для коллоквиумов: 1. Каковы наиболее распространенные техники тестирования «черного ящика»? (Классы эквивалентности, граничные значения, диаграмма переходов и состояний; краткое описание каждой техники). 2. Назовите несколько видов тестирования под нагрузкой. (Тестирование производительности, стрессовое тестирование, тестирование выносливости, тестирование восстановления и т.д. с кратким описанием каждого вида) 3. В любом ли процессе применима автоматизация? (Нет, в ней нет смысла при коротком релизном цикле) 4. Какие артефакты тестирования вы можете назвать? (Тест-кейс, тест-план, отчет об ошибке, тест-скрипт, отчет о выполнении тестов). . Введение. Краткая характеристика дисциплины, ее цели, задачи, объем, содержание, порядок изучения материала, связь с другими дисциплинами учебного плана и место в подготовке специалистов по указанным направлениям и специальностям. Формы контроля самостоятельной работы. Характеристика учебной литературы. Тема 1. Основные понятия тестирования. Термины, описывающие нарушение функционирования программных систем. Ключевые вопросы тестирования программного обеспечения: критерии отбора/адекватности тестов, критерии завершения тестирования, цели тестирования, эффективность тестирования. Связь тестирования с другими видами деятельности по разработке программного обеспечения. Документирование тестирования. Тема 2. Функциональное тестирование. Функциональное тестирование (метод «черного ящика»). Метод эквивалентного разбиения. Анализ граничных значений. Метод диаграмм переходов и состояний.Теоретические и практические ограничения тестирования. Тема 3. Тестирование под нагрузкой. Тестирование производительности: нагрузочное тестирование, стресс-тестирование, тестирование стабильности. Практические проблемы нагрузочного тестирования. Тема 4. Тестирование безопасности. Теоретические основы тестирования безопасности. Риски. Распространенные уязвимости и методы их обнаружения. Тема 5. Тестирование удобства использования. Определение, экспертная оценка удобства использования программных систем. Методы тестирования используемости программных систем, применяемые группой тестирования проекта – общие и частные типовые методики, тестирование на основе пользовательских вариантов использования. Методы тестирования используемости программных систем с привлечением сторонних пользователей (метод теневого наблюдения, метод вопросов и ответов, метод активного вмешательства). Тема 6. Уровни тестирования. Место тестирования в процессе разработки. Модульное и интеграционное тестирование. Отличительные особенности модульных тестов. Метрики покрытия/глубины тестирования. Введение искусственных дефектов. Тема 7. Инструментальные средства тестирования. Сущность и преимущества автоматизации тестирования. Зависимость успеха автоматизации от степени зрелости процесса тестирования. Проблемы разработки и поддержки набора автоматизированных функциональных тестов и методики их разработки. Формирование результатов тестового прогона и анализ результатов. Автоматизированная генерация входных тестовых данных. Тема 8. Организация процесса тестирования. Процесс тестирования как деятельность по обеспечению качества программного продукта. Состав команды тестирования. Внутренние и независимые команды тестирования. Управление процессом тестирования. Критерии отбора тестов. Разработка тестового окружения. Выполнение тестов. Анализ результатов тестирования. Отслеживание дефектов. Заключение. Основные тенденции развития и совершенствования методов тестирования.",
		"text_proj": "Тестирование конфигураций на платформах: Supermicro c AMD+Astra Linux+МДЗ (модуль доверенной загрузки) Соболь; Supermicro/Intel + видеокарта AMD (в разных режимах) +Astra Linux+МДЗ Cоболь. Необходимо:  разработать стандарты сборки исследуемого компьютерного оборудования; тестирование различных конфигураций компьютерного оборудования; определение рекомендуемых назначений (например, в режиме вывода видео конфигурация оборудования работает с таким-то разрешением, в режиме сопроцессора поддерживает такие-то функции, важные для разработчиков ПО под Astra Linux и др.), документирование. Обязательно должен: знать:. уметь:. владеть:. Желательно должен: знать:. уметь:. владеть:. В результате получит: знания: Технические характеристики современных серверов и АРМ, знание ГОСТ и др. умения: Cборки и тестирования современного компьютерного оборудования. опыт: Сборки и тестирования различных конфигураций серверов и АРМ, разработки технической документации.",
		"need_match": true
	},
	{
		"id_rp": "991",
		"id_proj": "30",
		"name_rp": "Машинное обучение",
		"name_proj": "Разработка системы детектирования и идентификации объектов на кадрах.",
		"text_rp": "Данный курс знакомит слушателей с основными методами анализа данных. Рассматриваются основные этапы интеллектуального анализа, включая подготовку исходных данных, особенности выбора параметров алгоритмов, оценку и представление результатов анализа. Изучаются основные задачи интеллектуального анализа данных: классификация, кластеризация, поиск ассоциативных правил. На практике разбираются основные алгоритмы решения этих задач и особенности их применения для больших данных. Данный курс позволяет детально изучить понятия, задачи и методы интеллектуального анализа данных, предназначенные для создания математических моделей, адекватных окружающему миру и решения прикладных задач. . Целью освоения дисциплины «Машинное обучение» являются приобретение студентами теоретических знаний и формирование практических навыков по основам машинного обучения, овладение студентами инструментарием, моделями и методами машинного обучения для решение практических задач по анализу данных. Задачами изучения дисциплины являются: - изучение содержательной и математической постановки основных задач машинного обучения, получение знаний о методах машинного обучения и предобработки исходных данных, основных на- формирование знаний об основных понятиях, этапах анализа и интерпретации данных; умений по выбору наиболее подходящего способа решения задачи и обоснованию его эффективности, формирование навыков по представлению результатов работы алгоритмов машинного обучения; - освоение практических навыков по сбору данных, методов их анализа и обобщения, выбору средств и методов обработки данных для решения практических задач; представлению результатов анализа в форме, поддерживающей принятие решения в соответствии с поставленной задачей. Студенты получат знания по ключевым понятиям, целям и задачам использования машинного обучения для решения различных практических задач; изучат методологические основы применения алгоритмов машинного обучения. Дисциплина формирует умения по выбору метода машинного обучения, соответствующего научно-практической задаче, и его обоснованию, умения по объяснению и визуализации результатов работы алгоритмов машинного обучения, а также оценке качества моделей анализа. Дисциплина формирует практические навыки по применению программных инструментов и библиотек по предобработке исходных данных, построению моделей анализа, оценки качества моделей и визуализации полученных результатов. . . Министерство науки и высшего образования Российской Федерации ФГАОУ ВО «Санкт-Петербургский государственный электротехнический университет «ЛЭТИ» имени В.И. Ульянова (Ленина)» ____________________________________________________________ БИЛЕТ № 1 Дисциплина Машинное обучение   ФКТИ  1. Кластеризация. kMeans, DBSCAN. 2. Метрики качества классификации. Presicion-Recall и ROC кривые. AUC.  УТВЕРЖДАЮ Заведующий кафедрой                                                   В.В. Цехановский . . Введение в машинное обучение. Предмет и задачи машинного обучения и анализа данных. Основные принципы, задачи и подходы, использование в различных областях науки и индустрии. Основные этапы эволюции алгоритмов машинного обучения. Задача классификации. Линейные классификаторы. Линейные классификаторы. Общий вид метрического классификатора. Алгоритм K ближайших соседей. Метод опорных векторов. Линейные персептрон. Задача классификации. Деревья решений. Деревья решений. Правила и анализ качества (точность, полнота). Анализ с помощью ROC кривой. Алгоритм построения деревьев решений. Критерий информационного выигрыша и критерий Джини. Леса решающих деревьев. Задача классификации и регрессионный анализ. Линейная регрессия. Полиномиальная регрессия. Смещение и дисперсия. Ансамблевые методы. Голосование. Бутстраппинг. Бустинг, адаптивный бустинг, градиентный бустинг. Задача кластеризации. Формальная постановка задачи кластеризации. Алгоритмы кластеризации с фиксированным количеством кластеров. Алгоритмы кластеризации по плотности. Иерархическая кластеризация.",
		"text_proj": "Разработка системы детектирования и идентификации объектов на кадрах. Объект исследования: разрозненные геопривязанные кадры видео Предмет исследования: детекция, классификация и идентификация объектов интереса Цель: Определить, какому из заранее заданных классов принадлежит объект Проблема: Протяженность объектов может быть различной, в том числе, не помещающихся на одно изображение Формулировка задачи: необходимо разработать систему идентификации объектов, найденных системой вскрытия, определяющую тип и характеристики найденного объекта или помечающую выделенный объект, как неинтересный. Обязательно должен: знать: язык программирования (С++ или Java или Python); уметь: работать в команде. Желательно должен: знать: математические основы детекции объектов (понятие свёртки, машинного обучения.); владеть: английским языком достаточным для чтения статей. В результате получит: знания: математические основы компьютерного зрения, алгоритмы машинного обучения; умения: проведение научного исследования, прикладное создание программного фреймворка; опыт: работы на предприятии в условиях проекта, близкого к реальному. Сформировать список алгоритмов идентификации. Необходимо сформировать список алгоритмов идентификации. Создать framework, позволяющий решать задачу идентификации несколькими методами. Необходимо создать framework, позволяющий решать задачу идентификации несколькими методами. Сформировать критерии сравнения алгоритмов. Необходимо сформировать критерии сравнения алгоритмов. Сравнить запрограммированные алгоритмы по выбранным критериям. Необходимо сравнить запрограммированные алгоритмы по выбранным критериям.",
		"need_match": true
	},
	{
		"id_rp": "985",
		"id_proj": "8",
		"name_rp": "Основы компьютерного дизайна",
		"name_proj": "Разработка ИС \"Расписание\" / \"Деканат\".",
		"text_rp": "В курсе рассматриваются свойства зрительного восприятия человека, основы работы с цветом и цветовые модели, виды контраста, психология восприятия цветов и шрифтов, основы построения композиции, методика подбора шрифтов, рассматриваются основные требования и композиция наружной рекламы, основы web-дизайна. Также курс содержит руководства по построению эффективного взаимодействия с пользователем и основные принципы построения эргономичных пользовательских интерфейсов. Цель дисциплины - изучение теоретических основ компьютерного дизайна и формирование умений и навыков в области разработки эргономичных графических пользовательских интерфейсов различных систем. Формирование знаний, умений и навыков в области разработки эргономичных графических пользовательских интерфейсов различных систем. В результате изучения дисциплины студенты получают знания о законах зрительного восприятия человека, основных цветовых моделях, методах представления информации, основах построения композиции и подбора цветовой гаммы, принципах создания и подбора шрифтов, классификации и видах рекламы, основных правилах построения эргономичного пользовательского интерфейса, а также термины и определения, используемые в дизайне, виды и методы Usability-тестирования. Формирование умений работы с различными графическими пакетами для выполнения любой дизайнерской работы. Формирование навыков создания эргономичных графических пользовательских интерфейсов различных систем. . Министерство науки и высшего образования Российской Федерации ФГАОУ ВО «Санкт-Петербургский государственный электротехнический университет «ЛЭТИ» имени В.И. Ульянова (Ленина)» ____________________________________________________________ ЭКЗАМЕНАЦИОННЫЙ БИЛЕТ № 1 Дисциплина \"Основы компьютерного дизайна\"  ФКТИ 1. Факторы, которые следует учитывать при выборе шрифта.  2. Советы по созданию эргономичного дизайна.   УТВЕРЖДАЮ Заведующий кафедрой                                                   В.В. Цехановский. . Введение. Цели и задачи курса. Основная литература. Основные этапы работы дизайнера. «Поиск идеи». Основные этапы работы дизайнера. Основные методы поиска «новых» идей. Свойства зрительного восприятия человека. Свойства зрительного восприятия человека. Перспектива и тень. Перспектива. Тень. Цвет. Теория цвета. Основные ошибки при подборе цветовой гаммы. Отклонения в различении цветов. Контраст. Основные виды контраста. Композиция. Понятие композиции и ее виды. Характеристики композиции. Некоторые композиционные приемы. Шрифтовые композиции. Шрифт. Типографика. Советы при выборе шрифта. Типографический дизайн и наружная реклама. Классификация рекламы. Методы и правила создания эффективной рекламы. Наружная реклама. Рекомендации по созданию фирменного стиля. Основы Web-дизайна. Основные понятия, общая структура главной страницы. Основные правила при создании дизайна веб-страниц. 10 главных ошибок веб-дизайна. Usability. Принципы проектирования эргономичного пользовательского интерфейса. 58 признаков хорошего пользовательского интерфейса. Эвристики Я. Нильсена. Гештальт принципы в дизайне. Заключение. Перспективы развития применения компьютерного дизайна в работе эргономиста",
		"text_proj": "Разработка ИС \"Расписание\" / \"Деканат\". Информационная система (ИС) \"Расписание\" обеспечивает процессы формирования и предоставления расписания в вузе. В рамках неё выполняется согласование пожеланий преподавателей, кафедр и возможностей аудиторного фонда ЛЭТИ. Система реализована на JavaScript с использованием фреймворка Svelte. Необходимо перевести систему на TypeScript, фреймворк Vue 2.0 с материальным дизайном Bootstrap (шаблон приложения будет дан). ИС \"Деканат\" предназначена для автоматизации процессов в деканате. В настоящее время осуществляется информационное обследование процессов деканата, разработка начнётся в середине марта. Технологии: TypeScript, фреймворк Vue 2.0 с материальным дизайном Bootstrap. Обязательно должен: знать: HTML, CSS, JavaScript, TypeScript. уметь выполнять:  проектирование интерфейса пользователя и запросов на web-сервер; разработку статического web-приложения; реализацию динамического web-приложения; подключение web-приложения к web-серверу; разработку модульных и интеграционных тестов; описание своих решений в виде справки для пользователя; владеть: основными навыками анализа требований пользователя, разработки web-приложений, работе в команде; технологиями совместной работы: git, wiki, bugtracker. Желательно должен: знать: фреймворки Vue 2.0, NestJS, Bootstrap; уметь: проектировать UX web-приложения; разрабатывать дизайн web-приложения; разрабатывать новые web-компоненты; разрабатывать серверную часть web-приложений; проектировать БД; выполнять нагрузочное тестирование; проверять web-приложение на взлом и готовить рекомендации по защите от взлома; работать в качестве технической поддержки для пользователя; описывать разработанные решения в виде публикаций; обладать навыком совместной разработки. В результате получит большинство знаний из перечисленных в \"Желательно должен\". Отбор студентов для проекта. После этого задания возможны следующие варианты:   - мы берём Вас на работу в отдел ОРПК ЛЭТИ (это основная цель участия в данном проекте, если Вы в этом не заинтересованы, то прошу сразу меня об этом уведомить), - мы даём дополнительное задание в случае высокой конкуренции либо   - мы рекомендуем Вас в другие проекты (в ЛЭТИ или других организациях). Интеграция созданных решений. Объединение полученных тестовых заданий в одну систему. Выполнение первого этапа проекта. Проектирование интерфейса пользователя Проектирование набора запросов на сервер Разработка статического web-приложения Разработка динамического web-приложения Проектирование структуры БД Разработка web-сервера Подключение к web-серверу Тестирование Проверка на взлом Опытная эксплуатация. 2. Формирование расписания для военно-учебного центра. 2.1. Клиентская часть ИС \"Расписание\" ЛЭТИ реализована с помощью фреймворка Svelte. Необходимо заданные в п.1 компоненты переписать на TypeScript+Vue2+Bootstrap, подготовить тесты и техническую документацию. Обращаю внимание, что разные компоненты выданы разным студентам, поэтому работать прошу именно с теми компонентами, которые указаны в п.1. В дальнейшем компоненты будут объединены в одно web-приложение. 2.2. Результаты прошу в виде pull request (PR) отправить в GIT. На написанный код будут выданы рекомендации/замечания/предложения, которые необходимо будет учесть. 2.3. К сожалению, данное задание не проверяет знания, умения и навыки по всему циклу разработки программного обеспечения, но позволяет \"окунуться\" в реальную разработку и проверить готовность решать реальные задачи. 2.4. Рекомендуемый срок выполнения до отправки первого PR: 2-3 недели, максимальный: 5 недель. Предполагается, что с рекомендациями/замечаниями/предложениями по PR Вы справитесь за 2-3 недели. 3. Формирование расписания для кафедры ФвиС. 2.1. Клиентская часть ИС \"Расписание\" ЛЭТИ реализована с помощью фреймворка Svelte. Необходимо заданные в п.1 компоненты переписать на TypeScript+Vue2+Bootstrap, подготовить тесты и техническую документацию. Обращаю внимание, что разные компоненты выданы разным студентам, поэтому работать прошу именно с теми компонентами, которые указаны в п.1. В дальнейшем компоненты будут объединены в одно web-приложение. 2.2. Результаты прошу в виде pull request (PR) отправить в GIT. На написанный код будут выданы рекомендации/замечания/предложения, которые необходимо будет учесть. 2.3. К сожалению, данное задание не проверяет знания, умения и навыки по всему циклу разработки программного обеспечения, но позволяет \"окунуться\" в реальную разработку и проверить готовность решать реальные задачи. 2.4. Рекомендуемый срок выполнения до отправки первого PR: 2-3 недели, максимальный: 5 недель. Предполагается, что с рекомендациями/замечаниями/предложениями по PR Вы справитесь за 2-3 недели. 4. Подтверждение перечня дисциплин. 2.1. Клиентская часть ИС \"Расписание\" ЛЭТИ реализована с помощью фреймворка Svelte. Необходимо заданные в п.1 компоненты переписать на TypeScript+Vue2+Bootstrap, подготовить тесты и техническую документацию. Обращаю внимание, что разные компоненты выданы разным студентам, поэтому работать прошу именно с теми компонентами, которые указаны в п.1. В дальнейшем компоненты будут объединены в одно web-приложение. 2.2. Результаты прошу в виде pull request (PR) отправить в GIT. На написанный код будут выданы рекомендации/замечания/предложения, которые необходимо будет учесть. 2.3. К сожалению, данное задание не проверяет знания, умения и навыки по всему циклу разработки программного обеспечения, но позволяет \"окунуться\" в реальную разработку и проверить готовность решать реальные задачи. 2.4. Рекомендуемый срок выполнения до отправки первого PR: 2-3 недели, максимальный: 5 недель. Предполагается, что с рекомендациями/замечаниями/предложениями по PR Вы справитесь за 2-3 недели. 6. Составление пожеланий по экзаменационной сессии. ",
		"need_match": true
	},
	{
		"id_rp": "998",
		"id_proj": "45",
		"name_rp": "Разработка в ядре Linux",
		"name_proj": "Разработка САПР на основе платформы Beremiz для отечественных ПЛК с процессорным ядром MIPS.",
		"text_rp": "дисциплина посвящена изучению проектирования компонентов программ; выбора подходящих шаблонов для решения задач из имеющейся номенклатуры; реализации и сопровождения программы на различных языках программирования, соответствующих дисциплине. дисциплина предусматривает умение использовать основные инструменты разработки для программирования в ядре linux; основные компоненты программно­технической архитектуры ядра linux и интерфейсов взаимодействия с ними; основные методы и приемы отладки. результатом освоения данного курса является применение современных компиляторов и отладчиков; проектирование типовых решений с учетом специфики программирования в ядре linux; использование возможностей существующей программной архитектуры ядра linux",
		"text_proj": "Разработка САПР на основе платформы Beremiz для отечественных ПЛК с процессорным ядром MIPS. Цель: адаптация и доработка открытого программного обеспечения среды разработки Beremiz для обеспечения функционирования отечественных программируемых логических контроллеров с ядром MIPS. Задачи: •Исследование эффективности оптимизирующих ключей компилятора для архитектуры MIPS. •Исследование архитектурных особенностей среды разработки Beremiz. •Интеграция протоколов МЭК в среду разработки Beremiz. Разработка тестов и верификация предложенных решений. Проект выполняется в интересах ФГУ ФНЦ НИИСИ РАН. Обязательно должен: знать: основы программирования; уметь: читать техническую документацию; владеть: языком C или Python. Желательно должен: знать: основы промышленной автоматики; уметь: работать с ПЛК; владеть: языками стандарта МЭК/IEC. В результате получит: знания: в области промышленной автоматики;  умения: в области разработки ПО для ПЛК на языках стандарта МЭК/IEC;  опыт: работы с IDE средами для промышленной автоматики.",
		"need_match": true
	},
	{
    "id_rp": "4776",
    "id_proj": "11",
    "name_rp": "Web-технологии",
    "name_proj": "Анализ динамики COVID-19 в России",
    "text_rp": "Курс «Web-технологии» охватывает широкий спектр технологий и подходов, использующихся при разработке Интернет-сайтов и web-приложений. Рассматриваются основы построения web-приложений с использованием HTML, CSS. Студенты последовательно изучают основы протокола HTTP, настройку web-сервера, основы JavaScript, TypeScript и PHP, построение статических HTML-страниц и оформления с использованием CSS, LESS и SASS, разработку сервера приложений с использованием Node.JS. Построение серверной части на основе Express и Nest, разработка клиентских приложений с использованием Angular, React и Vue. Выполнение модульного тестирования web-приложений, сборка приложений с использованием GULP и Webpack, обеспечение безопасности web-приложений.. Целью дисциплины является приобретение теоретических знаний о современных web-технологиях и фреймворках и практических навыков по всем этапам разработки web-приложений от разработки web-серверов, создания и оформления web-клиентов, организации защиты от взома. Задачами изучения дисциплины является приобретение теоретических знаний по проектированию web-приложений, формирование практических умений и навыков по разработке серверной и клиентской части web-приложений, оформлению и тестированию приложений. Знание основных подходов по построению клиентской и серверной части web-приложений, по оформлению web-страниц, в том числе для просмотра с мобильных устройств, по решению типовых задач тестирования, сборки и обеспечения безопасности web-приложений с использованием языков JavaScript, TypeScript, PHP. Умение разрабатывать клиентскую и серверную часть web-приложений, осуществлять настройку, тестирование и автоматизированную сборку web-приложений, решать базовые вопросы кибербезопасности. Формирование навыков создания статических HTML-страниц, динамических web-приложений на языках JavaScript и TypeScript, навыков применения современных фреймворков разработки клиентских и серверных частей web-приложений.. Тесты размещены в курсе Moodle, примеры вопросов: Сопоставьте коды состояний HTTP их описаниям В чём преимущество HTTP/2 по сравнению с предыдущими версиями протокола? Какой HTTP метод используется для описания параметров соединения с ресурсом? Какими функциями можно управлять с помощью HTTP? Выберите соответствие команд для управления модулями с помощью npm и yarn. Министерство науки и высшего образования Российской Федерации ФГАОУ ВО «Санкт-Петербургский государственный электротехнический университет «ЛЭТИ» имени В.И. Ульянова (Ленина)» ____________________________________________________________ ЭКЗАМЕНАЦИОННЫЙ БИЛЕТ № 1 Дисциплина Web-технологии  ФКТИ 1. Что такое протокол HTTP? Какие он поддерживает методы, как передаёт параметры? Для чего предназначены заголовки?  2. Опишите структуру HTML, понятие DOM-модели. Как осуществляется обработка событий в HTML? УТВЕРЖДАЮ Заведующий кафедрой                                                   К. В. Кринкин. Тема 1. Введение. Введение. Описание трехуровневой архитектуры. Описание протокола HTTP: методы, параметры, запрос, ответ, заголовки, общие вопросы безопасности. Сервер nginx: установка, конфигурации, статическое содержимое, использование в качестве прокси. Apache-сервер. Тема 2. Основы языка JavaScript. Стандарт ECMAScript. Установка и основы использования Node.js. Язык JavaScript: базовые конструкции языка, строки, функции, объекты, классы, массивы, JSON, промисы, генераторы, Map, Set, прокси. Строгий режим JavaScript. Тема 3. Применение Node.js. Основы Deno. Работа с модулями. Использование npm и yarn, готовые модули. Событийная модель в Node.js. Создание простейшего сервера на Node.js. Эхо-сервер, параметры запроса, заголовки. Журналирование. Внешние сервера для журналирования: Rollbar – попытка отловить ошибки раньше пользователей, Sentry – прослеживание JavaScript. Работа с файлами и потоками. «Асинхронный try-catch». Использование nvm. Использование Deno: установка, настройка среды, разрешения и примеры. Тема 4. Основы HTML. Структура HTML, понятие DOM-модели. Базовые элементы и поддерживаемые ими атрибуты. Обработка событий в HTML. Элемент form, его атрибуты, соответствующие элементы: input, select, fieldset, textarea, button. Валидация введённых значений на JavaScript. Тема 5. Основы настройки стилей CSS, LESS, SASS. Оформление HTML с использованием CSS. Селекторы, свойства и их значения, псевдоклассы. Оформление границ, отступов, размеров, ссылок, списков, таблиц, текста, настройка шрифта, использование иконок. Позиционирование элементов. Адаптивная верстка, использование grid, flexbox. Использование шаблонов web-страниц, переменных в CSS. Работа с CSS с использованием JavaScript. Использование CSS-фильтров. Библиотека w3.css. Знакомство с фреймворками LESS и SASS. Тема 6. Применение Express, NestJS, RESTful, Ajax. Использование Express и Koa. Использование шаблонов на основе PUG и EJS. Cookies на сервере. Реализация сессии. Фреймворк NestJS: архитектура приложения, базовый пример на JavaScript, основные возможности, подключение шаблонов. Реализация RESTful на Node.js. Применение Ajax: XMLHttpRequest, fetch. Ограничения CORS. Тема 7. Основы использования библиотек jQuery и jQuery UI. Применение jQuery: селекторы, манипуляции с DOM, обработка событий использование свойств и классов CSS, эффекты, Ajax-запросы. Применение jQuery UI: взаимодействие, перетаскивание, изменение размера, выбираемые и сортируемые элементы, виджеты, аккордеон, автозаполнение, кнопки, переключатели, controlgroup, выбор даты, диалоговое окно, меню, отображение прогресса, selectmenu, бегунок, спиннер, вкладки, подсказки, темы. Знакомство с jQuery mobile. Тема 8. Основы языка TypeScript. Статический контроль с использованием Flow. Основы языка TypeScript: типы переменных, интерфейсы, классы, функции, шаблоны, перечисления, импорт-экспорт, пространства имён, конфигурации, JSX. Статический контроль в JavaScript с использованием Flow: настройка среды исполнения, использование из командной строки, проверка типов переменных, проверка параметров функций, generics, перечислимые типы. Тема 9. Основы работы с фреймворком Angular. Основы фреймворка Angular: структура приложения, компоненты, сервисы, иерархия сервисов. Создание директив, привязка, задание маршрутов, параметры маршрутизации. Использование шаблонных переменных, работа с дочерними компонентами, валидация данных, взаимодействие с сервером. Тема 10. Использование библиотеки React. Библиотека Immutable.JS. Применение JSX. Компоненты и их иерархия в библиотеке React, свойства, состояние переменных. Жизненный цикл компонентов, события. Работа с формами в React. Маршрутизация, хуки. Библиотека Redux для создания единого состояния приложения: действия, редьюсеры, хранилище. Тема 11. Основы работы с фреймворком Vue. Декларативная отрисовка в фреймоврке Vue. Работа с вводом пользователя. Условия и циклы. Композиция приложения из компонентов. Синтаксис шаблонов. Вычисляемые свойства и наблюдатели. Работа с классами и стилями. Маршрутизация. Применение Vuex для обеспечения единого состояния приложения. Тема 12. Тестирование web-приложений. Понятие TDD-разработки. Модульные тесты: Assert – встроенный в Node.js модуль для тестирования, применение принципов TDD; Should – библиотека утверждений; Chai – библиотека утверждений. Mocha – фреймворк для тестирования. Jest – фреймворк для тестирования. Тестирование с использованием Selenium, Selenium IDE, Protractor. Использование headless браузеров. Использованием Postman для тестирования web-сервера. Тема 13. Сборка приложений, новые возможности языка JavaScript. Автоматизация задач с помощью GULP, применение src, dest, обработка стилей, скриптов. Сборка модулей (bundle) с помощью Webpack: простая конфигурация (entry, output), использование загрузчиков и плагинов, контроль изменений кода при разработке, отладка web-приложений. Новые возможности JavaScript: web-сообщения, web-worker, web-сокеты (ws, socket.io). Возможности history, sessionStorage, localStorage, cookie. Авторизация с Passportjs. Работа с реляционными базами данных с использованием Sequelize ORM. Применение WebAssembly. Тема 14. Применение языка PHP. Настройка nginx для работы с php. Знакомство с языком PHP: область применения, основные элементы языка (переменные, условные операторы, циклы, строки, массивы, функции, элементы ООП), работа с файлами (в т.ч. xml), обработка запросов с клиента (get, post), обработка исключительных ситуаций и ошибок. Знакомство с CMS. Тема 15. Взлом и безопасность web-приложений. Возможные уязвимости web-приложений. Обеспечение безопасности web-приложения от взлома: SQL-уязвимость, Shell-код, Upload-уязвимость, Include-уязвимость, XSS-уязвимость. Инструменты проверки на наличие уязвимостей.",
    "text_proj": "Анализ динамики COVID-19 в России. ·       Web-приложение для отображения динамики различных характеристик распространения COVID-19 в России. ·       Приложение должно отображать различные характеристики, как исходные, так и производные, вычисленные приложением. Так же иногда полезно иметь возможность наложить несколько характеристик друг на друга. ·       Примеры исходных характеристик: динамика новых случаев, динамика выздоровлений. Примеры производных характеристик: разница между новыми случаями и выздоровлениями (больше людей заболевает или больше выздоравливает - растёт или уменьшается нагрузка на систему здравоохранения). Команда Frontend разработчик Backend разработчик iOS/Android разработчик. Как таковых обязательных требований нет. Смотрите желательные. . Технологический стек Frontend Javascript / typescript; фреймворки на выбор: React + Redux, Vue, Angular. Backend Java / Kotlin; Spring framework. C#; WebAPI, EntityFramework или Dapper. Mobile (опционально) iOS/Android приложение для отображения различных графиков. В результате получит: знания: разовьете свои знания по указанным технологиям опыт: работа в команде по методологии SCRUM, распределенной разработке, общее понимание коммерческой разработки Потенциальное трудоустройство . ",
    "need_match": true
  },
  {
    "id_rp": "3490",
    "id_proj": "20",
    "name_rp": "Спецификация, проектирование и архитектура программных систем",
    "name_proj": "Построение аналитического решения, включая корпоративное хранилище данных в рамках проектов по внедрению биллинговых систем и связанных с ними дополнительных систем",
    "text_rp": "Дисциплина «Спецификация, проектирование и архитектура программных систем» предусматривает изучение методов выявления требований, анализа функциональных и нефункциональных требований, документирования требований и управления требованиями к программным системам, обеспечивает формирование знаний об организации архитектуры программных систем и умений по проектированию программных систем с применением современных методов и средств. Рассматриваются как проблемы общего характера, возникающие в процессе проектирование программных систем, так и конкретные методы, обеспечивающие достижение оптимального качества архитектуры системы с учетом результатов анализа требований.. Целью дисциплины является получение теоретических знаний в области спецификации, проектирования и архитектуры программных систем, а также практических навыков по применению полученных знаний для решения задач профессиональной деятельности. Задачей дисциплины является приобретение знаний, умений и навыков в области; - анализа требований с использованием стандартов и систем автоматизации разработки требований; - архитектур программных систем; - проектирования программных систем. Студенты должны приобрести знания: - формальных методов, технологий и инструментов разработки программного продукта, методов выявления требований, общих стратегий и конкретных методов проектирования программных систем; - основ моделирования и анализа программных систем, разработки, спецификации и управления требованиями; - теоретических основ архитектурной и программной организации информационных систем; - концепций и стратегий архитектурного проектирования программного продукта, видов структур и архитектур программных систем, их особенностей; - состава, форм и содержания документов, разрабатываемых при проектировании программных систем. Студенты должны приобрести умения: - разрабатывать и специфицировать требования, применять методы выявления и анализа функциональных и нефункциональных требований, использовать инструментальные средства, поддерживающие разработку и анализ требований; - конструировать программное обеспечение, разрабатывать основные программные документы, проводить структурную декомпозицию программной системы на компоненты, разрабатывать статические и динамические представления архитектуры программной системы; - использовать типовые архитектурные решения при проектировании программной системы, применять шаблоны проектирования и шаблоны интеграции. Студенты должны освоить навыки: - разработки и отладки программ на алгоритмических языках программирования, навыками разработки, анализа и документирования требований; - разработки архитектуры программной системы, методами обеспечения качества архитектуры программной системы, технологиями и средствами проектирования программных систем; - использования методов и средств разработки и оформления технической документации.. Вопрос №1 Назовите подход к проектированию автоматизированных систем, основанный на использовании единой модели предметной области  1.Структурное (функционально-модульное) проектирование  2.Объектно-ориентированный подход  3.Предметно-ориентированное проектирование  Вопрос №2 Укажите модель, на основании которой должны приниматься решения при проектировании (дизайне) автоматизированной системы  1. Модель требований  2. Дизайн системы  3. Модель реализации  4. Процессная модель  Вопрос №3 Укажите метафору, соответствующую автоматизированной системе, которая предназначена для ввода, структурированного хранения и обработки данных, оптимизированной для выполнения максимального количества транзакций за короткие промежутки времени  1.Учетная система  2.Аналитическая система  3.Потоковая система  4.Моделирующая система . Экзаменационный тест формируется из вопросов тестов текущего контроля и состоит из 54 вопросов . Министерство науки и высшего образования Российской Федерации ФГАОУ ВО «Санкт-Петербургский государственный электротехнический университет «ЛЭТИ» имени В.И. Ульянова (Ленина)» ____________________________________________________________ ЭКЗАМЕНАЦИОННЫЙ БИЛЕТ № 1 Дисциплина Спецификация, проектирование и архитектура программных систем  ФКТИ 1. Требования в контексте системного проектирования.  2. UML и современные технологии.   УТВЕРЖДАЮ Заведующий кафедрой                                                   К.В. Кринкин. Введение. Место дисциплины в ООП. Рабочая программа дисциплины. Материал, выносимый на аттестацию. Формы проведения аттестации. Тема 1. Программная инженерия. Основные понятия и определения. Программная инженерия. Система. Окружение. Миссия. Заинтересованное лицо. Системный подход. Классификация информационных систем. Нормативно-методическое обеспечение. Стандарты Российской Федерации в области разработки программного обеспечения. SWEBoK. Предметно-ориентированное проектирование. Тема 2. Разработка программного обеспечения на основе моделей. Особенности программного проекта. Причины неудач в проектах. MDD-разработка. Способы описания функциональных требований. Стоимость сложности программного продукта. Валидация и верификация моделей. Тема 3. Каноническое проектирование информационной системы. Комплекс стандартов ГОСТ 34. Стадии канонического проектирования. Тема 4. Спецификация и управление требованиями. Требования в контексте системного проектирования. Требования и качество. Требования и процесс выполнения проекта. Общий процесс разработки требований. Описание и анализ требований. Разработка требований в области проблем. Разработка требований в области решений. Тема 5. Визуальное моделирование. Структурный подход. Что такое моделирование. Структурные методы анализа и проектирования программного обеспечения. Диаграммы IDEF. Диаграммы DFD. BPwin. Тема 6. Визуальное моделирование. Унифицированный язык моделирования UML. Методология анализа, проектирования и разработки программного обеспечения. Принципы объектно-ориентированной методологии разработки программного обеспечения. UML и современные технологии. Тема 7. Архитектура программных систем. Типовые архитектурные решения. Цель проектирования. Архитектура системы. Типовые решения (паттерны). Типовые решения распределенной обработки данных. Заключение. Общие выводы по курсу.",
    "text_proj": "Построение аналитического решения, включая корпоративное хранилище данных в рамках проектов по внедрению биллинговых систем и связанных с ними дополнительных систем. В настоящее время компания ведет ряд крупных проектов по внедрению биллинговых систем и связанных с ними дополнительных систем. В рамках каждого из этих проектов стоит задача построения аналитического решения, включая корпоративное хранилище данных. В качестве источников данных для корпоративного хранилища помимо биллинговой системы выступают CRM-система и ЛКК (Личный кабинет клиента).  В задачи Аналитика BI включается: Анализ систем-источников, их архитектуры данных и бизнес-процессов, которые они автоматизируют. Сбор и анализ требований Заказчика, документирование требований. Проектирование предметных областей в BI-решении (Договорная работа, Финансовый учет, CRM, ЛКК) Постановка задач на разработку. Проверка реализации функциональности и передача ее Заказчику. Обучение пользователей. Задачи проекта реализуются в рамках отдела информационно-аналитических систем департамента разработки бизнес-приложений. Важно владеть: Основами баз данных. Основами проектирования баз данных. Базовыми знания SQL для анализа данных. Подходами к обследованию, сбору требований. В результате участник получит опыт участия в производственном проекте в роли аналитика BI. ",
    "need_match": true
  },
  {
    "id_rp": "4776",
    "id_proj": "34",
    "name_rp": "Web-технологии",
    "name_proj": "Разработка модулей «Кафедра» и «Деканат-2» для новой платформы сервисов личного кабинета",
    "text_rp": "Курс «Web-технологии» охватывает широкий спектр технологий и подходов, использующихся при разработке Интернет-сайтов и web-приложений. Рассматриваются основы построения web-приложений с использованием HTML, CSS. Студенты последовательно изучают основы протокола HTTP, настройку web-сервера, основы JavaScript, TypeScript и PHP, построение статических HTML-страниц и оформления с использованием CSS, LESS и SASS, разработку сервера приложений с использованием Node.JS. Построение серверной части на основе Express и Nest, разработка клиентских приложений с использованием Angular, React и Vue. Выполнение модульного тестирования web-приложений, сборка приложений с использованием GULP и Webpack, обеспечение безопасности web-приложений.. Целью дисциплины является приобретение теоретических знаний о современных web-технологиях и фреймворках и практических навыков по всем этапам разработки web-приложений от разработки web-серверов, создания и оформления web-клиентов, организации защиты от взома. Задачами изучения дисциплины является приобретение теоретических знаний по проектированию web-приложений, формирование практических умений и навыков по разработке серверной и клиентской части web-приложений, оформлению и тестированию приложений. Знание основных подходов по построению клиентской и серверной части web-приложений, по оформлению web-страниц, в том числе для просмотра с мобильных устройств, по решению типовых задач тестирования, сборки и обеспечения безопасности web-приложений с использованием языков JavaScript, TypeScript, PHP. Умение разрабатывать клиентскую и серверную часть web-приложений, осуществлять настройку, тестирование и автоматизированную сборку web-приложений, решать базовые вопросы кибербезопасности. Формирование навыков создания статических HTML-страниц, динамических web-приложений на языках JavaScript и TypeScript, навыков применения современных фреймворков разработки клиентских и серверных частей web-приложений.. Тесты размещены в курсе Moodle, примеры вопросов: Сопоставьте коды состояний HTTP их описаниям В чём преимущество HTTP/2 по сравнению с предыдущими версиями протокола? Какой HTTP метод используется для описания параметров соединения с ресурсом? Какими функциями можно управлять с помощью HTTP? Выберите соответствие команд для управления модулями с помощью npm и yarn. Министерство науки и высшего образования Российской Федерации ФГАОУ ВО «Санкт-Петербургский государственный электротехнический университет «ЛЭТИ» имени В.И. Ульянова (Ленина)» ____________________________________________________________ ЭКЗАМЕНАЦИОННЫЙ БИЛЕТ № 1 Дисциплина Web-технологии  ФКТИ 1. Что такое протокол HTTP? Какие он поддерживает методы, как передаёт параметры? Для чего предназначены заголовки?  2. Опишите структуру HTML, понятие DOM-модели. Как осуществляется обработка событий в HTML? УТВЕРЖДАЮ Заведующий кафедрой                                                   К. В. Кринкин. Тема 1. Введение. Введение. Описание трехуровневой архитектуры. Описание протокола HTTP: методы, параметры, запрос, ответ, заголовки, общие вопросы безопасности. Сервер nginx: установка, конфигурации, статическое содержимое, использование в качестве прокси. Apache-сервер. Тема 2. Основы языка JavaScript. Стандарт ECMAScript. Установка и основы использования Node.js. Язык JavaScript: базовые конструкции языка, строки, функции, объекты, классы, массивы, JSON, промисы, генераторы, Map, Set, прокси. Строгий режим JavaScript. Тема 3. Применение Node.js. Основы Deno. Работа с модулями. Использование npm и yarn, готовые модули. Событийная модель в Node.js. Создание простейшего сервера на Node.js. Эхо-сервер, параметры запроса, заголовки. Журналирование. Внешние сервера для журналирования: Rollbar – попытка отловить ошибки раньше пользователей, Sentry – прослеживание JavaScript. Работа с файлами и потоками. «Асинхронный try-catch». Использование nvm. Использование Deno: установка, настройка среды, разрешения и примеры. Тема 4. Основы HTML. Структура HTML, понятие DOM-модели. Базовые элементы и поддерживаемые ими атрибуты. Обработка событий в HTML. Элемент form, его атрибуты, соответствующие элементы: input, select, fieldset, textarea, button. Валидация введённых значений на JavaScript. Тема 5. Основы настройки стилей CSS, LESS, SASS. Оформление HTML с использованием CSS. Селекторы, свойства и их значения, псевдоклассы. Оформление границ, отступов, размеров, ссылок, списков, таблиц, текста, настройка шрифта, использование иконок. Позиционирование элементов. Адаптивная верстка, использование grid, flexbox. Использование шаблонов web-страниц, переменных в CSS. Работа с CSS с использованием JavaScript. Использование CSS-фильтров. Библиотека w3.css. Знакомство с фреймворками LESS и SASS. Тема 6. Применение Express, NestJS, RESTful, Ajax. Использование Express и Koa. Использование шаблонов на основе PUG и EJS. Cookies на сервере. Реализация сессии. Фреймворк NestJS: архитектура приложения, базовый пример на JavaScript, основные возможности, подключение шаблонов. Реализация RESTful на Node.js. Применение Ajax: XMLHttpRequest, fetch. Ограничения CORS. Тема 7. Основы использования библиотек jQuery и jQuery UI. Применение jQuery: селекторы, манипуляции с DOM, обработка событий использование свойств и классов CSS, эффекты, Ajax-запросы. Применение jQuery UI: взаимодействие, перетаскивание, изменение размера, выбираемые и сортируемые элементы, виджеты, аккордеон, автозаполнение, кнопки, переключатели, controlgroup, выбор даты, диалоговое окно, меню, отображение прогресса, selectmenu, бегунок, спиннер, вкладки, подсказки, темы. Знакомство с jQuery mobile. Тема 8. Основы языка TypeScript. Статический контроль с использованием Flow. Основы языка TypeScript: типы переменных, интерфейсы, классы, функции, шаблоны, перечисления, импорт-экспорт, пространства имён, конфигурации, JSX. Статический контроль в JavaScript с использованием Flow: настройка среды исполнения, использование из командной строки, проверка типов переменных, проверка параметров функций, generics, перечислимые типы. Тема 9. Основы работы с фреймворком Angular. Основы фреймворка Angular: структура приложения, компоненты, сервисы, иерархия сервисов. Создание директив, привязка, задание маршрутов, параметры маршрутизации. Использование шаблонных переменных, работа с дочерними компонентами, валидация данных, взаимодействие с сервером. Тема 10. Использование библиотеки React. Библиотека Immutable.JS. Применение JSX. Компоненты и их иерархия в библиотеке React, свойства, состояние переменных. Жизненный цикл компонентов, события. Работа с формами в React. Маршрутизация, хуки. Библиотека Redux для создания единого состояния приложения: действия, редьюсеры, хранилище. Тема 11. Основы работы с фреймворком Vue. Декларативная отрисовка в фреймоврке Vue. Работа с вводом пользователя. Условия и циклы. Композиция приложения из компонентов. Синтаксис шаблонов. Вычисляемые свойства и наблюдатели. Работа с классами и стилями. Маршрутизация. Применение Vuex для обеспечения единого состояния приложения. Тема 12. Тестирование web-приложений. Понятие TDD-разработки. Модульные тесты: Assert – встроенный в Node.js модуль для тестирования, применение принципов TDD; Should – библиотека утверждений; Chai – библиотека утверждений. Mocha – фреймворк для тестирования. Jest – фреймворк для тестирования. Тестирование с использованием Selenium, Selenium IDE, Protractor. Использование headless браузеров. Использованием Postman для тестирования web-сервера. Тема 13. Сборка приложений, новые возможности языка JavaScript. Автоматизация задач с помощью GULP, применение src, dest, обработка стилей, скриптов. Сборка модулей (bundle) с помощью Webpack: простая конфигурация (entry, output), использование загрузчиков и плагинов, контроль изменений кода при разработке, отладка web-приложений. Новые возможности JavaScript: web-сообщения, web-worker, web-сокеты (ws, socket.io). Возможности history, sessionStorage, localStorage, cookie. Авторизация с Passportjs. Работа с реляционными базами данных с использованием Sequelize ORM. Применение WebAssembly. Тема 14. Применение языка PHP. Настройка nginx для работы с php. Знакомство с языком PHP: область применения, основные элементы языка (переменные, условные операторы, циклы, строки, массивы, функции, элементы ООП), работа с файлами (в т.ч. xml), обработка запросов с клиента (get, post), обработка исключительных ситуаций и ошибок. Знакомство с CMS. Тема 15. Взлом и безопасность web-приложений. Возможные уязвимости web-приложений. Обеспечение безопасности web-приложения от взлома: SQL-уязвимость, Shell-код, Upload-уязвимость, Include-уязвимость, XSS-уязвимость. Инструменты проверки на наличие уязвимостей.",
    "text_proj": "Разработка модулей «Кафедра» и «Деканат-2» для новой платформы сервисов личного кабинета. В рамках преобразования личного кабинета студентов, аспирантов и сотрудников необходимо выделить сервисы, которыми пользуются деканаты и кафедры в отдельные пользовательские интерфейсы. Новые интерфейсы должны агрегировать все возможности кафедр и деканатов в одном месте, а также реализовать новые возможности на основе имеющихся данных (например, получение списка задолженностей на выпускающей кафедре). Обязательно должен: знать: HTML, JS, CSS уметь: проектировать интерфейсы пользователя; проектировать RESTful API; писать интеграционные и юнит-тесты; документировать код; владеть: навыками анализа требований пользователя; навыками работы в команде; технологиями совместной работы: git, task-tracker. Желательно должен: знать: PHP, Node.js, Webpack, SCSS, Vue.js владеть:  навыками деловой переписки. ",
    "need_match": true
  },
  {
    "id_rp": "4776",
    "id_proj": "8",
    "name_rp": "Web-технологии",
    "name_proj": "Разработка ИС \"Расписание\" / \"Деканат\"",
    "text_rp": "Курс «Web-технологии» охватывает широкий спектр технологий и подходов, использующихся при разработке Интернет-сайтов и web-приложений. Рассматриваются основы построения web-приложений с использованием HTML, CSS. Студенты последовательно изучают основы протокола HTTP, настройку web-сервера, основы JavaScript, TypeScript и PHP, построение статических HTML-страниц и оформления с использованием CSS, LESS и SASS, разработку сервера приложений с использованием Node.JS. Построение серверной части на основе Express и Nest, разработка клиентских приложений с использованием Angular, React и Vue. Выполнение модульного тестирования web-приложений, сборка приложений с использованием GULP и Webpack, обеспечение безопасности web-приложений.. Целью дисциплины является приобретение теоретических знаний о современных web-технологиях и фреймворках и практических навыков по всем этапам разработки web-приложений от разработки web-серверов, создания и оформления web-клиентов, организации защиты от взома. Задачами изучения дисциплины является приобретение теоретических знаний по проектированию web-приложений, формирование практических умений и навыков по разработке серверной и клиентской части web-приложений, оформлению и тестированию приложений. Знание основных подходов по построению клиентской и серверной части web-приложений, по оформлению web-страниц, в том числе для просмотра с мобильных устройств, по решению типовых задач тестирования, сборки и обеспечения безопасности web-приложений с использованием языков JavaScript, TypeScript, PHP. Умение разрабатывать клиентскую и серверную часть web-приложений, осуществлять настройку, тестирование и автоматизированную сборку web-приложений, решать базовые вопросы кибербезопасности. Формирование навыков создания статических HTML-страниц, динамических web-приложений на языках JavaScript и TypeScript, навыков применения современных фреймворков разработки клиентских и серверных частей web-приложений.. Тесты размещены в курсе Moodle, примеры вопросов: Сопоставьте коды состояний HTTP их описаниям В чём преимущество HTTP/2 по сравнению с предыдущими версиями протокола? Какой HTTP метод используется для описания параметров соединения с ресурсом? Какими функциями можно управлять с помощью HTTP? Выберите соответствие команд для управления модулями с помощью npm и yarn. Министерство науки и высшего образования Российской Федерации ФГАОУ ВО «Санкт-Петербургский государственный электротехнический университет «ЛЭТИ» имени В.И. Ульянова (Ленина)» ____________________________________________________________ ЭКЗАМЕНАЦИОННЫЙ БИЛЕТ № 1 Дисциплина Web-технологии  ФКТИ 1. Что такое протокол HTTP? Какие он поддерживает методы, как передаёт параметры? Для чего предназначены заголовки?  2. Опишите структуру HTML, понятие DOM-модели. Как осуществляется обработка событий в HTML? УТВЕРЖДАЮ Заведующий кафедрой                                                   К. В. Кринкин. Тема 1. Введение. Введение. Описание трехуровневой архитектуры. Описание протокола HTTP: методы, параметры, запрос, ответ, заголовки, общие вопросы безопасности. Сервер nginx: установка, конфигурации, статическое содержимое, использование в качестве прокси. Apache-сервер. Тема 2. Основы языка JavaScript. Стандарт ECMAScript. Установка и основы использования Node.js. Язык JavaScript: базовые конструкции языка, строки, функции, объекты, классы, массивы, JSON, промисы, генераторы, Map, Set, прокси. Строгий режим JavaScript. Тема 3. Применение Node.js. Основы Deno. Работа с модулями. Использование npm и yarn, готовые модули. Событийная модель в Node.js. Создание простейшего сервера на Node.js. Эхо-сервер, параметры запроса, заголовки. Журналирование. Внешние сервера для журналирования: Rollbar – попытка отловить ошибки раньше пользователей, Sentry – прослеживание JavaScript. Работа с файлами и потоками. «Асинхронный try-catch». Использование nvm. Использование Deno: установка, настройка среды, разрешения и примеры. Тема 4. Основы HTML. Структура HTML, понятие DOM-модели. Базовые элементы и поддерживаемые ими атрибуты. Обработка событий в HTML. Элемент form, его атрибуты, соответствующие элементы: input, select, fieldset, textarea, button. Валидация введённых значений на JavaScript. Тема 5. Основы настройки стилей CSS, LESS, SASS. Оформление HTML с использованием CSS. Селекторы, свойства и их значения, псевдоклассы. Оформление границ, отступов, размеров, ссылок, списков, таблиц, текста, настройка шрифта, использование иконок. Позиционирование элементов. Адаптивная верстка, использование grid, flexbox. Использование шаблонов web-страниц, переменных в CSS. Работа с CSS с использованием JavaScript. Использование CSS-фильтров. Библиотека w3.css. Знакомство с фреймворками LESS и SASS. Тема 6. Применение Express, NestJS, RESTful, Ajax. Использование Express и Koa. Использование шаблонов на основе PUG и EJS. Cookies на сервере. Реализация сессии. Фреймворк NestJS: архитектура приложения, базовый пример на JavaScript, основные возможности, подключение шаблонов. Реализация RESTful на Node.js. Применение Ajax: XMLHttpRequest, fetch. Ограничения CORS. Тема 7. Основы использования библиотек jQuery и jQuery UI. Применение jQuery: селекторы, манипуляции с DOM, обработка событий использование свойств и классов CSS, эффекты, Ajax-запросы. Применение jQuery UI: взаимодействие, перетаскивание, изменение размера, выбираемые и сортируемые элементы, виджеты, аккордеон, автозаполнение, кнопки, переключатели, controlgroup, выбор даты, диалоговое окно, меню, отображение прогресса, selectmenu, бегунок, спиннер, вкладки, подсказки, темы. Знакомство с jQuery mobile. Тема 8. Основы языка TypeScript. Статический контроль с использованием Flow. Основы языка TypeScript: типы переменных, интерфейсы, классы, функции, шаблоны, перечисления, импорт-экспорт, пространства имён, конфигурации, JSX. Статический контроль в JavaScript с использованием Flow: настройка среды исполнения, использование из командной строки, проверка типов переменных, проверка параметров функций, generics, перечислимые типы. Тема 9. Основы работы с фреймворком Angular. Основы фреймворка Angular: структура приложения, компоненты, сервисы, иерархия сервисов. Создание директив, привязка, задание маршрутов, параметры маршрутизации. Использование шаблонных переменных, работа с дочерними компонентами, валидация данных, взаимодействие с сервером. Тема 10. Использование библиотеки React. Библиотека Immutable.JS. Применение JSX. Компоненты и их иерархия в библиотеке React, свойства, состояние переменных. Жизненный цикл компонентов, события. Работа с формами в React. Маршрутизация, хуки. Библиотека Redux для создания единого состояния приложения: действия, редьюсеры, хранилище. Тема 11. Основы работы с фреймворком Vue. Декларативная отрисовка в фреймоврке Vue. Работа с вводом пользователя. Условия и циклы. Композиция приложения из компонентов. Синтаксис шаблонов. Вычисляемые свойства и наблюдатели. Работа с классами и стилями. Маршрутизация. Применение Vuex для обеспечения единого состояния приложения. Тема 12. Тестирование web-приложений. Понятие TDD-разработки. Модульные тесты: Assert – встроенный в Node.js модуль для тестирования, применение принципов TDD; Should – библиотека утверждений; Chai – библиотека утверждений. Mocha – фреймворк для тестирования. Jest – фреймворк для тестирования. Тестирование с использованием Selenium, Selenium IDE, Protractor. Использование headless браузеров. Использованием Postman для тестирования web-сервера. Тема 13. Сборка приложений, новые возможности языка JavaScript. Автоматизация задач с помощью GULP, применение src, dest, обработка стилей, скриптов. Сборка модулей (bundle) с помощью Webpack: простая конфигурация (entry, output), использование загрузчиков и плагинов, контроль изменений кода при разработке, отладка web-приложений. Новые возможности JavaScript: web-сообщения, web-worker, web-сокеты (ws, socket.io). Возможности history, sessionStorage, localStorage, cookie. Авторизация с Passportjs. Работа с реляционными базами данных с использованием Sequelize ORM. Применение WebAssembly. Тема 14. Применение языка PHP. Настройка nginx для работы с php. Знакомство с языком PHP: область применения, основные элементы языка (переменные, условные операторы, циклы, строки, массивы, функции, элементы ООП), работа с файлами (в т.ч. xml), обработка запросов с клиента (get, post), обработка исключительных ситуаций и ошибок. Знакомство с CMS. Тема 15. Взлом и безопасность web-приложений. Возможные уязвимости web-приложений. Обеспечение безопасности web-приложения от взлома: SQL-уязвимость, Shell-код, Upload-уязвимость, Include-уязвимость, XSS-уязвимость. Инструменты проверки на наличие уязвимостей.",
    "text_proj": "Разработка ИС \"Расписание\" / \"Деканат\". Информационная система (ИС) \"Расписание\" обеспечивает процессы формирования и предоставления расписания в вузе. В рамках неё выполняется согласование пожеланий преподавателей, кафедр и возможностей аудиторного фонда ЛЭТИ. Система реализована на JavaScript с использованием фреймворка Svelte. Необходимо перевести систему на TypeScript, фреймворк Vue 2.0 с материальным дизайном Bootstrap (шаблон приложения будет дан). ИС \"Деканат\" предназначена для автоматизации процессов в деканате. В настоящее время осуществляется информационное обследование процессов деканата, разработка начнётся в середине марта. Технологии: TypeScript, фреймворк Vue 2.0 с материальным дизайном Bootstrap. Обязательно должен: знать: HTML, CSS, JavaScript, TypeScript. уметь выполнять:  проектирование интерфейса пользователя и запросов на web-сервер; разработку статического web-приложения; реализацию динамического web-приложения; подключение web-приложения к web-серверу; разработку модульных и интеграционных тестов; описание своих решений в виде справки для пользователя; владеть: основными навыками анализа требований пользователя, разработки web-приложений, работе в команде; технологиями совместной работы: git, wiki, bugtracker. Желательно должен: знать: фреймворки Vue 2.0, NestJS, Bootstrap; уметь: проектировать UX web-приложения; разрабатывать дизайн web-приложения; разрабатывать новые web-компоненты; разрабатывать серверную часть web-приложений; проектировать БД; выполнять нагрузочное тестирование; проверять web-приложение на взлом и готовить рекомендации по защите от взлома; работать в качестве технической поддержки для пользователя; описывать разработанные решения в виде публикаций; обладать навыком совместной разработки. В результате получит большинство знаний из перечисленных в \"Желательно должен\". Отбор студентов для проекта. После этого задания возможны следующие варианты:   - мы берём Вас на работу в отдел ОРПК ЛЭТИ (это основная цель участия в данном проекте, если Вы в этом не заинтересованы, то прошу сразу меня об этом уведомить), - мы даём дополнительное задание в случае высокой конкуренции либо   - мы рекомендуем Вас в другие проекты (в ЛЭТИ или других организациях). Интеграция созданных решений. Объединение полученных тестовых заданий в одну систему. Выполнение первого этапа проекта. Проектирование интерфейса пользователя Проектирование набора запросов на сервер Разработка статического web-приложения Разработка динамического web-приложения Проектирование структуры БД Разработка web-сервера Подключение к web-серверу Тестирование Проверка на взлом Опытная эксплуатация. 2. Формирование расписания для военно-учебного центра. 2.1. Клиентская часть ИС \"Расписание\" ЛЭТИ реализована с помощью фреймворка Svelte. Необходимо заданные в п.1 компоненты переписать на TypeScript+Vue2+Bootstrap, подготовить тесты и техническую документацию. Обращаю внимание, что разные компоненты выданы разным студентам, поэтому работать прошу именно с теми компонентами, которые указаны в п.1. В дальнейшем компоненты будут объединены в одно web-приложение. 2.2. Результаты прошу в виде pull request (PR) отправить в GIT. На написанный код будут выданы рекомендации/замечания/предложения, которые необходимо будет учесть. 2.3. К сожалению, данное задание не проверяет знания, умения и навыки по всему циклу разработки программного обеспечения, но позволяет \"окунуться\" в реальную разработку и проверить готовность решать реальные задачи. 2.4. Рекомендуемый срок выполнения до отправки первого PR: 2-3 недели, максимальный: 5 недель. Предполагается, что с рекомендациями/замечаниями/предложениями по PR Вы справитесь за 2-3 недели. 3. Формирование расписания для кафедры ФвиС. 2.1. Клиентская часть ИС \"Расписание\" ЛЭТИ реализована с помощью фреймворка Svelte. Необходимо заданные в п.1 компоненты переписать на TypeScript+Vue2+Bootstrap, подготовить тесты и техническую документацию. Обращаю внимание, что разные компоненты выданы разным студентам, поэтому работать прошу именно с теми компонентами, которые указаны в п.1. В дальнейшем компоненты будут объединены в одно web-приложение. 2.2. Результаты прошу в виде pull request (PR) отправить в GIT. На написанный код будут выданы рекомендации/замечания/предложения, которые необходимо будет учесть. 2.3. К сожалению, данное задание не проверяет знания, умения и навыки по всему циклу разработки программного обеспечения, но позволяет \"окунуться\" в реальную разработку и проверить готовность решать реальные задачи. 2.4. Рекомендуемый срок выполнения до отправки первого PR: 2-3 недели, максимальный: 5 недель. Предполагается, что с рекомендациями/замечаниями/предложениями по PR Вы справитесь за 2-3 недели. 4. Подтверждение перечня дисциплин. 2.1. Клиентская часть ИС \"Расписание\" ЛЭТИ реализована с помощью фреймворка Svelte. Необходимо заданные в п.1 компоненты переписать на TypeScript+Vue2+Bootstrap, подготовить тесты и техническую документацию. Обращаю внимание, что разные компоненты выданы разным студентам, поэтому работать прошу именно с теми компонентами, которые указаны в п.1. В дальнейшем компоненты будут объединены в одно web-приложение. 2.2. Результаты прошу в виде pull request (PR) отправить в GIT. На написанный код будут выданы рекомендации/замечания/предложения, которые необходимо будет учесть. 2.3. К сожалению, данное задание не проверяет знания, умения и навыки по всему циклу разработки программного обеспечения, но позволяет \"окунуться\" в реальную разработку и проверить готовность решать реальные задачи. 2.4. Рекомендуемый срок выполнения до отправки первого PR: 2-3 недели, максимальный: 5 недель. Предполагается, что с рекомендациями/замечаниями/предложениями по PR Вы справитесь за 2-3 недели. 6. Составление пожеланий по экзаменационной сессии. 2.1. Клиентская часть ИС \"Расписание\" ЛЭТИ реализована с помощью фреймворка Svelte. Необходимо заданные в п.1 компоненты переписать на TypeScript+Vue2+Bootstrap, подготовить тесты и техническую документацию. Обращаю внимание, что разные компоненты выданы разным студентам, поэтому работать прошу именно с теми компонентами, которые указаны в п.1. В дальнейшем компоненты будут объединены в одно web-приложение. 2.2. Результаты прошу в виде pull request (PR) отправить в GIT. На написанный код будут выданы рекомендации/замечания/предложения, которые необходимо будет учесть. 2.3. К сожалению, данное задание не проверяет знания, умения и навыки по всему циклу разработки программного обеспечения, но позволяет \"окунуться\" в реальную разработку и проверить готовность решать реальные задачи. 2.4. Рекомендуемый срок выполнения до отправки первого PR: 2-3 недели, максимальный: 5 недель. Предполагается, что с рекомендациями/замечаниями/предложениями по PR Вы справитесь за 2-3 недели. 7. Составление пожеланий по экзаменационной сессии. 2.1. Клиентская часть ИС \"Расписание\" ЛЭТИ реализована с помощью фреймворка Svelte. Необходимо заданные в п.1 компоненты переписать на TypeScript+Vue2+Bootstrap, подготовить тесты и техническую документацию. Обращаю внимание, что разные компоненты выданы разным студентам, поэтому работать прошу именно с теми компонентами, которые указаны в п.1. В дальнейшем компоненты будут объединены в одно web-приложение. 2.2. Результаты прошу в виде pull request (PR) отправить в GIT. На написанный код будут выданы рекомендации/замечания/предложения, которые необходимо будет учесть. 2.3. К сожалению, данное задание не проверяет знания, умения и навыки по всему циклу разработки программного обеспечения, но позволяет \"окунуться\" в реальную разработку и проверить готовность решать реальные задачи. 2.4. Рекомендуемый срок выполнения до отправки первого PR: 2-3 недели, максимальный: 5 недель. Предполагается, что с рекомендациями/замечаниями/предложениями по PR Вы справитесь за 2-3 недели. 5. Согласование экзаменационной сессии. 2.1. Клиентская часть ИС \"Расписание\" ЛЭТИ реализована с помощью фреймворка Svelte. Необходимо заданные в п.1 компоненты переписать на TypeScript+Vue2+Bootstrap, подготовить тесты и техническую документацию. Обращаю внимание, что разные компоненты выданы разным студентам, поэтому работать прошу именно с теми компонентами, которые указаны в п.1. В дальнейшем компоненты будут объединены в одно web-приложение. 2.2. Результаты прошу в виде pull request (PR) отправить в GIT. На написанный код будут выданы рекомендации/замечания/предложения, которые необходимо будет учесть. 2.3. К сожалению, данное задание не проверяет знания, умения и навыки по всему циклу разработки программного обеспечения, но позволяет \"окунуться\" в реальную разработку и проверить готовность решать реальные задачи. 2.4. Рекомендуемый срок выполнения до отправки первого PR: 2-3 недели, максимальный: 5 недель. Предполагается, что с рекомендациями/замечаниями/предложениями по PR Вы справитесь за 2-3 недели. 8. Составление пожеланий по расписанию (часть 2). 2.1. Клиентская часть ИС \"Расписание\" ЛЭТИ реализована с помощью фреймворка Svelte. Необходимо заданные в п.1 компоненты переписать на TypeScript+Vue2+Bootstrap, подготовить тесты и техническую документацию. Обращаю внимание, что разные компоненты выданы разным студентам, поэтому работать прошу именно с теми компонентами, которые указаны в п.1. В дальнейшем компоненты будут объединены в одно web-приложение. 2.2. Результаты прошу в виде pull request (PR) отправить в GIT. На написанный код будут выданы рекомендации/замечания/предложения, которые необходимо будет учесть. 2.3. К сожалению, данное задание не проверяет знания, умения и навыки по всему циклу разработки программного обеспечения, но позволяет \"окунуться\" в реальную разработку и проверить готовность решать реальные задачи. 2.4. Рекомендуемый срок выполнения до отправки первого PR: 2-3 недели, максимальный: 5 недель. Предполагается, что с рекомендациями/замечаниями/предложениями по PR Вы справитесь за 2-3 недели. 9. Назначение преподавателей на дисциплины. 2.1. Клиентская часть ИС \"Расписание\" ЛЭТИ реализована с помощью фреймворка Svelte. Необходимо заданные в п.1 компоненты переписать на TypeScript+Vue2+Bootstrap, подготовить тесты и техническую документацию. Обращаю внимание, что разные компоненты выданы разным студентам, поэтому работать прошу именно с теми компонентами, которые указаны в п.1. В дальнейшем компоненты будут объединены в одно web-приложение. 2.2. Результаты прошу в виде pull request (PR) отправить в GIT. На написанный код будут выданы рекомендации/замечания/предложения, которые необходимо будет учесть. 2.3. К сожалению, данное задание не проверяет знания, умения и навыки по всему циклу разработки программного обеспечения, но позволяет \"окунуться\" в реальную разработку и проверить готовность решать реальные задачи. 2.4. Рекомендуемый срок выполнения до отправки первого PR: 2-3 недели, максимальный: 5 недель. Предполагается, что с рекомендациями/замечаниями/предложениями по PR Вы справитесь за 2-3 недели. 11. Пожелания преподавателей по экзаменационной сессии. 2.1. Клиентская часть ИС \"Расписание\" ЛЭТИ реализована с помощью фреймворка Svelte. Необходимо заданные в п.1 компоненты переписать на TypeScript+Vue2+Bootstrap, подготовить тесты и техническую документацию. Обращаю внимание, что разные компоненты выданы разным студентам, поэтому работать прошу именно с теми компонентами, которые указаны в п.1. В дальнейшем компоненты будут объединены в одно web-приложение. 2.2. Результаты прошу в виде pull request (PR) отправить в GIT. На написанный код будут выданы рекомендации/замечания/предложения, которые необходимо будет учесть. 2.3. К сожалению, данное задание не проверяет знания, умения и навыки по всему циклу разработки программного обеспечения, но позволяет \"окунуться\" в реальную разработку и проверить готовность решать реальные задачи. 2.4. Рекомендуемый срок выполнения до отправки первого PR: 2-3 недели, максимальный: 5 недель. Предполагается, что с рекомендациями/замечаниями/предложениями по PR Вы справитесь за 2-3 недели. 13. Последняя версия расписания (черновик). 2.1. Клиентская часть ИС \"Расписание\" ЛЭТИ реализована с помощью фреймворка Svelte. Необходимо заданные в п.1 компоненты переписать на TypeScript+Vue2+Bootstrap, подготовить тесты и техническую документацию. Обращаю внимание, что разные компоненты выданы разным студентам, поэтому работать прошу именно с теми компонентами, которые указаны в п.1. В дальнейшем компоненты будут объединены в одно web-приложение. 2.2. Результаты прошу в виде pull request (PR) отправить в GIT. На написанный код будут выданы рекомендации/замечания/предложения, которые необходимо будет учесть. 2.3. К сожалению, данное задание не проверяет знания, умения и навыки по всему циклу разработки программного обеспечения, но позволяет \"окунуться\" в реальную разработку и проверить готовность решать реальные задачи. 2.4. Рекомендуемый срок выполнения до отправки первого PR: 2-3 недели, максимальный: 5 недель. Предполагается, что с рекомендациями/замечаниями/предложениями по PR Вы справитесь за 2-3 недели. 8. Составление пожеланий по расписанию (часть 1). 2.1. Клиентская часть ИС \"Расписание\" ЛЭТИ реализована с помощью фреймворка Svelte. Необходимо заданные в п.1 компоненты переписать на TypeScript+Vue2+Bootstrap, подготовить тесты и техническую документацию. Обращаю внимание, что разные компоненты выданы разным студентам, поэтому работать прошу именно с теми компонентами, которые указаны в п.1. В дальнейшем компоненты будут объединены в одно web-приложение. 2.2. Результаты прошу в виде pull request (PR) отправить в GIT. На написанный код будут выданы рекомендации/замечания/предложения, которые необходимо будет учесть. 2.3. К сожалению, данное задание не проверяет знания, умения и навыки по всему циклу разработки программного обеспечения, но позволяет \"окунуться\" в реальную разработку и проверить готовность решать реальные задачи. 2.4. Рекомендуемый срок выполнения до отправки первого PR: 2-3 недели, максимальный: 5 недель. Предполагается, что с рекомендациями/замечаниями/предложениями по PR Вы справитесь за 2-3 недели. 12. Бронирование аудиторий. 2.1. Клиентская часть ИС \"Расписание\" ЛЭТИ реализована с помощью фреймворка Svelte. Необходимо заданные в п.1 компоненты переписать на TypeScript+Vue2+Bootstrap, подготовить тесты и техническую документацию. Обращаю внимание, что разные компоненты выданы разным студентам, поэтому работать прошу именно с теми компонентами, которые указаны в п.1. В дальнейшем компоненты будут объединены в одно web-приложение. 2.2. Результаты прошу в виде pull request (PR) отправить в GIT. На написанный код будут выданы рекомендации/замечания/предложения, которые необходимо будет учесть. 2.3. К сожалению, данное задание не проверяет знания, умения и навыки по всему циклу разработки программного обеспечения, но позволяет \"окунуться\" в реальную разработку и проверить готовность решать реальные задачи. 2.4. Рекомендуемый срок выполнения до отправки первого PR: 2-3 недели, максимальный: 5 недель. Предполагается, что с рекомендациями/замечаниями/предложениями по PR Вы справитесь за 2-3 недели. 10. Пожелания преподавателей по расписанию. 2.1. Клиентская часть ИС \"Расписание\" ЛЭТИ реализована с помощью фреймворка Svelte. Необходимо заданные в п.1 компоненты переписать на TypeScript+Vue2+Bootstrap, подготовить тесты и техническую документацию. Обращаю внимание, что разные компоненты выданы разным студентам, поэтому работать прошу именно с теми компонентами, которые указаны в п.1. В дальнейшем компоненты будут объединены в одно web-приложение. 2.2. Результаты прошу в виде pull request (PR) отправить в GIT. На написанный код будут выданы рекомендации/замечания/предложения, которые необходимо будет учесть. 2.3. К сожалению, данное задание не проверяет знания, умения и навыки по всему циклу разработки программного обеспечения, но позволяет \"окунуться\" в реальную разработку и проверить готовность решать реальные задачи. 2.4. Рекомендуемый срок выполнения до отправки первого PR: 2-3 недели, максимальный: 5 недель. Предполагается, что с рекомендациями/замечаниями/предложениями по PR Вы справитесь за 2-3 недели. 14. Управление семестром. Настройка дат и Факультеты, наборы. 2.1. Клиентская часть ИС \"Расписание\" ЛЭТИ реализована с помощью фреймворка Svelte. Необходимо заданные в п.1 компоненты переписать на TypeScript+Vue2+Bootstrap, подготовить тесты и техническую документацию. Обращаю внимание, что разные компоненты выданы разным студентам, поэтому работать прошу именно с теми компонентами, которые указаны в п.1. В дальнейшем компоненты будут объединены в одно web-приложение. 2.2. Результаты прошу в виде pull request (PR) отправить в GIT. На написанный код будут выданы рекомендации/замечания/предложения, которые необходимо будет учесть. 2.3. К сожалению, данное задание не проверяет знания, умения и навыки по всему циклу разработки программного обеспечения, но позволяет \"окунуться\" в реальную разработку и проверить готовность решать реальные задачи. 2.4. Рекомендуемый срок выполнения до отправки первого PR: 2-3 недели, максимальный: 5 недель. Предполагается, что с рекомендациями/замечаниями/предложениями по PR Вы справитесь за 2-3 недели. 1. Формирование расписания для кафедры ИнЯз. 2.1. Клиентская часть ИС \"Расписание\" ЛЭТИ реализована с помощью фреймворка Svelte. Необходимо заданные в п.1 компоненты переписать на TypeScript+Vue2+Bootstrap, подготовить тесты и техническую документацию. Обращаю внимание, что разные компоненты выданы разным студентам, поэтому работать прошу именно с теми компонентами, которые указаны в п.1. В дальнейшем компоненты будут объединены в одно web-приложение. 2.2. Результаты прошу в виде pull request (PR) отправить в GIT. На написанный код будут выданы рекомендации/замечания/предложения, которые необходимо будет учесть. 2.3. К сожалению, данное задание не проверяет знания, умения и навыки по всему циклу разработки программного обеспечения, но позволяет \"окунуться\" в реальную разработку и проверить готовность решать реальные задачи. 2.4. Рекомендуемый срок выполнения до отправки первого PR: 2-3 недели, максимальный: 5 недель. Предполагается, что с рекомендациями/замечаниями/предложениями по PR Вы справитесь за 2-3 недели. ",
    "need_match": true
  },
  {
    "id_rp": "4770",
    "id_proj": "48",
    "name_rp": "Машинное обучение",
    "name_proj": "Разработка рекомендательной машины ",
    "text_rp": "Дисциплина посвящена знакомству с основными понятиями машинного обучения, алгоритмами, которые могут «обучаться» на данных с целью прогнозирования и принятия решений. Рассматриваются основные классы задач машинного обучения, такие как классификация, кластеризация, регрессия, снижение размерности, ранжирование. Особое внимание уделяется рассмотрению современных инструментов в этой области и приобретению практических навыков для использования аппарата машинного обучения в прикладных задачах.. Изучение дисциплины нацелено на приобретение знаний об основных понятиях, проблемах и современных математических методах машинного обучения, и формирование практических навыков их применения для решения задач профессиональной деятельности. Освоение математических методов и алгоритмов машинного обучения, позволяющих получать формализованные постановки задач машинного обучения. Приобретение знаний о способах проведения численных экспериментов и интерпретации полученных результатов. Формирование умения модифицировать известные или создавать новые методы машинного обучения. Получение навыков реализации и применения алгоритмов машинного обучения для решения прикладных задач.. Пример вопросов теста текущего контроля Тесты состоят из 20 вопросов с возможностью выбора одного или нескольких вариантов ответа.  1. Методы машинного обучения: a)   решают задачу в аналитическом виде b)  выделяют закономерности в данных c) производят поиск готового решения в БД 2. Если для модели машинного обучения необходимы данные с известным результатом, то данная модель обучается: a)   С учителем b)  Без учителя c)  С подкреплением 3. Какие перечисленные библиотеки Python используются для хранения И обработки данных: a)   MatPlotLib b)  NumPy c)   Pandas d)  Sklearn. Министерство науки и высшего образования Российской Федерации ФГАОУ ВО «Санкт-Петербургский государственный электротехнический университет «ЛЭТИ» имени В.И. Ульянова (Ленина)» ____________________________________________________________ ЭКЗАМЕНАЦИОННЫЙ БИЛЕТ № 1 Дисциплина Машинное обучение   ФКТИ 1. Формальная постановка задачи обучения с учителем 2. Логистическая и мультиномиальная регрессия 3. Кластеризация. Модель смеси распределений. УТВЕРЖДАЮ Заведующий кафедрой               К.В. Кринкин                             . Тема 1. Основы машинного обучения. Понятие машинного обучения. Отличие от традиционного подхода решения задач. Тема 2. Классификация подходов в машинном обучении. Обучение с учителем. Обучение без учителя. Обучения с подкреплением. Пакетное и динамическое обучение. Обучение на основе образцов. Обучение на основе моделей. Тема 3. Представление и предобработка данных. Представление данных, тензоры. Необходимость предобработки данных. Стандартизация данных. Приведения данных к одному диапазону. Недостающие значения в наборах данных. Тема 4. Метрики оценки моделей. Необходимость оценки моделей. Метрики для регрессионных моделей. Метрики для классифицирующих моделей. Метрики для моделей кластеризации. Тема 5. Регрессия. Регрессия. Линейная регрессия. Гребневая регрессия. Лассо регрессия. Регрессия в sklearn. Тема 6. Классификация. Классификация. Виды классификации. KNN. SVC. Решающие деревья/случайный лес. Наивный Байесовский классификатор. Линейный дискриминантный анализ. Логистическая регрессия. Классификация в sklearn. Тема 7. Кластеризация. Кластеризация. Иерархическая кластеризация. K-средних. OPTICS. DBSCAN. Спектральная кластеризация. Заключение. Перспективы применения методов машинного обучения к решению прикладных задач",
    "text_proj": "Разработка рекомендательной машины. Рекомендательная машина необходима для помощи в выборе, который осуществляется обучающимся на всем периоде обучения, начиная от выбора направления при поступлении и выбора вакансии при трудоустройстве или смены работы. При этом выбор не ограничивается только учебными модулями. Он связан выбором проектов, преподавателей, участием в различных мероприятиях, курсов ДПО и т.п. Результаты выбора формируют цифровой след обучающегося. На правильность выбора влияет множество факторов, включая цифровой след и имеющуюся цель (например, занять ту или иную должность в компании).  Для того чтобы учесть все эти факторы разрабатывается рекомендательная машина, которая помогает обучающемуся сделать правильный выбор. В данном проекте необходимо разрабатывать модули рекомендательной машины: шину данных для работы с множеством разных источников; модуль предобработки данных для преобразования исходных данных к виду и качеству необходимому для рекомендательных моделей ядро машинного обучения для подключения разных систем машинного обучения и выполнения на них различных моделей и алгоритмов машинного обучения модуль управления, обеспечивающий как формирование рекомендаций, так и переобучение рекомендательных моделей.  . Обязательно должен: знать: принципы выполнения машинного обучения, ООП уметь: изучать open source системы владеть: языками программирования Python, Java. Желательно должен: знать: принципы работы рекомендательных машин, шин данных, движков машинного обучения уметь: строить сложные программные системы из различных компонент владеть: Apach Spark, Apach Drill, scikit-learn и др. В результате получит: знать: работу рекомендательных машин, шин данных, движков машинного обучения уметь: строить сложные программные системы из различных компонент владеть: Apach Spark, Apach Drill, scikit-learn и др. ",
    "need_match": true
  },
  {
    "id_rp": "1447",
    "id_proj": "43",
    "name_rp": "Моделирование нелинейных динамических систем",
    "name_proj": "Нелинейная динамика и приложения теории хаоса",
    "text_rp": "Дисциплина направлена на ознакомление студентов с особенностями нелинейного поведения динамических систем, раскрытие закономерностей нелинейных процессов, возникающих в процессе проектирования и эксплуатации комплексных технических систем. Предусматривает овладение методами научных исследований в области теоретической и экспериментальной нелинейной динамики, современным инструментарием анализа поведения динамических систем и его имплементацией в средах графического программирования. Знакомит с математическим аппаратом описания нелинейных систем и процессов, а также с приемами и подходами для их моделирования на современных цифровых вычислителях.. Формирование у студентов устойчивых представлений о фундаментальном характере нелинейных процессов в природных и технических системах, положительных и отрицательных эффектах нелинейного поведения, областях практического применения детерминированного хаоса. Изучение научных и технических проблем, связанных с теорией и практикой нелинейной динамики, причин и механизмов возникновения хаотических режимов в динамических системах. Приобретение знаний в области математического аппарата нелинейных дифференциальных уравнений, умений идентификации динамических систем, дискретных интегрирующих операторов. Приобретение умений в области анализа и обработки результатов вычислительного и полунатурного эксперимента с использованием современной вычислительной техники и сред графического программирования. Освоение навыков анализа и обобщения бифуркационного поведения систем, способствующее пониманию природы детерминированного хаоса и феномена катастроф.. . Министерство науки и высшего образования Российской Федерации ФГАОУ ВО «Санкт-Петербургский государственный электротехнический университет «ЛЭТИ» имени В.И. Ульянова (Ленина)» ____________________________________________________________ ЭКЗАМЕНАЦИОННЫЙ БИЛЕТ № 1 Дисциплина Моделирование нелинейных динамических систем ФКТИ 1. Что такое аттрактор? Какие аттракторы называются странными? 2. Практическая задача. Постройте график поведения решения хаотической системы, описывающей аттрактор Рёсслера, во временной области. В качестве численного метода решения ОДУ используйте неявный метод Трапеций.   УТВЕРЖДАЮ Заведующий кафедрой                                                   Н.Г. Рыжов. Введение. Предпосылки возникновения и история нелинейной динамики. Работы Э. Лоренца, А. Пуанкаре, Д. Спротта. Хаотические процессы в природе на примере Солнечной системы, турбулентности, погодных явлений. Важность учета нелинейностей при проектировании технических объектов. Тема 1. Общие сведения о динамических системах. Способы описания динамических систем. Дифференциальное исчисление. Уравнения в частных производных, обыкновенные уравнения, дифференциально-алгебраические уравнения. Форма пространства состояний. Передаточные функции и типовые звенья. Операторный метод. Тема 2. Нелинейные системы и процессы. Виды и причины возникновения нелинейностей в природе и технике. Основные типы нелинейностей, встречающиеся в математических моделях динамических систем. Нелинейности, связанные с переходом от дифференциальных уравнений к конечно-разностным схемам. Шаг дискретизации как параметр нелинейности. Тема 3. Моделирование динамических систем в средах графического программирования. Среда LabVIEW как инструмент моделирования динамических систем. Понятие виртуального прибора. Лицевая панель и блок-диаграмма. Модуль Simulation Module. Переход от графической модели к исполняемому коду. Оптимизация производительности. Виртуальный прибор построения бифуркационных диаграмм. Тема 4. Дискретные нелинейные отображения. Логистическое отображение. Отображение Богданова. Отображение Хенона. Экспоненциальное отображение. Отображение Фейгенбаума. Тема 5. Численные методы интегрирования при моделировании нелинейных динамических систем. Численный метод интегрирования как способ перехода от непрерывных моделей динамических систем к конечно-разностным схемам. Явные методы численного интегрирования. Экстраполяционные методы. Полуявные методы интегрирования. Реверсивность и симметричность методов. Оценка производительности численных методов с помощью графика эффективности. Тема 6. Детерминированный хаос. Хаотические процессы и явления. Явление детерминированного хаоса. Плотность фазовых орбит. Топологическое смешивание. Чувствительность к начальным условиям. Фрактальность решений хаотических систем. Типы бифуркаций. Фазовое пространство. Тема 7. Алгоритмы и инструменты анализа хаотических систем. Одномерные бифуркационные диаграммы. Двумерные бифуркационные диаграммы. Каскады Фейгенбаума. H-диаграммы хаотических систем. Отображение фазовых портретов системы и ошибки моделирования. Вычисление ляпуновских экспонент. Обнаружение хаотического поведения в произвольных сигналах. Тема 8. Синхронизация хаотических систем. Общие принципы хаотической синхронизации. Унимодальная и бимодальная синхронизация. Поиск оптимального значения коэффициента синхронизации. Синхронизация дискретных моделей хаотических систем, полученных различными численными методами. Различные топологические схемы при синхронизации хаотических систем. Синхронизация аналоговых и дискретных моделей хаотических систем. Тема 9. Практические приложения детерминированного хаоса. Сенсорные элементы на основе хаотических систем. Осциллятор Дуффинга как высокочувствительный детектор гармонических сигналов. Металлодетекторы на основе принципа синхронизации. Хаос в шифровании и защищенных системах связи. Заключение. Подведение итогов курса. Перспективы развития и внедрения нелинейных решений в теорию и практику автоматического управления, цифровой обработки сигналов и систем связи.",
    "text_proj": "Нелинейная динамика и приложения теории хаоса. Создание математических основ решения прикладных задач с использованием адаптивных дискретных отображений Разработка программного обеспечения для автоматизации компьютерного эксперимента и визуализации хаотической динамики Основы скрытной передачи данных. Хаотические системы связи. Стеганография Разработка приложений-мессенжеров с шифрованием сообщений на основе теории хаоса Разработка средств шифрования изображений, текста, потокового видео с применением теории динамического хаоса. Сравнительное исследование криптостойкости хаотических и традиционных алгоритмов Разработка способов обнаружения факта передачи данных в хаотических системах связи Разработка новых способов модуляции и демодуляции хаотических сигналов Синтез математического описания новых дискретных хаотических систем Разработка методов обработки хаотических сигналов Публикация результатов в высокорейтинговых изданиях. Английский язык - Upper Intermediate или выше. Навыки программирования Базовая алгебра. Спецразделы математики, дифференциальные уравнения с дробной производной, теория информации, теория обработки сигналов. Знания в области современной нелинейной динамики State-of-the-art в области численных методов моделирования нелинейных систем Опыт разработки криптографических приложений Знания о перспективных алгоритмах шифрования и скрытной передачи данных Навыки написания и публикации статей в международной научной периодике. ",
    "need_match": true
  },
  {
    "id_rp": "1098",
    "id_proj": "56",
    "name_rp": "Обработка изображений и компьютерное зрение  (OpenCV)",
    "name_proj": "Практика в проектах по автономному транспорту от АО \"НИИАС\" РЖД",
    "text_rp": "Рассматриваются основные задачи, модели, методы и алгоритмы в области цифровой обработки изображений. Показывается процесс формирования изображения в оптической системе, описываются возникающие дефекты. Вводится понятие качества изображения, формулируются основные задачи увеличения качества изображения. Излагаются основные методы цифровой обработки изображений (фильтрация, интерполяция, сегментация, бинаризация и др.), элементы геометрической оптики (перспективные преобразования, эпиполярная геометрия, обобщенные координаты, фундаментальная и существенные матрицы), представление изображений виде графа, связанность, применение теории графов в обработке изображений. Рассматриваются основные методы кодирования изображений и видеоинформации, 3D-изображения.. Изучение основных задач, моделей, методов и алгоритмов в области цифровой обработки изображений. Формирование основных задач увеличения качества изображения. Знание основных задач, моделей, методов и алгоритмов в области цифровой обработки изображений. Умение решать основные задачи увеличения качества изображения. Навыки освоения основных методов цифровой обработки изображений (фильтрация, интерполяция, сегментация, бинаризация и др.), основных методов кодирования изображений и видеоинформации, 3D-изображения.. . Примеры вопросов для формирования билетов: 1.       Получение компилятора и настройка CMake 2.       Изображения с широким динамическим диапазоном. Введение. Место дисциплины в ООП. Виды контроля и аттестации. Тема 1. Работа с файлами изображений и видео. 1. Введение в OpenCV 2. Загрузка и установка OpenCV 3. Получение компилятора и настройка CMake 4. Компиляция и установка библиотеки 5. Структура каталогов OpenCV 6. Создание проекта, включающего OpenCV 7. Чтение и запись файлов изображений 8. Чтение и запись видеофайлов. Тема 2. Инструменты обработки изображений. 1. Основные типы данных 2. Доступ к пикселям 3. Хронометраж 4. Типичные операции над изображениями 5. Арифметические операции 6. Сохранение данных 7. Гистограммы. Тема 3. Коррекция и улучшение изображений. 1. Фильтрация изображений. Сглаживание. Повышение резкости. Работа с пирамидами изображений. Пирамиды Лапласа 2. Морфологические операции 3. LUT-фильтры 4. Геометрические преобразования. Аффинное преобразование 5. Ретуширование 6. Очистка от шумов. Тема 4. Работа с цветом. 1. Цветовые пространства 2. Сегментация на основе цветового пространства. HSV-сегментация. YCrCb-сегментация 3. Цветоперенос. Тема 5. Обработка видео. 1. Стабилизация видео 2. Сверхвысокое разрешение 3. Сшивка изображений. Тема 6. Вычислительная фотография. 1. Изображения с широким динамическим диапазоном 2. Создание HDR-изображений 3. Тональная компрессия 4. Совмещение 5. Экспозиционное объединение 6. Бесшовное клонирование 7. Обесцвечивание 8. Нефотореалистичный рендеринг. Заключение. Основные выводы по курсу.",
    "text_proj": "Практика в проектах по автономному транспорту от АО \"НИИАС\" РЖД. АО “НИИАС” РЖД приглашает студентов на практику в проекты по автономному транспорту: Проекты по автоматизации управления движением беспилотных поездов. Пожелания к кандидатам: уверенное владение Linux и Bash, Qt, Python, SQL базами данных. Проект по высокоточной системе позиционирования (отдел Математического обеспечения систем управления АО “НИИАС” РЖД). Пожелания к кандидатам: знания прикладной математики, алгоритмов, моделирования, Python. Технологии проекта: SLAM, фьюзинг данных от датчиково-навигационного оборудования различного типа. Проект: Автоматизированная калибровка камер. Пожелания: Знания в области Компьютерного зрения, Проективной геометрии. На базе АО «НИИАС» РЖД можно пройти производственную практику, а также написать диплом.   Сроки практики -- 1-3 месяца. Обязательно должен: знать: основны алгоритмов и структур данных уметь: работать с методами прикладной математики, с языком программирования Python владеть: основными технологиями разработки алгоритмов и программного обеспечения. Желательно должен: знать: основы компьютерного зрения, проективной геометрии.  уметь: применять основные методы компьютерного зрения и проективной геометрии.  владеть: Linux и Bash, Qt, Python, SQL базами данных. В результате получит: знания: основ позиционирования, калибровки камер, технологий беспилотного транспорта умения: применять основные методы позиционирования, калибровки камер, беспилотного транспорта опыт: работы в реальном проекте по беспилотному транспорту, разработки систем компьютерного зрения и проективной геометрии для решения реальных задач, опыт применения технологий совместной разработки . ",
    "need_match": true
  },
  {
    "id_rp": "2195",
    "id_proj": "38",
    "name_rp": "Основы гидроакустики",
    "name_proj": "Разработка системы звукоподводной связи на основе теории хаоса",
    "text_rp": "2 АННОТАЦИЯ ДИСЦИПЛИНЫ «ОСНОВЫ ГИДРОАКУСТИКИ» Дисциплина «Основы гидроакустики» предназначена для изучения студентами основных законов распространения звуковых колебаний в морской среде с учетом потерь на распространение и затухание различных волновых структур, условий формирования звуковых каналов в морях и океанах. В дисциплине изучается формирование отраженных гидроакустических (гидролокационных) сигналов от тел простой и сложной геометрической формы с учетом соотношения размеров тел и длин волн облучающих звуковых колебаний, формирование шумовых гидроакустических полей и реверберационных помех, обусловленных рассеянием зондирующих сигналов на поверхностях и неоднородностях морской среды . Получение студентами базовых знаний по гидроакустике с возможным их расширением в процессе работы по этой дисциплине. 1. Изучение условий формирования отраженных и шумовых гидроакустических сигналов и распространение их в материалах тел и морской среде. 2. Формирование у студентов умения и навыков по выполнению расчетов распространения гидроакустических сигналов и дальностей обнаружения шумовых и гидролокационных целей, а также умения пользоваться дополнительными литературными источниками по гидроакустике. Знания основных законов распространения звуковых колебаний в морской среде с учетом потерь на распространение и затухание различных волновых структур, условий формирования звуковых каналов в морях и океанах. Знания условий формирование отраженных гидроакустических (гидролокационных) сигналов от тел простой и сложной геометрической формы с учетом соотношения размеров тел и длин волн облучающих звуковых колебаний, формирование шумовых гидроакустических полей и реверберационных помех, обусловленных рассеянием зондирующих сигналов на поверхностях и неоднородностях морской среды. Умения определять потери при распространении звуковых колебаний в морской среде за счет расширения фронта волны и поглощения звука в морской среде в зависимости от частоты колебаний и глубины моря. Умения рассчитывать скорость звука в море в зависимости от температуры, солености и глубины моря. Умения строить уравнения активной и пассивной гидролокации. Умения выполнять расчеты энергетической дальности обнаружения целей в однородной среде. Иметь навыки по выполнению расчетов потерь распространения гидроакустических сигналов в морской среде и дальностей обнаружения гидроакустических целей, а также умения пользоваться дополнительными литературными источниками по гидроакустике.. . Министерство науки и высшего образования Российской Федерации ФГАОУ ВО «Санкт-Петербургский государственный электротехнический университет «ЛЭТИ» имени В.И. Ульянова (Ленина)» ____________________________________________________________ ЭКЗАМЕНАЦИОННЫЙ БИЛЕТ № 11 Дисциплина: Основы гидроакустики  1. Приповерхностный звуковой канал.  2. Отражение и рассеяние звуковых колебаний от поверхности моря. 3. Морская среда является однородной средой. УТВЕРЖДАЮ Заведующий кафедрой                                                   И.И. Иванов. Введение. История развития гидроакустики. Ученые, которые внесли большой вклад в развитие гидроакустики. Ведущие гидроакустические организации России, разрабатывающие гидроакустические комплексы. Вопросы, изу-чаемые в данной дисциплине. Литературные источники. Физические свойства морской среды. Физические свойства морской среды. Отличие морской среды от твердых тел и газообразной среды. Сжимаемость воды, упругие свойства, соленость, вязкость, теплоемкость морской воды. Электрические характеристики морской воды. Волновые процессы в стратифицированной среде. Волновые процессы в стратифицированной среде. Рассмотрение морей и океанов как стратифицированной среды. Формирование и распространение внутренних волн в морской стратифицированной среде. Модели акустического поля. Модели акустического поля. Описание моделей акустических полей в зависимости от условий их распространения (дальностей, глубины моря, длины волн и др.) с помощью функций Бесселя, Ханкеля. Приближенные методы представления гидроакустических полей. Приближенные методы представления гидроакустических полей. Усло-вия применения лучевой теории. Уравнение эйконала. Профиль скорости звука в глубоком море. Профиль скорости звука в глубоком море. Приповерхностный слой. Сезонный термоклин. Основной термоклин. Глубоководный изотермический слой. Приповерхностный звуковой канал. Приповерхностный звуковой канал. Условия распространения звуковой энергии в приповерхностном канале. Построение лучевой картины. Подводный звуковой канал. Подводный звуковой канал. Открытие подводного звукового канала. Условия распространения звуковой энергии в подводном звуковом канале. Искажение формы импульсных сигналов при дальнем распространении в подводном канале. Каустики и зоны конвергенции. Каустики и зоны конвергенции. Условия их формирования. Концентрация звуковой энергии. Внутренние звуковые каналы. Внутренние звуковые каналы. Условия их формирования. Распространение звуковой энергии по внутренним звуковым каналам. Распространение звука в арктических морях. Распространение звука в арктических морях. Влияние низких температур воды на скорость распространения звука вблизи поверхности моря. Лучевые картины распространения звука в арктических морях. Каналы в мелком море. Каналы в мелком море. Лучевая теория. Теория нормальных мод. Потери при распространении звука в мелком море. Основные свойства реверберационных помех. Основные свойства реверберационных помех. Сила обратного рассеяния. Модель реверберации. Зависимость реверберации от условий излучения и движения носителей антенны. Формирование гидроакустических сигналов, отраженных от тел простой геометрической формы. Формирование гидроакустических сигналов, отраженных от тел простой геометрической формы. Определение тел простой геометрической формы. Сила цели. Зависимость силы цели от соотношения размеров тела к длине волны. Условия распространения дифракционных звуковых волн внутри тел простой формы. Незеркальное отражение. Гидроакустические сигналы, отраженные от тел сложной геометрической формы. Гидроакустические сигналы, отраженные от тел сложной геометрической формы. Определение тел сложной геометрической формы. Зависимость формы отраженного сигнала от условий отражения и рассеяния звука. Расширение спектра эхо-сигнала за счет эффекта Доплера. Условия обработки сложных сигналов. Формирование шумовых гидроакустических полей. Формирование шумовых гидроакустических полей. Источники формирование полей. Гидродинамический шум. Монополи, диполи, квадруполи. Шумы механизмов. Распознаваемые параметры тел в гидроакустике. Распознаваемые параметры тел в гидроакустике. Габариты тел. Формы тел. Толщины оболочек. Материалы тел.",
    "text_proj": "Разработка системы звукоподводной связи на основе теории хаоса. Создание программного и аппаратного обеспечения системы звукоподводной связи для подводных роботов.  Разработка прототипа системы.  Полевые испытания системы на водоеме в различных условиях.  Исследования свойств сигналов различного типа при прохождении водной среды. . Навыки работы в команде, базовые навыки программирования, мотивация к труду. Инструмент выдадим, работать научим. Знания о системах передачи данных в водной среде. Базовые знания в области гидроакустики. Знания о способах модуляции и демодуляции акустических сигналов, включая широкополосные и биологически инспирированные сигналы. Навыки в области проектирования электронных систем. Опыт водной экспедиции для полевых испытаний прибора. Опыт постановки и обработки результатов эксперимента. ",
    "need_match": true
  },
  {
    "id_rp":  "5089", 
    "id_proj":  "31",
    "name_rp": "Глубокое обучение",
    "name_proj": "Определение состояния автомобиля используя видео",
    "text_rp": "Глубокое обучение является передовой областью современного машинного обучения и входит в общую проблематику искусственного интеллекта. В данном курсе основным инструментом для решения прикладных задач являются многослойные искусственные нейронные сети. Рассматриваются основные базовые архитектуры сетей глубокого обучения: многослойные полносвязные сети прямого распространения, сверточные сети, рекуррентные сети. Обсуждаются теоретические и практические аспекты их обучения, оптимизации модели, интерпретации и анализа результатов и процесса их обучения. Особое внимание уделяется практической имплементации глубоких архитектур, с использованием платформ Keras, TensorFlow. Рассматривается ряд современных задач и алгоритмов глубокого обучения: автокодировщики, генеративно-состязательные сети, сети для решения задач машинного перевода, генерации текстов, современные сверточные архитектуры для задач компьютерного зрения. Цель дисциплины: изучение основных методов глубокого обучения и их прикладных аспектов в современных задачах математического моделирования и обработки данных. Задачи дисциплины: формирование практических навыков разработки архитектуры нейронных сетей, их применения к практическим задачам, и программной имплементации. Приобретение знаний основных архитектур искусственных нейронных сетей, теоретических и практических аспектов их обучения. Формирование умений компетентного анализа результатов обучения глубокой архитектуры, навыков анализа и устранения основных проблем, мешающих их правильной работе и обучению. Освоение навыков работы с платформами TensorFlow, Keras, PyTorch для реализации и обучения искусственных нейронных сетей. Формирование навыков работы с академической и справочной литературой по тематике, культуры правильной постановки исследовательской задачи и работы с экспериментом.. В течение семестра выдаются индивидуальные домашние задания по следующим темам: Построение и обучение нейронной сети прямого распространения для решения задачи простой регрессии. Построение и обучение нейронной сети прямого распространения для решения задачи классификации. Построение и обучение сверточной нейронной сети для решения задачи классификации изображений. Построение и обучение рекуррентной нейронной сети для работы с последовательностью. Простые автокодировщики и генеративные задачи. Образец индивидуального домашнего задания: Индивидуальное домашнее задание: Построение и обучение сверточной нейронной сети для решения задачи классификации изображений. Дисциплина Глубокое обучение  ФКТИ Требования к выполнению ИДЗ: 1. Постройте и обучите простую CNN, решающую задачу классификации изображений датасета  \"Fashion MNIST\". 2. Добейтесь 95% точности. Проанализуруйте влияниение стандартных методов регуляризации( dropout, l2-регуляризация, инициализация по Хавье, зашумление выборки) на качество обучения сети. 3. Постройте матрицу ошибок и графики основных метрик. 4. Используя дополнительные библиотеки, проведите визуализацию активаций на нескольких сверточных слоях. 5. Дополнительно: проведите adversarial-атаку на построенную сеть и предъявите пример изображения, визуально неотличимого от правильно классифицируемого, но на котором сеть выдает ошибку классификации.. Пример контрольной (проверочной), выполняемой в виде индивидуального проекта: Индивидуальный проект Семантическая разметка изображения на базе предобученной сети VGG19 Дисциплина Глубокое обучение  ФКТИ Требуется построить и обучить архитектуру полносверточной сети, для решения задачи семантической сегментации изображений. В качестве базовой сверточной сети, выделяющей признаки, предлагается взять сеть VGG19. Необходимо на ее основании построить и обучить архитектуру полносверточной сети, для решения задачи семантической сегментации изображений. Министерство науки и высшего образования Российской Федерации ФГАОУ ВО «Санкт-Петербургский государственный электротехнический университет «ЛЭТИ» имени В.И. Ульянова (Ленина)» ____________________________________________________________ ЭКЗАМЕНАЦИОННЫЙ БИЛЕТ № 1 Дисциплина Глубокое обучение  ФКТИ 1. Параметры и гиперпараметры. Обучающая, тестовая и валидационная выборка. Недообучение и переобучение.   2. Слои с памятью. Сети долгой кратковременной памяти (LSTM). Архетиктура Gated Recurrent Unit (GRU). 3. Показ и защита индивидуального проекта: \"Семантическая разметка изображения на основании предобученной сети VGG19\". УТВЕРЖДАЮ Заведующий кафедрой                                                   С.Н. Поздняков. Введение. История возникновения и основные этапы развития искусственных нейронных сетей. Обзор прикладных задач, решаемых глубоким обучением. Напоминание основных элементов модели перцептрона и искусственных нейронных сетей прямого распространения. Вероятностный подход к машинному обучению. Обучение искусственных нейронных сетей. Проблема XOR. Граф вычислений и дифференцирование на графе вычислений. Полносвязные нейронные сети. Функции активации и их варианты. Метод обратного распространения ошибки. Стохастический градиентный спуск. Слои и векторизация. Регуляризация в глубоком обучении. Регуляризация в глубоком обучении. L1 и L2- регуляризация весов. Аугментация выборки. Ансамбли моделей. Dropout. Численная оптимизация в глубоком обучении. Численная оптимизация в глубоком обучении. Метод моментов, метод Нестерова. Адаптивные модификации стохастического градиентного спуска. Нормализация по мини-батчам. Инициализация весов. Сверточные нейронные сети. Биологическая модель зрения. Операция свертки и взятия максимума. Сверточный нейрон. Сверточные нейронные сети. Современные сверточные архитектуры. Автокодировщики. Примеры приложений в задачах компьютерного зрения. Рекуррентные нейронные сети. Задачи обработки последовательностей. Рекуррентные нейронные сети (RNN). Обучение рекуррентных сетей и обратное распространение ошибки сквозь время (BPTT). Слои с памятью. Сети долгой кратковременной памяти (LSTM). Архетиктура Gated Recurrent Unit (GRU). Генеративные сети. Вероятностная постановка генеративной задачи. Генеративные сети. Генеративно-состязательные искусственные нейронные сети (GAN). Автокодировщики. Вариационные автокодировщики (VAE). Машинный перевод и генерация текстов. Задачи автоматической обработки текстов. Векторные представления слов (Word Embeddings). Сверточные сети для текстов. Модели seq2seq. Рекуррентные сети с механизмом внимания (Attention). Заключение. Общие выводы по курсу. Рекомендации для подготовки к экзамену.",
    "text_proj": "Определение состояния автомобиля используя видео. Цель работы: определять направление движения автомобиля, его остановки и старты по видеозаписи с видеорегистратора. Приложение, используя машинное обучение (или другие алгоритмы и технологии), определяет и классифицирует состояние автомобиля по видеозаписи с видеорегистратора: стоит автомобиль или движется, направление движения автомобиля (движется по прямой, вперед или назад, повернул направо/налево). Сначала сеть обучают (на имеющихся размеченных данных) и тестируют на десктопе. На телефон устанавливается пред-обученная версия (например, \"легкая\" версия tensorflow) с готовой моделью, которая производит обработку видеосигнала. Что требуется: Провести анализ имеющихся решений (state of the art); Установить выбранный фреймворк; Изучить архитектуру и возможности выбранного фреймворка, библиотек; Реализовать алгоритм классификации (предобработка данных, модель нейронной сети); Разделить имеющийся датасет (видеозаписи с размеченными состояниями автомобиля, в котором установлен видеорегистратор) на два набора: для обучения модели и для тестирования модели; Выполнить эксперименты на размеченных данных для получения метрик и на неразмеченных данных для исследования генерализации модели; Написать отчет об исследовании, подготовить презентацию. Обязательно должен: знать: Python уметь: работать с Git, использовать Open Source фреймворки и библиотеки, искать необходимые наборы данных в открытом доступе владеть: навыками изучения программного кода, документаций. Желательно должен: знать: принципы работы машинного обучения, предобработки данных уметь: реализовывать модели нейронных сетей, собирать метрики, визуализировать данные владеть: фреймворками TensorFlow или PyTorch, библиотекой OpenCV. В результате получит: знания: технологии машинного обучения, нейронные сети умения: работать с фреймворками машинного обучения опыт: работа с нейронными сетями, проведение экспериментов, подготовка отчетов и презентаций. ",
    "need_match": true
  },
  {
    "id_rp":  "3524",
    "id_proj":  "57",
    "name_rp": "Разработка защищенных программных систем",
    "name_proj": "Стажировка в Digital Security по аудиту защищённости ПО  ",
    "text_rp": "Дисциплина посвящена изучению современных подходов к разработке программных систем, устойчивых к вредоносным воздействиям. Рассматриваются методы атак на программные системы, такие как повреждения программной памяти, внедрение кода на стороне клиента или сервера и др., а также методики и свойства современных языков программирования для предотвращения появления уязвимостей подобного рода.. Дисциплина нацелена на получение теоретических знаний о классификации основных уязвимостей в программном обеспечении, подходах к разработке защищенного программного обеспечения, и приобретение практических навыков применения полученных теоретических знаний для решения задач профессиональной деятельности. Задачами дисциплины является приобретение знаний, умений и навыков для написания безопасного кода с использованием специальных конструкций, методов и библиотек различных языков программирования. Получение знаний о методах поиска и эксплуатации основных уязвимостей в программном обеспечении. Формирование умения использовать типовые программные решения, ориентированные на выполнение научных, проектных и технологических задач, анализировать программный код и находить в нем уязвимости. Освоение навыков поиска уязвимостей в программном обеспечении методами «белого» и «черного» ящиков, владением инструментарием для поиска уязвимостей в программном обеспечении (отладчики, фреймворки для эксплуатации ошибок, другие утилиты).. Примеры вопросов к контрольному тесту  Вопрос 3 Чем опасна XSS? 1. Возможно украсть данные пользователя, введенные им при авторизации. 2. Может быть использована для «фишинга» пользователей. 3. Выполняет произвольный код в браузере пользователя. 4. Выполняет произвольный код на сервере. Вопрос 5 Что такое CSRF? 1. Тип атаки на посетителей веб-сайтов, которая заключается в том, что если жертва заходит на сайт, созданный злоумышленником, от её лица тайно отправляется запрос на другой сервер, осуществляющий некую вредоносную операцию. 2. Тип атаки на веб-системы, заключающийся во внедрении в выдаваемую веб-системой страницу вредоносного кода и взаимодействии этого кода с веб-сервером злоумышленника. 3. Уязвимость основанный на внедрении в запрос произвольного SQL-кода. 4. Уязвимость на стороне сервера, который позволяет перенаправлять запросы от одного сервера к другому. Вопрос 7 Есть следующая программа, которая выполняет поиск файла по его имени в текущей директории. Для этого пользователю необходимо передать имя файла в качестве аргумента к программе. Присутствует ли уязвимость в данном участке кода? import java.io.*; public class Example1 { public static void main(String[] args) throws IOException { if(args.length != 1) { System.out.println(\"No arguments\"); System.exit(1); } Runtime runtime = Runtime.getRuntime(); Process proc = runtime.exec(\"find. --name \\”\" + args[0]+”\\””); InputStream is = proc.getInputStream(); InputStreamReader isr = new InputStreamReader(is); BufferedReader br = new BufferedReader(isr); String line; while ((line = br.readLine()) != null) { System.out.println(line); } } } 1. Уязвимости нет 2. SQL инъекция 3. Инъекция команд 4. Инъекция команд и SQL инъекция. Министерство науки и высшего образования Российской Федерации ФГАОУ ВО «Санкт-Петербургский государственный электротехнический университет «ЛЭТИ» имени В.И. Ульянова (Ленина)» ____________________________________________________________ ЭКЗАМЕНАЦИОННЫЙ БИЛЕТ № 1 Дисциплина Разработка защищенных программных систем ФКТИ 1. Понятие об информационной безопасности и защищенных системах.  2. Организация памяти в современном программном обеспечении. Переполнение буфера на стеке.  УТВЕРЖДАЮ Заведующий кафедрой                                                   К. В. Кринкин. Введение. Информационная безопасность и защищенная система: основные понятия. Законы информационной безопасности в современном мире. Понятие уязвимости в информационной системе. Уязвимости в программных средствах, конфигурационные уязвимости, уязвимости в бизнес-процессах. Классификация уязвимостей в ПО. Тема 1. Аудит информационной безопасности и понятие тестирования на проникновение. Основные методы и подходы при проведении аудита информационной системы и приложений. Типовые примеры эксплуатации уязвимостей и слабостей системы. Подходы к поиску уязвимостей в ПО. Тема 2. Введение в безопасность Web-приложений. Основные уязвимости и понятия, которые встречаются при реализации web-приложений. Тема 3. Уязвимости в Web-приложениях. Внедрение кода на клиенте. Обход аутентификации и CSRF-атаки. Инструментарий для анализа Web-приложений. OWASP-Top 10. Тема 4. Внедрение кода на сервере. Инъекции команд. SQL-инъекции. XML-инъекции и другие типы инъекций. Тема 5. Уязвимости, связанные с манипуляциями программной памяти. Организация памяти в современном программном обеспечении. Переполнение буфера на стеке. Уязвимости в динамической памяти. Уязвимости форматной строки. Инструментарий для поиска уязвимостей. Тема 6. Ошибки, связанные с целочисленным переполнением. Арифметические операции в современных языках программирования. Ошибки и уязвимости, возникающие из-за целочисленного переполнения. Тема 7. Другие классы уязвимостей. Раскрытие информации. «Состояние гонки». Некорректная обработка исключений. Слабости в реализации криптографических модулей приложения. Тема 8. Уязвимости вне программных средств. Некорректная конфигурация. Уязвимости, связанные с политикой безопасности и бизнес-процессами в организации. Социальная инженерия. Тема 9. Изучение программных средств для анализа кода. Средства для статического и динамического анализа исходного кода приложений. Декомпиляция приложений. Заключение. Общие выводы по курсу. Информационная безопасность и современные угрозы. Рекомендации для подготовки к экзамену.",
    "text_proj": "Стажировка в Digital Security по аудиту защищённости ПО. Summ3r 0f h4ck 2022. Обучающая программа в Digital Security Digital Security приглашает на традиционную летнюю обучающую программу «Summ3r 0f h4ck». Она пройдет c 4 по 29 июля 2022 года в нашем офисе в Санкт-Петербурге. Прием заявок продлится до 1 мая (включительно) Подробности.   https://dsec.ru/about/summerofhack/                 . Обязательно должен: знать: основы информационной безопасности уметь:  программировать на C/C++ владеть: . Желательно должен: знать:  уязвимости ПО уметь:  программировать на JS, PHP, Python владеть: . В результате получит: знания:  способы поиска уязвимостей в приложениях на С\\С++  и в веб-приложениях  ( умения:  применение методов white-box и black-box, полезные трюках при reverse engineering (IDAPython, Ghidra, DBI), премудростях фаззинга приложений (KLEE, libfuzz, AFL), пентестинг веб-приложений опыт: аудита программного обеспечения. Начало стажировки. Сбор заявок на стажировку . Завершение стажировки. Защита отчетов по выполненным работам. ",
    "need_match": true
  },
  {
    "id_rp":  "3514",
    "id_proj":  "26",
    "name_rp": "Технологии автоматизации процесса разработки программного обеспечения",
    "name_proj": "Программно-аппаратное конфигурирование сети лаборатории",
    "text_rp": "В курсе рассматриваются вопросы организации процессов непрерывной интеграции, непрерывного развертывания и непрерывной поставки ПО в рамках парадигмы DevOps. Изучаются современные технологии автоматизации процесса разработки - Docker, Docker-Compose, Jenkins. Рассматриваются примеры использования технологий для проектов различной специфики. . Целью дисциплины является изучение фундаментальных концепций методологии DevOps в области задач непрерывной интеграции, непрерывного развертывания и непрерывной поставки и приобретение навыков использования полученных знаний в профессиональной деятельности. Задачами является приобретение знаний, умений и навыков применения фундаментальных концепций методологии DevOps в области задач непрерывной интеграции, непрерывного развертывания и непрерывной поставки. Получение знаний основных принципов автоматизации настройки среды, автоматизации тестирования и развертывания ПО. Формирование умения использовать современные технологии и инструменты автоматизации процесса разработки ПО. Приобретение навыков работы с современными программными средствами автоматизации тестирования, настройки среды и развертывания.. В ходе практических занятий и самостоятельной работы студенты должны выполнить проектную работу по разработке программного обеспечения (ПО) с использованием технологий автоматизации процесса разработки программного обеспечения.  Целью работы является разработка программного продукта по заданной теме. Разработка проводится итеративно в 3 этапа. Для контроля и оценивания  предусмотрены 3 контрольные точки в виде доклада с презентацией по этапам разработки.  Презентация должна быть представлена на 8 - 10 минут с демонстрацией min - 10, max - 15 слайдов, и содержать в себе:  1. Постановку задачи. 2. Методы решения, технологии. 3. Полученные результаты. В качестве результатов в презентации должны быть представлены артефакты методологии разработки, программный код и материалы, демонстрирующие работу ПО.  4. Примеры использования. 5. Список использованных источников (min - 3, max - не ограничено). Доклад по результатам работы с использованием презентации должен быть выполнен в устной форме.  Примерные сквозные темы разработок и докладов: Генератор условий задач по курсу \"Базы данных\". Генерация сессий прокторинга с использованием облачных хранилищ. Применение среды разработки WEB IDE в Duckietown Dashboard. Разработка Autolab Remote Control Service. OpenSource Веб-сервис для 3d-реконструкции.. . Министерство науки и высшего образования Российской Федерации ФГАОУ ВО «Санкт-Петербургский государственный электротехнический университет «ЛЭТИ» имени В.И. Ульянова (Ленина)» ____________________________________________________________ ЭКЗАМЕНАЦИОННЫЙ БИЛЕТ № 1 Дисциплина Технологии автоматизации процессов разработки программного обеспечения   ФКТИ 1. Проверки на этапе компиляции ПО. Интеграционное тестирование.  2. Модели жизненного цикла. УТВЕРЖДАЮ Заведующий кафедрой                                                   К.В. Кринкин. Введение. Идеология DevOps. Постановка задач непрерывной интеграции, непрерывного развертывания и непрерывной поставки. Тема 1. Организация автоматического тестирования ПО. Этапы и способы проверки исходного кода и ПО в целом. Статический анализ исходного кода. Юнит-тестирование. Проверки на этапе компиляции ПО. Интеграционное тестирование. Дополнительные проверки в процессе тестирования (время выполнения, косвенные метрики оценки работы ПО в тестах). Требования к организации отчетов о запуске автоматических тестов. Техническая реализация автоматизации тестирования (precommit hooks, периодическое тестирование и тестирование по мере поступления изменений). Тема 2. Инструменты автоматизации настройки среды. Задача автоматизации настройки среды. Технология Docker - контейнеры, образы, репозитории. Синтаксис Dockerfile. Флаги запуска контейнеров. Ограничение ресурсов контейнера. Отладка контейнеров и контроль работы. Механизм Healthcheck. Тема 3. Инструменты автоматизации развертывания и поставки ПО. Задача автоматизации развертывания и поставки ПО. Технология Docker Compose - конфигурации и сервисы. Синтаксис конфигурационных файлов. Адресация и взаимное обнаружение узлов. Передача внешних параметров в конфигурацию. Команды управления конфигурацией. Отладка работы конфигураций. Тема 4. Серверы непрерывной интеграции. Понятие и назначение сервера непрерывной интеграции. Последовательности шагов для автоматизации интеграции, развертывания и поставки ПО. Jenkins - основные сущности (job, build, view, user, repo, node). Основные элементы настройки Job: периодичность и параметры запуска, репозиторий и настройки клонирования, шаги сборки, послесборочные операции (рассылка писем, запуск других Job). Пример настройки Job. Анализ запусков Job (логи и их интерпретация, артефакты сборки). Особенности эксплуатации сервера непрерывной интеграции на примере Jenkins (хранение конфигураций, разделение доступа к серверу, объем почтовых уведомлений, требуемое дисковое пространство). Заключение. Общие выводы по курсу. Рекомендации для подготовки к экзамену.",
    "text_proj": "Программно-аппаратное конфигурирование сети лаборатории. Видео-презентация проекта https://youtu.be/uLePbMkxzZE Цель данного проекта состоит в построении и отладке программно-аппаратной системы наблюдения и отладки решений на полигоне автономного транспорта лаборатории мобильных интеллектуальных систем.  Задачи: Настройка системы управления конфигурациями Ansible на парке машин лаборатории интеллектуальных мобильных систем Разработка решения захвата видео камеры наблюдения полигона в трансляцию конференций Zoom Тестирование онлайн-курса по GDB и Valgrind Формат работы: смешанный: заочный + очный Очно в аудитории 3501 Прототипирование при отсутствии необходимости работы с оборудованием возможно выполнять дистанционно. Ориентировочно 2-3 курс Навык работы с ОС Linux (Ubuntu) Знание языка Си, основ отладки программ Умение самостоятельно находить информацию, учиться новому Умение следовать инструкции Аккуратность  Умение пользоваться отверткой Знание английского языка на уровне чтения технической документации Понимание базовых принципов организации ЛВС. Плюсом будет любой опыт работы с библиотеками автоматизации настройки и любой опыт наладки систем видеофиксации. . В результате получит: знания о устройстве систем машинного зрения и систем автоматизированной постановки эксперимента для задач автономного транспорта, умения настройки и отладки реальных роботехнических систем, опыт участия в передовом исследовательском проекте. . Тестовое задание проекта. Составить docker-compose файл, позволяющий запустить 2 докер-контейнера, объединенные в одну локальную сеть (изолированную от сети хост-машины)   Программа-клиент, запущенная в одном контейнере должна передавать строку “docker test #K” по TCP программе-серверу, запущенной во втором контейнере. Программа-сервер должна печатать полученные данные в лог, доступный командой docker log.   #K - порядковый номер сообщения (0, 1, 2, …) Строку передавать раз в секунду   Способ реализации программ клиента и сервера может быть любым (стандартные утилиты / самостоятельно написанные программы / …)   В качестве решения прислать ссылку на репозиторий с docker-compose файлом и инструкцией по запуску. ",
    "need_match": true
  },
  {
    "id_rp":  "1447",
    "id_proj":  "42",
    "name_rp": "Моделирование нелинейных динамических систем",
    "name_proj": "Перспективные сенсоры на основе теории динамического хаоса",
    "text_rp": "Дисциплина направлена на ознакомление студентов с особенностями нелинейного поведения динамических систем, раскрытие закономерностей нелинейных процессов, возникающих в процессе проектирования и эксплуатации комплексных технических систем. Предусматривает овладение методами научных исследований в области теоретической и экспериментальной нелинейной динамики, современным инструментарием анализа поведения динамических систем и его имплементацией в средах графического программирования. Знакомит с математическим аппаратом описания нелинейных систем и процессов, а также с приемами и подходами для их моделирования на современных цифровых вычислителях.. Формирование у студентов устойчивых представлений о фундаментальном характере нелинейных процессов в природных и технических системах, положительных и отрицательных эффектах нелинейного поведения, областях практического применения детерминированного хаоса. Изучение научных и технических проблем, связанных с теорией и практикой нелинейной динамики, причин и механизмов возникновения хаотических режимов в динамических системах. Приобретение знаний в области математического аппарата нелинейных дифференциальных уравнений, умений идентификации динамических систем, дискретных интегрирующих операторов. Приобретение умений в области анализа и обработки результатов вычислительного и полунатурного эксперимента с использованием современной вычислительной техники и сред графического программирования. Освоение навыков анализа и обобщения бифуркационного поведения систем, способствующее пониманию природы детерминированного хаоса и феномена катастроф.. . Министерство науки и высшего образования Российской Федерации ФГАОУ ВО «Санкт-Петербургский государственный электротехнический университет «ЛЭТИ» имени В.И. Ульянова (Ленина)» ____________________________________________________________ ЭКЗАМЕНАЦИОННЫЙ БИЛЕТ № 1 Дисциплина Моделирование нелинейных динамических систем ФКТИ 1. Что такое аттрактор? Какие аттракторы называются странными? 2. Практическая задача. Постройте график поведения решения хаотической системы, описывающей аттрактор Рёсслера, во временной области. В качестве численного метода решения ОДУ используйте неявный метод Трапеций.   УТВЕРЖДАЮ Заведующий кафедрой                                                   Н.Г. Рыжов. Введение. Предпосылки возникновения и история нелинейной динамики. Работы Э. Лоренца, А. Пуанкаре, Д. Спротта. Хаотические процессы в природе на примере Солнечной системы, турбулентности, погодных явлений. Важность учета нелинейностей при проектировании технических объектов. Тема 1. Общие сведения о динамических системах. Способы описания динамических систем. Дифференциальное исчисление. Уравнения в частных производных, обыкновенные уравнения, дифференциально-алгебраические уравнения. Форма пространства состояний. Передаточные функции и типовые звенья. Операторный метод. Тема 2. Нелинейные системы и процессы. Виды и причины возникновения нелинейностей в природе и технике. Основные типы нелинейностей, встречающиеся в математических моделях динамических систем. Нелинейности, связанные с переходом от дифференциальных уравнений к конечно-разностным схемам. Шаг дискретизации как параметр нелинейности. Тема 3. Моделирование динамических систем в средах графического программирования. Среда LabVIEW как инструмент моделирования динамических систем. Понятие виртуального прибора. Лицевая панель и блок-диаграмма. Модуль Simulation Module. Переход от графической модели к исполняемому коду. Оптимизация производительности. Виртуальный прибор построения бифуркационных диаграмм. Тема 4. Дискретные нелинейные отображения. Логистическое отображение. Отображение Богданова. Отображение Хенона. Экспоненциальное отображение. Отображение Фейгенбаума. Тема 5. Численные методы интегрирования при моделировании нелинейных динамических систем. Численный метод интегрирования как способ перехода от непрерывных моделей динамических систем к конечно-разностным схемам. Явные методы численного интегрирования. Экстраполяционные методы. Полуявные методы интегрирования. Реверсивность и симметричность методов. Оценка производительности численных методов с помощью графика эффективности. Тема 6. Детерминированный хаос. Хаотические процессы и явления. Явление детерминированного хаоса. Плотность фазовых орбит. Топологическое смешивание. Чувствительность к начальным условиям. Фрактальность решений хаотических систем. Типы бифуркаций. Фазовое пространство. Тема 7. Алгоритмы и инструменты анализа хаотических систем. Одномерные бифуркационные диаграммы. Двумерные бифуркационные диаграммы. Каскады Фейгенбаума. H-диаграммы хаотических систем. Отображение фазовых портретов системы и ошибки моделирования. Вычисление ляпуновских экспонент. Обнаружение хаотического поведения в произвольных сигналах. Тема 8. Синхронизация хаотических систем. Общие принципы хаотической синхронизации. Унимодальная и бимодальная синхронизация. Поиск оптимального значения коэффициента синхронизации. Синхронизация дискретных моделей хаотических систем, полученных различными численными методами. Различные топологические схемы при синхронизации хаотических систем. Синхронизация аналоговых и дискретных моделей хаотических систем. Тема 9. Практические приложения детерминированного хаоса. Сенсорные элементы на основе хаотических систем. Осциллятор Дуффинга как высокочувствительный детектор гармонических сигналов. Металлодетекторы на основе принципа синхронизации. Хаос в шифровании и защищенных системах связи. Заключение. Подведение итогов курса. Перспективы развития и внедрения нелинейных решений в теорию и практику автоматического управления, цифровой обработки сигналов и систем связи.",
    "text_proj": "Перспективные сенсоры на основе теории динамического хаоса. Разработка новых типов датчиков (магнетометров, салинометров, индуктивных датчиков и др.) на основе устройств с хаотическим поведением. Исследование свойств хаотических сигналов при прохождении различных сред Разработка стендов для испытания датчиков различных типов, включая создание электронных схем, корпусирование с применением аддитивных технологий Проведение сравнительных испытаний датчиков традиционной конструкции и предлагаемых решений на основе теории хаоса. Базовые навыки программирования Базовые математические знания - теория дифференциального и интегрального исчисления, алгебра. Знания в области аналоговой и цифровой схемотехники, электрофизики. Новые знания о перспективных конструкциях датчиков на новых физических принципах Практические навыки проектирования электронных устройств Опыт разработки экспериментальных стендов, снятия и обработки результатов полунатурного эксперимента. ",
    "need_match": true
  },
  {
    "id_rp":  "1916",
    "id_proj":  "41",
    "name_rp": "Разработка программного обеспечения для  робототехнических систем",
    "name_proj": "Разработка подводного телеуправляемого робота на гусеничном шасси",
    "text_rp": " Цели изучения курса состоят в формировании знаний, умений и навыков применения программных средств, необходимых разработчикам для реализации робототехнический комплексов, формировании у студентов представлений о работе и принципах разработки распределенных систем и их организации; освоении современных инструментов организации вычислений и коммуникации между вычислительными единицами с целью полноценной работы робототехнического комплекса и овладении студентами практических навыков применения программных средств для разработки комплексных робототехнических систем.. Целью дисциплины является получение теоретических знаний в области специального программного обеспечения для робототехнических систем и формирование умений разрабатывать комплексные программные системы на основе фреймворка Robot Operating System и навыков их применения. Задачами дисциплины является: изучение теории разработки программного обеспечения для робототехнических систем; получение навыков разработки программного обеспечения для робототехнических систем; формирование умений организации межпрограммного взаимодействия с применение инструментов фреймворка Robot Operating System. Знания принципов разработки прикладного ПО на базе Robot Operating System в ОС Linux. Умение структурировать собственные разработки по общепринятым концепциям организации кода с размещением в системе контроля версии Git. Владение навыками ознакомления, изучения и применения с возможность доработки и настройки существующих разработок для получения желаемого функционала и результатов выполнения.. Примеры вопросов для коллоквиума 1 Какие базовые типы поддерживаются в сообщениях? Каким образом можно это узнать? Какие базовые этапы необходимо выполнить для создания собственного пакета? Какие шаги необходимы для создания узла на языке Python? Какие шаги необходимы для создания узла на языке С++? Опишите базовые принципы размещения кода в репозитории? В случае одного пакета, стека пакетов? Какие типы связей узлов можно организовать с помощью топиков? Какая CLI утилита позволяет работать с топиками? Какие она имеет команды и для чего они нужны? Какая CLI утилита позволяет работать с сервисами? Какие она имеет команды и для чего они нужны? Опишите основные различия между типоками и сервисами и приведите примеры, когда нужно применять одни, а когда другие? Как создать свое сообщение для топика? Примеры вопросов для коллоквиума 2 Какие типы параметров бывают? В чем их отличие? Возможно ли устанавливать параметры из файла? Если да, какой командой это выполняется? Для чего используется тэг arg в launch-файлах? Напишите пример применения. В чем отличия разработки на основе языка С++ и языка Python для ROS? Нарисуйте и опишите схему, как происходит настройка соединения и коммуникация между узлами по системе топиков? Какова цель мастер-узла в этой схеме? Для чего используется мастер-узел? Возможна ли работа системы без него? Какое назначение имеет система TF? Приведите примеры использования. Какой структурой предоставляются системы координат в TF? Может ли эта структура иметь свойство цикличности? Почему? На каких основных компонентах строится описание части робота в Gazebo? Какие бывают типы соединений частей роботов? Опишите их с иллюстрацией работы. Какая команда выводит полный путь к текущей директории? а) mv б) cd в) rm г) pwd д) ls Какой символ используется для чтения значения переменной? а) $ б) % в) : г) \\textbraceleft\\textbraceright д) ^ Как называется утилита сборки ROS пакетов? а) rosbuild б) catkin make в) catkin build г) ros build Какой утилитой можно перейти в папку пакета? а) rosls б) roscd в) roscat г) rosed д) roslist На основе какого формата создаются launchфайлы? а) JSON б) XML в) HTML г) Launch Какой из параметров тэга <node> launchфайла является обязательным? а) output б) log в) pkg г) ns. Какая команда выводит полный путь к текущей директории? а) mv б) cd в) rm г) pwd д) ls Какой символ используется для чтения значения переменной? а) $ б) % в) : г) {} д) ^ Как называется утилита сборки ROS пакетов? а) rosbuild б) catkin_make в) catkin_build г) ros_build Какой утилитой можно перейти в папку пакета? а) rosls б) roscd в) roscat г) rosed д) roslist На основе какого формата создаются launch-файлы? а) JSON б) XML в) HTML г) Launch Какой из параметров тэга <node> launch-файла является обязательным? а) output б) log в) pkg г) ns. Министерство науки и высшего образования Российской Федерации ФГАОУ ВО «Санкт-Петербургский государственный электротехнический университет «ЛЭТИ» имени В.И. Ульянова (Ленина)» ____________________________________________________________ ЭКЗАМЕНАЦИОННЫЙ БИЛЕТ № 1 Дисциплина Физические основы электронагрева   ФЭА 1. Закон Ома в дифференциальной форме. Закон Джоуля – Ленца в локальной форме.  2. Снижения уровня термических деформаций и напряжений. 3. Задача. УТВЕРЖДАЮ Заведующий кафедрой                                                   И.И. Иванов. . Основы работы с ОС Linux. Основные команды и принципы работы в командной строке, настройка среды разработки. Основы Robot Operating System. Понятие и назначение ROS. Примеры проектов с применением ROS. Поддержка языков. Базовые понятия в ROS - пакеты, рабочее пространство, сборка. Работа с репозиторием. Организация связи в децентрализованной системе. Знакомство с рабочей экосистемой ROS на момент запуска. Подключение узлов в экосистему. Основные утилиты для получения информации о рабочей экосистеме. Разница узла и процесса. Коммуникации в ROS. Организация асинхронного взаимодействия между узлами. Освоение формата описания запуска множества узлов.launch. Примеры использования и полезные практики применения. Создание типов сообщений для собственных разработок и со специализированным описанием.Освоение навыков с поддержкой функционала сервисов - синхронного метода взаимодействия между узлами. Рассмотрение положительных и отрицательных сторон подхода. Сравнение с топиками. Обсуждение применимости каждого из типов. Организация пространства параметров в ROS. Изучение подходов работы с параметрами в рабочей экосистеме ROS. Изучение утилит для работы с сервером параметров. Обсуждение ситуаций применимости различных видов параметров. Освоение методов работы с параметрами. Рассмотрение примеров применения параметров. Система TF (Transforms) в ROS. Системы координат и их трансформации. Освоение методов работы с TF в ROS. Практика применения утилит для получения информации о TF. Обсуждение ситуаций для применения на практике. Ограничения системы TF. Заключение. Назначение ROS2, отличия от ROS. Другие аппаратные комплексы.",
    "text_proj": "Разработка подводного телеуправляемого робота на гусеничном шасси. Разработка программного и аппаратного обеспечения подводной роботизированной системы на основе гусеничной платформы с манипулятором. Создание телеуправляемого водонепроницаемого шасси. Разработка сенсорной системы робота. Разработка подсистемы управления шасси и манипулятором. Полевые испытания робота на водоеме. Основы Arduino IDE, коммуникабельность, владение английским языком на уровне Basic, общая техническая грамотность. Знание цифровой и аналоговой схемотехники, выносливость, целеустремленность. Знания в области дизайна подводных роботизированных систем. Практические навыки проектирования комплексных объектов робототехники. Опыт разработки программно-аппаратных комплексов общего назначения Незабываемый опыт полевой экспедиции на водоемы нашей необъятной Родины с погружениями за застрявшим роботом. ",
    "need_match": true
  },
  {
	  "id_rp": "1557",
	  "id_proj": "513",
	  "name_rp": "Технологии бережливого производства",
	  "name_proj": "Главный специалист Проектного офиса по обучению бережливому производству",
	  "text_rp":  "Целью освоения дисциплины «Бережливые технологии в менеджменте качества» является формирование у студентов знаний об инструментах бережливого производства, навыков их применения и оценки их эффективности. Полученные знания и навыки позволят им применять бережливые технологии при управлении процессами, что позволит повысить их эффективность и снизить риски возникновения ошибок.. Целью изучения дисциплины является приобретение знаний об инструментах бережливого производства и формирование умений и навыков их применения, оценки их эффективности в соответствии со спецификой процессов организации. Задачами изучения дисциплины является: - изучение основных особенностей, понятий и принципов бережливого производства; - изучение современных технологий бережливого производства и методов их внедрения; - изучение взаимосвязей бережливого производства и управления качеством; - применение эффективных технологий бережливого производства в управлении процессами; - освоение методов оценки эффективности проектов по бережливому производству. Знания: основных особенностей, понятий и принципов бережливого производства; современных технологий бережливого производства и методов их внедрения; взаимосвязей бережливого производства и управления качеством. Умение: планировать и реализовывать мероприятия по улучшению в соответствии с методами бережливого производства; встраивать бережливые технологии в процессы управления качеством. Навыки применения технологии бережливого производства в управлении процессами организации в контексте ее внутренней среды и гармонизация требований СМК и бережливых технологий в процессах организации.. Индивидуальное домашнее задание (ИДЗ) выполняется студентом в форме письменной работы по указанной ниже теме и предполагает проверку знания обучающимися пройденного материала.  ИДЗ формируется по данным организации, в которой студент проходит практику.  Структура письменной работы должна включать в себя следующие смысловые элементы:  1) введение, в котором студент характеризует деятельность компании;  2) основная часть, посвящённая раскрытию сути вопроса; 3) заключение, в котором подводятся итоги изложенного материала, высказывается индивидуальная позиция студента по изложенному материалу.  Объем письменной работы в текстовом виде не должен превышать 30 страниц печатного текста. Работа сдается преподавателю в установленный графиком текущего контроля срок. Используя ниже приведенный список, необходимо сформировать стратегию применения технологий бережливого производства в исследуемой компании.  Для этого:  1.  Выберите модель организации проектной деятельности, предложите политику управления проектной деятельностью. Определите портфель проектов по бережливому производству, критерии оценки эффективности проектной деятельности и зоны ответственности по портфелю проектов различных ролей. 2. Приведите пример проекта по улучшению (реальный кейс предприятия) согласно методологии DMAIC в рамках предложенного портфеля проектов. Приведите описание каждого шага методологии, команды проекта; предложите процедуру рабочих встреч по исполнению проекта. 3. Разработайте систему мотивации для руководителей высшего и среднего звена, участников проектов и работников на местах реализации проектов. Пример возможных мероприятий, реализуемых в рамках проекта по бережливому производству (на примере конкретного процесса и продукта организации).  1. Снижение уровня несоответствий в производственном процессе. 2. Сокращение времени протекания процесса. 3. Снижение потерь в процессе. 4. Повышение стабильности процесса.   ТРЕБОВАНИЯ К ОФОРМЛЕНИЮ ТЕКСТОВЫХ ДОКУМЕНТОВ ИДЗ: 1) используйте программный продукт Microsoft Word; 2) поля  - 2 см со всех сторон; шрифт  - Times New Roman 14; межстрочный интервал - 1,5 см; абзацный отступ - 1,25 см; книжная ориентация страницы; номера страниц обозначаются сверху, выравнивание текста производится по центру; на титульном листе номер не ставится, нумерация начинается со 2 страницы; текст оформляется без переносов, выравнивание производится по ширине страницы. 3) на все рисунки обязательны ссылки; рисунок и заголовок (подпись) выравниваются посередине листа; заголовок рисунка оформляется под рисунком;   4) заголовок пишется обычным шрифтом (без курсива и подчеркивания); 5) на все таблицы в тексте обязательны ссылки, таблица должна идти сразу же; заголовок таблицы рекомендуется писать обычным шрифтом, никак не выделяя; заголовок таблицы выравнивается по правому краю, а сама таблица по середине листа; 6) при наличии ссылок на источники они размещаются сразу же после того объекта, к которому относятся [1, с. 151]; ссылки нумеруются арабскими цифрами по мере использования по тексту; ссылка на один и тоже источник имеет одинаковый номер; ссылки также указываются в списке использованных источников в порядке использования по тексту.. № 2 Тема: Теория вероятностей 1. В билете 3 вопроса. Студент знает 20 вопросов из 40. С какой вероятностью он сдаст экзамен, если достаточно ответить на 2 вопроса из трех. 2. В партии n = 100 изделий. Вероятность брака p = 0,02. Используя приближенную формулу Пуассона, найдите вероятность события, означающего, что в партии не более одного бракованного изделия. Вопрос № 1.  Производственная система включает в себя …  1. персонал и оборудование; 2. материалы и методы;  3. все перечисленное; 4. процессы. Вопрос № 2. Целью проекта по совершенствованию производственного процесса может являться:  1. повышение качества продукции;  2. повышение производительности оборудования;  3. все перечисленное;  4. расширение узкого места в процессе. Вопрос № 3. Проект по улучшению включает следующие этапы: 1. анализ текущего состояния;  2. проектирование целевого состояния;  3. все перечисленное;  4. анализ рисков перехода к целевому состоянию. Вопрос № 4. Применение методологии DMAIC не предусмотрено, когда:  1.   определены процессы во всей организации;  2. в организации отсутствует описание процессов;  3. всеми определенными процессами управляют и выполняют необходимые измерения;  4. все процессы в организации постоянно улучшают. Вопрос № 5.  Для оценки развития производственной системы внедряется учетная модель: 1. с едиными финансовыми показателями процесса для финансовых и производственных подразделений ;  2. оперативно отображающая виды брака в процессе;  3. оперативно отображающая виды брака в процессе;  4. с едиными финансовыми показателями процесса для финансовых и производственных подразделений. Вопрос № 6.  Анализ текущего состояния включает в себя: 1. картирование процесса;  2. анализ коренных причин потерь и проблем процесса;  3. поиск и идентификация потерь в процессе;  4. все перечисленное. Вопрос № 7. Переход к целевому состоянию предполагает: 1. реализацию плана мероприятий; 2. мониторинг процесса; 3. оценку достижения поставленных целей;  4. анализ рисков целевого состояния. Вопрос № 8.  На каких этапах проекта целесообразно проводить хронометраж? 1. Анализ текущего состояния; 2. Оценка условий труда; 3. Обучение сотрудников; 4. Планирование этапов проекта. Вопрос № 9.  Методология \"DMAIC\" направлена на: 1. все перечисленное; 2. повышение финансовой эффективности; 3. повышение безопасности; 4. обеспечение удовлетворенности потребителя. Вопрос № 10. Число дефектов (несоответствий) на миллион возможных дефектов рассчитывается с учетом: 1. всего перечисленного;  2. количества выявленных несоответствий;  3. количества произведенных единиц продукции;  4. количества видов несоответствий. Министерство науки и высшего образования Российской Федерации ФГАОУ ВО «Санкт-Петербургский государственный электротехнический университет «ЛЭТИ» имени В.И. Ульянова (Ленина)» ____________________________________________________________ ЭКЗАМЕНАЦИОННЫЙ БИЛЕТ № 1 Дисциплина Физические основы электронагрева   ИНПРОТЕХ 1. Принципы производственной системы ТРS (Toyota Production System) 2. Организация рабочего места по методике 5S 3. Задача. УТВЕРЖДАЮ Заведующий кафедрой                                                   И.И. Иванов. Основы концепции бережливого производства. Основные понятия, термины и определения. Предмет и задачи дисциплины. Значение концепции бережливого производства. Операционные ресурсы, подлежащие оптимизации. Взаимосвязь инструментов бережливого производства и инструментов управления качеством. Мировые практики, успешный опыт компаний. Обзор нормативно-правовой базы бережливого производства. Политика управления проектами по бережливому производству. Основные отличия бережливых проектов, взаимосвязь стратегии с проектной деятельностью, типы проектов, анализ наличия ошибок в организации; риски, связанные с проектной деятельностью. Модели организации проектной деятельности, политика управления проектной деятельностью. Критерии оценки эффективности проектной деятельности. Структурирование проектов, планирование портфеля проектов; зоны ответственности по портфелю проектов различных ролей. Организация и оценка эффективности применения бережливых технологий в процессах организации. Методология DMAIC. Исследование каждого шага методологии. Ведение проекта: документирование, календарное и ресурсное планирование, типовые проекты по разным типам задач, команда проекта; процедура рабочих встреч по исполнению проекта; ретроспективный анализ. Инфраструктура для реализации бережливых технологий. Ролевая структура управления проектами; формирование группы улучшения, как профиль компетенции ключевых участников проектной деятельности; программа обучения управлению проектами по бережливому производству. Планирование и мотивация совершенствования. Заключение. Преодоление сопротивления изменениям. Корпоративная культура и бережливое производство. Система гибкой мотивации для руководителей высшего и среднего звена, участников проектов и работников на местах реализации проектов.",
	  "text_proj": "Главный специалист Проектного офиса (внедрение инструментов бережливого производства)  Обязанности:  Организация коммуникационных встреч по внедрению инструментов бережливого производства; Анализ и оценка проводимых мероприятий; Разработка мероприятий по поиску и устранению потерь; Внедрение культуры непрерывных улучшений; Ведение контента о реализации проекта на корпоративном портале. Требования: Высшее образование; Опыт работы в проекта внедрения инструментов бережливого производства; Опыт в проектах совершенствования бизнес-процессов, повышения эффективности. Условия: Официальное оформление по ТК РФ;  Белая заработная плата;  График работы 5/2, работа в офисе с 9-00 до 18-00;  Выезды на предприятия по территории РФ;  Срочный трудовой договор.",
	  "need_match": true
  },
    {
	  "id_rp": "5321",
	  "id_proj": "521",
	  "name_rp": "Электропривод и автоматика",
	  "name_proj": "Сервисный инженер (автоматика)",
	  "text_rp":  "Цель дисциплины ознакомить студентам с компетенциями, приобретаемые в процессе обучения по направлению подготовки; с основными компонентами и характеристиками систем электропривода и автоматизации; особенностями применения автоматизированных электромеханических систем и комплексов в технологиях и формирование умения выполнять поиск информации по проблемам и вопросам профессиональной деятельности. 2. Задачи дисциплины:Формирование умения выполнять поиск информации по отдельным вопросам специальности; анализировать научно-техническую информацию, изучать отечественный и зарубежный опыт по тематике исследования. Освоение навыков участвовать в исследовании объектов и систем электропривода и автоматизации; понимать существо задач анализа и синтеза объектов специальности. 3. Знания в области возобновляемой энергетики 4. Умения выполнять поиск информации по отдельным вопросам специальности; анализировать научно-техническую информацию, изучать отечественный и зарубежный опыт по тематике исследования. 5. Навыки участия в исследовании объектов и систем электропривода и автоматизации; понимать существо задач анализа и синтеза объектов специальности.",
	  "text_proj": "Обязанности:  Монтаж и пусконалодчные работы оборудования автоматизации и КИПиА (ЧРП, датчики, автоматика и т.п) при спуске на воду и вводе в эксплуатацию 4 танкеров СПГ; Поиск и устранение неисправностей, при необходимости; Взаимодействие с отделом технической поддержки Компании в Европе (на англ.яз. – переписка и устно); Сдача работ, подписание первичных документов, актов; Взаимодействие с Заказчиками. Требования:  Высшее образование по направлению КИПиА / АСУ ТП / промышленная электроника / электропривод; Техническая грамотность, знание электроники, электрики, чтение электрических схем и чертежей; Практический опыт работы в сфере обслуживания автоматики / КИП / ПЛК / ЧРП не менее 3-5 лет; Приветствуется опыт работы электромехаником на месторождениях, судовым электромехаником, либо инженером с необходимыми компетенциями; Знания в области настройки и программирования PLC и ЧРП; Опыт работы с частотно-регулируемыми приводами ABB и оборудованием Schneider Electric Telemecanique будут являться преимуществом; Знания языка Unity будет являться преимуществом; Уверенное владение англ.яз.– устно и письменно не ниже intermediate/upper-intermediate. Условия:  Временный договор (ГПХ); Объект и локация: судостроительный завод, Приморский край; Характер работы: несколько вахт, длительностью по 3 недели; Объём работ сроком примерно на 4 месяца; Достойный уровень оплаты, по результатам собеседования; Место для проживания на объекте предоставляется, питание и проезд оплачивается.",
	  "need_match": true
  },
    {
	  "id_rp": "4530",
	  "id_proj": "4999",
	  "name_rp": "Информационные технологии проектирования радиоэлектронных средств",
	  "name_proj": "Инженер",
	  "text_rp":  " Целями изучения дисциплины является приобретение теоретических знаний об основах информационного обеспечения интеллектуальных систем и формирование практических умений и навыков построения и использования интеллектуальных систем проектирования и интеллектуальных систем автоматизации Задачами изучения дисциплины являются: - получение знаний о построении интеллектуальных конструкторско-технологических систем средствами мультимедиа; - необходимость освоить следующие умения и навыки: ориентироваться в современных интеллектуальных технологиях; осуществлять правильный выбор технологии применительно к решению конкретных задач конструирования и технологии ЭС. Формирование базовых знаний в области современных интеллектуальных технологий автоматизации и проектирования для решения конкретных задач конструирования и технологии ЭС Формирование умений и навыков работы с прикладными пакетами программ автоматизации и проектирования интеллектуальных систем, с текстовыми и графическими данными, электронными таблицами, с рядом систем multimedia. Освоение работы с прикладными пакетами программ автоматизации и проектирования интеллектуальных систем на основе знаний основ построения и использования интеллектуальных систем проектирования и интеллектуальных систем автоматизации; формирование навыков в использовании систем мультимедиа для разработки презентаций спроектированного конкретного изделия ЭС.",
	  "text_proj": "Обязанности: Участие в приемосдаточных испытаниях изделий. Участие в монтажных, пусконаладочных, швартовных и ходовых испытаниях изделий. Участие в наладке, настройке, регулировке, ремонте, испытаниях, сдаче в эксплуатацию, модернизации, унификации изделий и их составных частей. Требования: Высшее (радиотехническое) образование. Знание руководящих и нормативных материалов по вопросам, связанным с проектированием радиоэлектронных средств (устройств). Знание принципов устройства радиотехнического оборудования. Навык ремонта радиотехнического оборудования. Уверенный пользователь ПК. Умение устанавливать и настраивать ОС, драйверы, стандартное ПО. Умение пользоваться средствами вычислительной техники, коммуникации и связи. Знание электротехники, радиоэлектроники. Готовность к командировкам. Условия: График работы: пятидневная рабочая неделя, рабочий день с 8:30 до 17:30 (сб, вс - выходные), пт - сокращенный рабочий день.",
	  "need_match": true
  },
    {
	  "id_rp": "8000",
	  "id_proj": "8001",
	  "name_rp": "Проектирование и эксплуатация солнечных и ветровых электростанций",
	  "name_proj": "Проекты ветряных электростанций (ВЭС)",
	  "text_rp":  " Целями освоения дисциплины \"Проектирование и эксплуатация солнечных и ветровых электростанций\" являются освоение теоретических и практических вопросов в области эксплуатации и проектирования солнечных и ветро- электростанций. Задачами обучения в рамках дисциплины является: обеспечить необходимый объем знаний основных принципов проектирования, строительства и эксплуатации солнечных и ветровых электростанций; дать информацию о составе основных сооружений и оборудования, методах расчета их параметров и режимах работы, принципах эксплуатации и основных мерах по обеспечению безопасности энергетических объектов; научить принимать и обосновывать расчетами конкретные технические решения при последующем выборе параметров для конструирования элементов солнечных и ветровых электростанций. После изучения данной дисциплины студент должен показывать следующие знания в части: основных принципов и этапов проектирования нетрадиционных и возобновляемых источников энергии; компоновочных решений основных типов установок для использования нетрадиционных и возобновляемых источников энергии; технико-экономические характеристики установок нетрадиционных и возобновляемых источников энергии. Показывать умение использовать современные компьютерные технологии в решении задач оценки потенциала НИВИЭ, оптимизации параметров, проектировании и эксплуатации установок для использования нетрадиционных и возобновляемых источников энергии. Владеть навыками использования конкретных методик проектирования, оптимизации параметров и выбора оборудования.",
	  "text_proj": "Проекты ветряных электростанций (ВЭС) являют собой устойчивые решения в области возобновляемых источников энергии, основанные на преобразовании кинетической энергии ветра в электричество, которое можно использовать на месте или продавать в распределительную электрическую сеть. Энергия ветра очень быстро развивается в Европе и во всем мире, и за последние 5 лет на долю ветроэнергетики приходится более одной трети всех установленных генераторов в мире. Стремительный рост отрасли обусловлен как подогреваемым интересом инвесторов, так и феноменальными успехами в проектировании ветроэлектростанций и увеличении мощности генераторов. Бизнес стоимостью в сотни миллиардов долларов за несколько лет успел привлечь инвестиции таких гигантов, как Siemens и General Electric. Инвестиции в ветроэнергетику руководствуются требованиями рентабельности и устойчивости. Если вы представляете энергетическую компанию, мы даем вам возможность инвестировать в установку отдельных турбин или целые ветровые фермы разных размеров. Одним из преимуществ инвестирования в собственное производство электроэнергии с помощью ветра является предсказуемость затрат на электроэнергию. В это же время вы помогаете сделать производство электроэнергии более чистым. Как крупные, так и мелкие энергетические компании могут обеспечить своих клиентов экологически чистым электричеством благодаря привлекательным предложениям.",
	  "need_match": true
  },

    {
	  "id_rp": "8004",
	  "id_proj": "8005",
	  "name_rp": "Теория и практика межкультурной коммуникации",
	  "name_proj": "Филолог / лингвист / преподаватель русского языка и литературы / юрист",
	  "text_rp":  " Курс «Основы языкознания» призван познакомить студентов-лингвистов с классическими и современными направлениями и течениями науки о языке, дать общее представление об основных разделах языкознания, а также о базовых понятиях, которыми оперирует эта наука. Теоретические положения иллюстрируются примерами на конкретном материале славянских, германских, романских и некоторых других языков. Целью изучения дисциплины является создание целостного представления о языковой системе на основе формирования знаний основных закономерностей языковых трансформаций в синхронии и диахронии, освоения навыков применения классических и современных методов исследований и формирования умений адекватного применения иметодов лингвистических исследований. Овладение фундаментальными знаниями основ языкознания. Формирование знаний об основных закономерностях языковых изменений. Освоение навыков лингвистических исследований. Формирование умений адекватно применять методы лингвистических исследований для анализа языковых явлений. Знание фундаментальных основ языкознания. Знание основных закономерностей. Знание тенденций языковых трансформаций. Умение использовать понятийный аппарат теоретической и прикладной лингвистики. Умение анализировать и обобщать информацию. Навыки исследовательской работы,  навыки использования лингвистических терминов, навыки изложения лингвистических теорий.",
	  "text_proj": "Центр тестирования иностранных граждан ищет филолога / лингвиста / преподавателя русского языка и литературы для проведения комплексных экзаменов по русскому языку, истории России и основам законодательства РФ для иностранных граждан и лиц без гражданства на уровне, соответствующем цели получения:  - разрешения на работу / патента;  - разрешения на временное проживание в РФ;  - вида на жительство в РФ.  Также для проведения экзамена по русскому языку для иностранных граждан и лиц без гражданства для приёма в гражданство Российской Федерации.  Обязанности:  общение с кандидатами; проведение тестирования; работа с документами; обработка материалов кандидатов. Требования:  — наличие диплома по одной из указанной специальности: «Филология», «Лингвистика», «Юриспруденция» или же «Учитель русского языка и литературы»;  готовность к работе с людьми; знание ПК на уровне уверенного пользователя; внимательность. Условия: зарплата от 50000 рублей; выплаты два раза в месяц; график работы: с ПН по ПТ, с 10:00 до 18:00; иногда требуется выход на работу в СБ и ВС.",
	  "need_match": true
  },
    {
	  "id_rp": "8006",
	  "id_proj": "8007",
	  "name_rp": "Беспроводные сети",
	  "name_proj": "Инженер беспроводных сетей",
	  "text_rp": "В курсе изучаются: Общие вопросы истории и перспектив развития систем мобильной связи, понятие спектральной эффективности, обеспечение мобильности, варианты радиоинтерфейсов, принципы использования радиочастот, санитарные нормы, сотовые сети как системы массового обслуживания, gринципы организации радиоканалов в сотовых сетях, виды множественного доступа, общая структура линий связи, характеристики канала связи, понятие бюджета радиолинии, расчет затухания на простейших трассах, оценка возможной дальности связи, модели типовых трасс, телекоммуникационные антенны и их характеристики, система GSM, технологии пакетной передачи данных в сетях 2.5 G, технологии 4G (LTE), 5G, перспективы технологий 6G.  Целью изучения дисциплины является приобретение теоретических знаний  основных принципов организации беспроводных сетей и систем, особенностей построения и методов их анализа,  и формирование практических умений и навыков анализа характеристик беспроводных сетей и систем, анализа технической информации и исходных данных. Задачи дисциплины: - изучение принципов организации беспроводных сетей, - изучение структуры и характеристик сетей 2G...5G, перспектив сетей 6G, - формирование умений и навыков анализа характеристик беспроводных систем, анализа технической информации и исходных данных при построении беспроводных сетей. Знания истории и перспектив развития систем мобильной связи, понятия спектральной эффективности, обеспечение мобильности, вариантов радиоинтерфейсов, принципов использования радиочастот, основных санитарных нормы, принципов организации радиоканалов в сотовых сетях, видов множественного доступа, структуры линий связи, основных характеристик канала связи, бюджета радиолинии, методов расчет затухания на простейших трассах, и оценки возможной дальности связи, моделей типовых радиотрасс, структуры и характеристик системы 2G (GSM), технологии пакетной передачи данных в сетях 2.5 G, технологий 3G, 4G (LTE), 5G, перспектив технологий 6G. Умения анализировать  характеристики канала связи, бюджет радиолинии, выполнять расчет затухания на простейших трассах, производить оценку возможной дальности связи. Формирование навыков анализа технической информации и исходных данных с целью формированию плана развития, выработке и внедрению научно обоснованных решений по оптимизации сетей связи, расчета, проектирования систем беспроводной связи с подвижными объектами." ,
	  "text_proj": " CTI - Communication Technology Innovations - лидер системной интеграции и производства программного обеспечения, специализирующийся в области IP-коммуникаций. Компания CTI работает на российском рынке с 2002 года и оказывает весь спектр услуг, связанных с созданием, управлением, развитием и поддержкой ИТ и телекоммуникационной инфраструктуры заказчика.  Более 500 заказчиков компании - крупнейшие операторы связи, банки, государственные структуры. В подразделении Сервиса - более 130 активных проектов.  Обязанности:  Выполнение полного цикла работ по проекту от ТЗ до внедрения и сдачи системы заказчику; Участие в продажах решений в качестве presale инженера; Консультирование сотрудников и клиентов компании по техническим вопросам работы решений предлагаемых компанией; Проработка решений по построению или модернизации беспроводных сетей; Презентация предлагаемых решений заказчику; Участие в переговорах с заказчиком, консультирование и выявление его потребностей, защита предлагаемых решений, подготовка ТЗ, ТКП; Взаимодействие с поставщиками оборудования и программного обеспечения по техническим вопросам; Выполнение работ по радиопланированию и радиообследованию объектов; Составление спецификаций на оборудование и ПО с использованием конфигураторов производителей; Шефмонтаж точек доступа, установка и настройка оборудования и ПО, интеграция со смежными системами; Составление проектной, исполнительной и эксплуатационной документации; Проведение пилотных проектов, изучение новых продуктов, тестирование оборудования, как в лабораторных условиях, так и на площадке заказчика с последующим составлением заключения о полученных результатах; Подготовка демонстрационных стендов для выставок; Участие в работе службы технической поддержки. Требования:  Понимание архитектуры построения, принципов и механизмов работы современных проводных и беспроводных сетей; Знание сетевых и беспроводных технологий; Знание продуктовой линейки Cisco Systems, используемых при создании инфраструктуры Wi-Fi, умение грамотно составлять спецификации; Знание семейства протоколов IEEE802.11a/b/g/n/ac, технологий MIMO, Flexconnect, Clientlink, CleanAir, AVC, WMM, QoS over Wi-Fi, концепции BYOD, стандартов IEEE 802.11; Опыт проектирования и внедрения централизованных Wi-Fi сетей с учётом требований по управляемости, производительности, отказоустойчивости и безопасности; Опыт построения и обслуживания Wi-Fi сетей предприятий; Будет преимуществом: Наличие сертификатов CCNAW, CCNPW или сертификатов других производителей Wi-Fi оборудования; Знание оборудования Wi-Fi нескольких производителей; Работа в компании системном интеграторе; Работа с программными продуктами AirMagnet и Ekahau; Опыт развёртывания и администрирования VMware; Знание английского языка на уровне чтения технической документации, базовое знание – на уровне переписки и устного общения; Организованность, умение вежливо общаться с любым клиентом; Желание и умение самообучаться; Умение работать в условиях временного стресса и приоритизации задач; Умение работать в коллективе.",
	  "need_match": true
  },
    {
	  "id_rp": "8008",
	  "id_proj": "8009",
	  "name_rp": "Семантические технологии и многоагентные системы",
	  "name_proj": "Проект открытой семантической технологии компонентного проектирования интеллектуальных систем",
	  "text_rp":  " Дисциплина включает в себя изучение основных моделей представления знаний и методов их обработки: логическая модель, продукционная модель, фреймы, семантические сети; основ организации, построения и использования экспертных систем; методов поиска решений в пространстве состояний. Практические занятия ориентированы на исследование методов представления знаний и вывода во фрейм-продукционных системах, освоение методов управления выводом в экспертных системах, разработку экспертной системы на основе продукционных знаний, исследование и реализацию поиска в пространстве состояний. Цели изучения дисциплины: - изучение моделей представления знаний, теоретических основ, методов и средств построения систем искусственного интеллекта на основе использования современных интеллектуальных технологий; - приобретение умений и навыков программирования интеллектуальных систем. Задачи изучения дисциплины: - формирование представления о парадигме продукционного программирования; - совершенствование и реализация умений решения прикладных задач в данной парадигме с использованием новых математических методов; - приобретение практических навыков продукционного программирования. Знания моделей представления знаний, языка продукционного программирования, методов решения задачи поиска в пространстве состояний. Умения анализировать профессиональную информацию, выделять в ней главное, структурировать, оформлять и программировать на языке продукционного программирования, разрабатывать алгоритмы и программные средства для решения задач в области создания и применения искусственного интеллекта, в том числе с учетом требований информационной безопасности. Приобретение навыков формализации интеллектуальных задач с помощью языков искусственного интеллекта, разработки оригинальных алгоритмов и программ в рамках продукционной парадигмы.",
	  "text_proj": "В работе рассматривается открытый проект, направленный на создание и развитие технологии компонентного проектирования интеллектуальных систем. Первая часть статьи содержит разработанные авторами принципы построения технологии проектирования интеллектуальных систем, основанных на онтологиях и семантическом представлении знаний. Обсуждается использование накопленного опыта современных информационных технологий, применение графодинамических моделей обработки информации. В частности, предлагается ориентироваться на параллелизм и асинхронность, на смысловые модели представления и обработки знаний, на графовые языки программирования. Авторы рекомендуют делать упор на унификацию абстрактного смыслового представления знаний, унификацию структуризации баз знаний и формального описания поведения агентов обработки информации в графодинамической семантической памяти.",
	  "need_match": true
  },
  {
	  "id_rp": "8010",
	  "id_proj": "8011",
	  "name_rp": "Интеллектуальные технологии управления рисками",
	  "name_proj": "руководитель отдела международной лингвистики и ВЭД",
	  "text_rp":  "Дисциплина предназначена для подготовки специалиста, обладающего знаниями правовых, экономических и организационных основ управления рисками, умениями по построению количественных и качественных оценок меры риска, алгоритмами выбора рациональных решений с учетом анализа рисковых ситуаций, необходимых для эффективного решения профессиональных задач. В результате изучения данного курса обучающиеся получат знания и навыки сбора данных о рисках, анализа рисковых событий, формирования комплекса мероприятий по противодействию риску как части единой политики, направленной на повышение эффективности таможенного контроля. Цель изучения дисциплины заключается в формировании у обучающихся комплекса профессиональных компетенций в области интеллектуальных технологий управления таможенными рисками, ознакомлением с зарубежной и отечественной практикой функционирования систем управления рисками. Задачи дисциплины: - формирование совокупности знаний в области управления рисками в таможенном деле; - ознакомление с особенностями создания и функционирования системы управления рисками в таможенных органах России и за рубежом; - изучение методов выявления рисков, элементов и инструментов системы управления рисками; - формирование умений и навыков организации процесса идентификации рисков и разработки противорисковых мероприятий с целью сокращения потерь. Приобретение знаний правовых, экономических и организационных основ управления рисками. Получение умений по построению количественных и качественных оценок меры риска, алгоритмами выбора рациональных решений с учетом анализа рисковых ситуаций, необходимых для эффективного решения профессиональных задач. Выработка навыков: - проведения таможенного контроля, - самостоятельного принятия решений в нестандартных ситуациях применения системы управления рисками при проведении таможенного контроля; - применения профилей рисков при осуществлении таможенного контроля товаров и транспортных средств; - формирования профессиональных качеств, необходимых для оптимального решения задач организации и проведения таможенного контроля товаров и транспортных средств на любом уровне иерархии управления таможенных органов России с учетом применения системы управления рисками.",
	  "text_proj": " Торгово-промышленная группа «ТАЙПИТ» приглашает присоединиться к команде РУКОВОДИТЕЛЯ ОТДЕЛА МЕЖДУНАРОДНОЙ ЛОГИСТИКИ И ВЭД.  Компания занимает топовые позиции на рынках офисных кресел, промышленных расходомеров, приборов учёта энергии, компьютерных корпусов, медицинского оборудования. ЭКСКЛЮЗИВНЫЙ ДИСТРИБЬЮТОР в России и странах СНГ товаров под торговыми марками Chairman, InWin, Konner, PowerMan, HEBA.  Мы не останавливаемся на достигнутом и находимся в постоянном поиске новых идей, обеспечивая тем самым своё непрерывное и поступательное развитие. По ряду товарных групп компания осуществляет ПРОИЗВОДСТВО ПОЛНОГО ЦИКЛА в России.  ЧТО НУЖНО ДЕЛАТЬ:  Оперативное управление внешнеэкономической деятельностью. Взаимодействие с таможенными органами. Работа по административному обжалованию решений таможенных органов. Решение вопросов и нестандартных ситуаций, возникающих в процессе перевозки и таможенного оформления. Мониторинг изменений в таможенном законодательстве и анализ рисков. Организация, контроль, оптимизация и управление логистическими цепочками. Мониторинг рынка международных перевозок и услуг таможенных представителей. Взаимодействие с органами по сертификации, контроль своевременного оформления документов сертификации продукции. НАШИ ОЖИДАНИЯ: Знание ВЭД, законодательства в области таможенного оформления, товарно-сопроводительной и таможенной документации, ТН ВЭД, Инкотермс. Владение контрактными, юридическими, финансовыми аспектами логистической деятельности, знание международного права и законодательства РФ в части регулирования при выполнении международных перевозок. Опыт оформления деклараций о соответствии и сертификатов о происхождении, предоставление в испытательные лаборатории технических документов и образцов продукции. Опыт работы по направлению и на аналогичной должности не менее 5-6 лет. Владение английским языком на уровне intermediate B1 и выше (устный и письменный). Высшее образование (экономическое/логистика/ВЭД). Хорошее знание 1С, офисных программ. Высокие аналитические способности и коммуникативные навыки. Способность креативно и критически мыслить, предлагать варианты решений с наименьшими рисками.",
	  "need_match": true
  },
    {
	  "id_rp": "8014",
	  "id_proj": "8015",
	  "name_rp": "Микроволновые управляющие устройства",
	  "name_proj": "Инженер - разработчик СВЧ техники",
	  "text_rp": "Изучение дисциплины призвано сформировать у студентов представление об устройствах, позволяющих управлять амплитудой, фазой и частотой сверхвысокочастотных электромагнитных колебаний. Основное внимание уделяется управляющим устройствам на полупроводниковых приборах – диодах и транзисторах. Изучаются различные типы микроволновых управляющих устройств: переключатели, ограничители мощности, аттенюаторы, фазовращатели, частотно-перестраиваемые фильтры. Цель дисциплины – cформировать у студентов представление об устройствах, позволяющих управлять амплитудой, фазой и частотой сверхвысокочастотных электромагнитных колебаний, методах их расчета и проектирования. Задачи дисциплины включают: ­- получение базовых знаний в области микроволновых управляющих и частотно-перестраиваемых устройств; -­ формирование умения рассчитывать электрические и конструктивные параметров изучаемых устройств, навыков их проектирования и моделирования частотных характеристик. В процессе освоения дисциплины студенты приобретают знания о принципах действия, схемах, конструкциях, характеристиках, инженерных методах расчета и проектирования микроволновых управляющих и частотно-перестраиваемых устройств. В результате освоения дисциплины студенты приобретают умения рассчитывать электрические и конструктивные параметры микроволновых управляющих и частотно-перестраиваемых устройств в интегральном исполнении с учетом заданных требований. В ходе изучения дисциплины студенты получают навыки разработки и моделирования частотных характеристик изучаемых микроволновых управляющих и частотно-перестраиваемых устройств.",
	  "text_proj": "Обязанности: Разработка модулей ВЧ генераторов (на кварцевых резонаторах) и модулей СВЧ генераторов (на ПАВ резонаторах, на коаксиальных керамических резонаторах, на микрополосковых резонаторах, на диэлектрических резонаторах) с низким уровнем фазовых шумов. Расчёт пассивных СВЧ устройств (делителей/сумматоров мощности, направленных ответвителей, СВЧ и НЧ фильтров, умножителей и смесителей частоты). Расчёт активных СВЧ устройств (усилителей частоты, электронных фазовращателей). Расчёт и разработка прецизионных малошумящих систем ФАПЧ. Расчёт и разработка систем обеспечения виброзащиты и термостатирования модулей ВЧ и СВЧ генераторов.  Разработка малошумящих стабилизаторов напряжения.  Регулировка и проведение испытаний ВЧ и СВЧ модулей, анализ полученных данных.  Работа с конструкторским и технологическим отделом на этапе разработки и внедрения в производство.  Требования: Образование - высшее (радиотехническое); Опыт разработки СВЧ техники не менее 5 лет;  Опыт работы с измерительным оборудованием: векторные анализаторы цепей, анализаторы спектра, анализаторы шума, осциллографы, мультиметры, лабораторные СВЧ генераторы, лабораторные источники питания, частотомеры, стандарты частоты, камеры тепла/холода, вибростенды.  Знание ПК - опытный пользователь;  Знание специальных программ: ADS, SolidWorks, Компас, AutoCAD, Altium Designer (приветствуется CST Microwave studio, ANSYS HFSS, AWR Design Environment).  Знание английского языка на уровне чтения технической литературы и переписки.",
	  "need_match": true
  },
   {
	  "id_rp": "8016",
	  "id_proj": "8017",
	  "name_rp": "Основы проектной деятельности",
	  "name_proj": "Руководитель проектной группы",
	  "text_rp": "Дисциплина знакомит студентов с понятиями и основными этапами проектной деятельности. В рамках курса рассматриваются вопросы методов управления проектами, планирования, распределения ресурсов и управления рисками. Описываются программные продукты, используемые для управления проектами на предприятиях предметной деятельности. Цель дисциплины –  изучение основных видов проектной деятельности, этапов жизненного цикла проекта с целью получения знаний о методах оценки эффективности и управления проектами и формирование умений и навыков применения их в профессиональной деятельности. Задачи дисциплины: Изучение основных видов проектной деятельности, этапов жизненного цикла проекта с целью получения знаний о методах оценки эффективности и управления проектами. Формирование навыков организации командной работы над проектами, использования инструментов совместной работы над проектами, а также средств представления результатов. Знания основных видов проектной деятельности, этапов жизненного цикла проекта Освоение умений декомпозиции проекта, контроля выполнения проекта, расчета и анализа показателей эффективности проектной команды и результатов. Навыки организации командной работы над проектами, использования инструментов совместной работы над проектами, а также средств представления результатов." ,
	  "text_proj": "Обязанности:  Изучение исходных данные по проекту;  Анализ и соблюдение требований проекта;  Подготовка и запуск проектов;  Выстраивание коммуникаций по проекту;  Производственные работы по исполнению проекта;  Формирование комментариев по себестоимости потенциальных проектов;  Осуществлять выполнение проектных работ согласно договору;  Контроль оказания услуг (выполнения работ) на объекте;  Осуществлять свою деятельность, на основании утвержденной сметы затрат на оказание услуг (выполнение работ) по объекту на основе определенных объемов, сроков, средств труда и количества персонала;  Осуществлять свою деятельность на основании документации, регламентирующей работу персонала на объекте;  Осуществлять проектную деятельность на основании полученного Технического Задания;  Разрабатывать и согласовывать мероприятия по устранению и предупреждению выявленных отклонений в качестве оказанных услуг;  Выявлять, уведомлять об отклонения в реализации проектов и своевременно устранять;  Формировать и согласовывать условия (ресурсы) для осуществления проекта;  Достигать выполнения поставленных целей и задач Организации;  Анализ технического задания проекта;  Достигать результативное и эффективное использование ресурсов Организации. Требования: Высшее образование; Опыт работы от 2-х лет ; Грамотная речь, внимательность, стрессоустойчивость; Уверенное владение ПК; Обучаемость; Умение работать с большим объемом информации;",
	  "need_match": true
  },
   {
	  "id_rp": "8018",
	  "id_proj": "8019",
	  "name_rp": "Электрические машины",
	  "name_proj": "Инженер-конструктор 3 категории (СКБ по проектированию электрических машин)",
	  "text_rp":  " В дисциплине рассматриваются наиболее общие вопросы электромеханического преобразования энергии. Основное внимание уделяется устройству и принципу действия электрических машин разных типов, а также их свойствам. Рассматриваются конструкция, принцип действия, характеристики машин постоянного и переменного тока. Цель дисциплины - приобретение знаний, умений и навыков о принципе действия различных типов электрических машин, их конструкции, пусковых и рабочих свойств. Задачи дисциплины: приобретение знаний конструкции машин постоянного и переменного тока; приобретение знаний физических основ преобразования энергии в электрических машинах; приобретение умений работы с электрическими машинами, включения их в сеть, регулирования параметров; приобретение навыков анализа процессов, происходящих в электрических машинах, схем включения электрических машин; знание конструкции и принципа действия электрических машин, физических основ преобразования энергии умение анализировать свойства и характеристики электрических машин разных типов владение навыками анализа процессов и явлений в электрических машинах",
	  "text_proj": " В ВАШИ ЗАДАЧИ БУДЕТ ВХОДИТЬ:  1) Разработка конструкторской документации на электрические машины номенклатуры сектора в соответствии с техническими заданиями, с использованием стандартизируемых и унифицированных деталей и сборочных единиц.  2) Согласование конструкторских документов с техническими службами завода, и подразделениями Общества.  3) Выезд в командировки на места эксплуатации электрических машин и на объекты заказчиков.  4) Осуществление авторского надзора за изготовлением электрических машин номенклатуры сектора.  МЫ ОЖИДАЕМ ОТ ВАС:  Знание технических требований, предъявляемых к электрическим машинам;  Знание требований действующей единой системы конструкторской документации (ЕСКД);  Умение работать с автоматизированными системами проектирования (NX, Solid Works, AutoCAD);  Общая техническая грамотность;  Навыки проектирования электрических машин будут Вашим преимуществом;  Навыки ведения деловой переписки по вопросам профессиональной деятельности.",
	  "need_match": true
  },
  {
	  "id_rp": "8020", 
	  "id_proj": "8021",
	  "name_rp": "Основы построения широкополосных систем информационного обмена",
	  "name_proj": "Разработчик моделей цифровых систем беспроводной связи" ,
	  "text_rp": " Рассматриваются причины популярности широкополосной идеологии в современных системах информационного обмена. Показывается, что при выходе за рамки классической модели гауссовского канала и расширении набора показателей качества (помехоустойчивость к нешумовым помехам, скрытность, криптозащищенность, совместимость, работоспособность в условиях фединга) широкополосные принципы весьма перспективны, а во многих случаях попросту не имеют альтернативы. Рассматриваются проблемы оптимизации сигналов при решении классических задач обнаружения - различения - измерения параметров сигналов. Вводится обобщенная модель дискретного сигнала, приводится систематизация сигналов по форматам модуляции. Приводится обзор известных ФМ сигналов с хорошими апериодическими автокорреляционными свойствами и обосновывается необходимость первоочередного внимания к периодическим автокорреляционным функциям. Вводятся и обосновываются критерии выбора сигнатурных ансамблей для беспроводных многоабонентских информационных сетей с кодовым разделением. В результате изучения дисциплины студенты должны: - обрести способность совершенствовать и развивать свой интеллектуальный и общекультурный уровень; - развить способность осваивать современные перспективные направления развития телекоммуникационных систем и сетей; - научиться реализовывать новые принципы построения телекоммуникационных систем различных типов, передачи и распределения информации в сетях связи; - научиться использовать современные достижения науки и передовые инфокоммуникационные технологии, методы проведения теоретических и экспериментальных исследований в научно-исследовательских работах в области техники и технологии электросвязи; - самостоятельно выполнять экспериментальные исследования для решения научно-исследовательских и производственных задач с использованием современной аппаратуры и методов исследования; - приобрести способность участвовать в научных исследованиях в группе, ставить задачи исследования, выбирать методы экспериментальной работы. В результате изучения дисциплины студенты должны: - получить знания о теоретических основных и инструментарии синтеза и обработки широкополосных сигналов систем информационного обмена, а также подходы к оптимизации используемых сигнальных форматов при их проектировании; - сформировать навыки решения задач адекватного выбора сигналов для широкополосных систем информационного обмена; синтеза оптимальных и квазиоптимальных процедур извлечения информации из принимаемых сигналов, умения применять теоретико-информационные концепции в современных системах и сетях связи; - владеть умениями синтеза и расчета показателей качества радиоэлектронных систем и комплексов и иметь представления о направлениях развития широкополосных методов в перспективной информационной системотехнике. В результате изучения дисциплины студенты должны: - приобрести знания теоретических основ и инструментария синтеза и обработки широкополосных сигналов систем информационного обмена, основ теории информации, теории кодирования и криптографии; - научиться решать задачи адекватного выбора сигналов для широкополосных систем информационного обмена; синтезировать оптимальные и квазиоптимальные процедуры извлечения информации из принимаемых сигналов, применять теоретико-информационные концепции в современных системах и сетях связи. В результате изучения дисциплины студенты должны приобрести умения: - решать задачи адекватного выбора сигналов для широкополосных систем информационного обмена; - синтезировать оптимальные и квазиоптимальные процедуры извлечения информации из принимаемых сигналов; - применять теоретико-информационные концепции в современных системах и сетях связи; - овладеть умениями синтеза и расчета показателей качества радиоэлектронных систем и комплексов и получить представления о направлениях развития широкополосных методов в перспективной информационной системотехнике. Должны овладеть навыками и методиками синтеза и расчета показателей качества радиоэлектронных систем и комплексов; техникой построения помехоустойчивых кодов, а также кодеров и декодеров.", 
	  "text_proj": " Обязанности: Построение моделей элементов цифровых систем связи в среде Matlab; Проектирование алгоритмов цифровой обработки сигналов и управления работой сети; Выполнение моделирования систем беспроводной связи, анализ результатов моделирования; Оптимизация производительности Matlab моделей и алгоритмов на вычислительном кластере; Подготовка технической документации Требования: Знание методов цифровой обработки сигналов; Знание принципов работы приемопередающих устройств систем связи; Знание методов помехоустойчивого кодирования; Знание языка программирования Matlab, опыт работы в средах Matlab/Octave. ",
	  "need_match": true
  },
   {
	  "id_rp": "8022", 
	  "id_proj": "8023",
	  "name_rp": "Дискретная математика и теоретическая информатика",
	  "name_proj": "Математик-алгоритмист",
	  "text_rp": " Главной целью освоения дисциплины (модуля) \"Дискретная математика и математическая логика\" является обучение студентов методам решения задач дискретной математики и соответствующему мышлению. В процессе обучения требуется дать студентам запас базовых знаний по основным разделам дискретной математики, обучить рациональному и эффективному использованию полученных знаний при решении типовых задач дискретной математики и математической логики; сформировать у студентов представление о дискретной математике и математической логике как методах изучения широкого круга объектов и процессов, характеризующихся отсутствием свойства непрерывности; сформировать знания, умения и навыки использования основных понятий теории графов, теории автоматов, теории булевых функций. Формирование логической и математической культуры студента, фундаментальная подготовка в области математической логики, овладение современным математическим аппаратом для дальнейшего использования в приложениях. ",
	  "text_proj": " Обязанности: Разработка алгоритмов программно-математического обеспечения для авиационных пилотажно-навигационных комплексов: решение задач по обработке (комплексированию) информации на основе методов оптимальной статистической фильтрации случайных процессов, решение задач построения оптимальных программ полета, решение задач навигации и управления (стабилизации движения), решение специальных задач;  Разработка, согласование и сопровождение технической документации в области пилотажно-навигационных комплексов: логики и алгоритмов работы, методики проверки режимов комплекса, программы функционирования;  Проведение математического моделирования работы режимов пилотажно-навигационных комплексов и имитация различных условий функционирования;  Работа с различной документацией по эксплуатации пилотажно-навигационных комплексов, с описаниями входящих систем, с протоколами информационного взаимодействия, с комплексом правил и норм в соответствии с ГОСТ;  Организация работы и ведение рабочей переписки с организациями соисполнителями;  Участие в полунатурных и летных испытаниях при отработке и проверке задач комплексов;  Участие в работах в рамках НИОКР..   Требования: Образование – высшее (математика, инженерные и технические науки), высокий средний балл;  Аналитический склад ума;  Наличие военного билета (для военнообязанных);  Опыт - приветствуется;  Свободное владение ПК (MS Office, MS Power Point, MS Visio);  Уверенные знания теории обработки сигналов, теории вероятностей и математической статистики, дискретной математики;  Базовые знания теории управления, теории устойчивости, теории алгоритмов;  Базовые знания С/С++, Мatlab, Maple;  Техническая грамотность и правильность письменной речи;  Ответственность, обучаемость;  Язык - английский базовый, английский технический. ",
	  "need_match": true
  }
 
]